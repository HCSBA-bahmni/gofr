{"remainingRequest":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr2/src/components/DataSources/ViewDataSources.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr2/src/components/DataSources/ViewDataSources.vue","mtime":1619088989363},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ViewDataSources.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+jfile":"ViewDataSources.vue","sourceRoot":"src/components/DataSources","sourcesContent":["<template>\n  <v-container fluid>\n    <v-dialog\n      v-model=\"deleteConfirm\"\n      width=\"630px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"error\"\n          dark\n        >\n          <v-toolbar-title>\n            This will delete the datasource {{server.name}} from the database\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"deleteConfirm = false\"\n          >\n            <v-icon>close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          <label v-if='loadingPairs || pairs.length > 0'>\n            Below data source pairs (mapping) will also be deleted\n            <v-data-table\n              :headers=\"pairsHeaders\"\n              :items=\"pairs\"\n              hide-actions\n              :loading=\"loadingPairs\"\n            >\n              <template\n                slot=\"items\"\n                slot-scope=\"props\"\n              >\n                <td>{{ props.item.source1Name }} - {{props.item.source2Name }}</td>\n                <td>{{ props.item.owner }}</td>\n              </template>\n            </v-data-table>\n          </label>\n          <label v-else>\n            There is no any data source pair (mapping) associated with this data source<br>\n          </label>\n          <br>\n          <b>Do you want to proceed and delete?</b>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"error\"\n            @click=\"deleteConfirm = false\"\n          >Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"success\"\n            @click=\"deleteDataSource\"\n          >Yes</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      v-model=\"editDialog\"\n      width=\"530px\"\n    >\n      <v-card width='530px'>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Editing {{server.host}}\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"editDialog = false\"\n          >\n            <v-icon>close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          <v-layout column>\n            <v-flex xs1>\n              <v-text-field\n                v-model=\"server.name\"\n                label=\"Name\"\n                disabled\n              ></v-text-field>\n            </v-flex>\n            <v-flex xs1>\n              <v-text-field\n                v-model=\"server.host\"\n                label=\"Host\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex xs1>\n              <v-select\n                :items=\"$store.state.remoteDataSources\"\n                v-model=\"server.sourceType\"\n                label=\"Source Type\"\n              ></v-select>\n            </v-flex>\n            <v-flex xs1>\n              <v-text-field\n                v-model=\"server.username\"\n                label=\"User Name\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex xs1>\n              <v-text-field\n                v-model=\"server.password\"\n                label=\"Password\"\n                type=\"password\"\n              ></v-text-field>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n        <v-card-actions style='float: center'>\n          <v-btn\n            color=\"error\"\n            @click.native=\"editDialog = false\"\n            style=\"color: white\"\n          >\n            <v-icon\n              dark\n              left\n            >cancel</v-icon>Cancel\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            dark\n            @click.native=\"saveEdit('match')\"\n          >\n            <v-icon left>save</v-icon>Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      v-model=\"shareDialog\"\n      width=\"530px\"\n    >\n      <v-card width='530px'>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Sharing {{shareSource.name}}\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"shareDialog = false\"\n          >\n            <v-icon>close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          <template v-if=\"loadingLocationTree\">\n            <v-progress-linear :indeterminate=\"true\"></v-progress-linear>\n          </template>\n          <template v-else>\n            <v-card-text>\n              <p>\n                <liquor-tree\n                  @node:selected=\"locationSelected\"\n                  :data=\"locationTree\"\n                  :options=\"{}\"\n                  ref=\"locationTree\"\n                />\n              </p>\n            </v-card-text>\n          </template>\n          <v-icon small>lock</v-icon> Limiting Sharing to: <b>{{limitLocationName}}</b>\n          <v-text-field\n            v-model=\"searchUsers\"\n            append-icon=\"search\"\n            label=\"Search\"\n            single-line\n            hide-details\n          ></v-text-field>\n          <v-data-table\n            :headers=\"usersHeader\"\n            :items=\"users\"\n            :search=\"searchUsers\"\n            class=\"elevation-1\"\n            item-key=\"firstName\"\n          >\n            <template v-slot:items=\"props\">\n              <tr v-if=\"props.item.userName !== $store.state.auth.username\">\n                <td>\n                  <v-checkbox\n                    :value=\"props.item._id\"\n                    v-model=\"sharedUsers\"\n                  >\n                  </v-checkbox>\n                </td>\n                <td>{{props.item.userName}}</td>\n                <td>{{props.item.firstName}}</td>\n                <td>{{props.item.surname}}</td>\n              </tr>\n            </template>\n          </v-data-table>\n        </v-card-text>\n        <v-card-actions style='float: center'>\n          <v-btn\n            color=\"error\"\n            :disabled='loadingLocationTree'\n            @click.native=\"shareDialog = false\"\n            style=\"color: white\"\n          >\n            <v-icon\n              dark\n              left\n            >cancel</v-icon>Cancel\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            :disabled='loadingLocationTree'\n            @click.native=\"share('', 'saveShare')\"\n          >\n            <v-icon left>share</v-icon>Share\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      v-model=\"helpDialog\"\n      scrollable\n      persistent\n      :overlay=\"false\"\n      max-width=\"700px\"\n      transition=\"dialog-transition\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            <v-icon>mdi-information</v-icon> About this page\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"helpDialog = false\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          This page let you visualize various data sets you have added into the app as well as synchronize remote servers with the app\n          <v-list>1. Use Force Full Sync to fetch all data from the remote server and update the app</v-list>\n          <v-list>2. Use Sync (Update) to pull updated records from the remote server and update the app</v-list>\n          <v-list>3. You may proceed to the 'Data Source Pair' page after you have added atleast two data sources</v-list>\n          <v-list>4. You may come back to this page and add more sources at any time</v-list>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-layout\n      row\n      wrap\n    >\n      <v-spacer></v-spacer>\n      <v-flex\n        xs1\n        text-xs-right\n      >\n        <v-tooltip top>\n          <template v-slot:activator=\"{ on }\">\n            <v-btn\n              class=\"mx-1\"\n              fab\n              dark\n              x-small\n              color=\"primary\"\n              @click=\"helpDialog = true\"\n              v-on=\"on\"\n            >\n              <v-icon>mdi-help</v-icon>\n            </v-btn>\n          </template>\n          <span>Help</span>\n        </v-tooltip>\n      </v-flex>\n    </v-layout>\n    <v-layout column>\n      <v-flex xs6>\n        <v-alert\n          style=\"width: 500px\"\n          v-model=\"alertSuccess\"\n          type=\"success\"\n          dismissible\n          transition=\"scale-transition\"\n        >\n          {{alertMsg}}\n        </v-alert>\n        <v-alert\n          style=\"width: 500px\"\n          v-model=\"alertError\"\n          type=\"error\"\n          dismissible\n          transition=\"scale-transition\"\n        >\n          {{alertMsg}}\n        </v-alert>\n      </v-flex>\n    </v-layout>\n    <v-layout\n      row\n      wrap\n    >\n      <v-spacer></v-spacer>\n      <v-flex>\n        <v-card color=\"cyan lighten-5\">\n          <v-card-title primary-title>\n            <v-toolbar\n              color=\"white\"\n              style=\"font-weight: bold; font-size: 18px;\"\n            >\n              Remote Sources\n            </v-toolbar>\n          </v-card-title>\n          <v-card-actions>\n            <v-btn\n              color=\"primary\"\n              @click=\"sync('full')\"\n              rounded\n              v-if=\"remoteServers.length > 0\"\n            >\n              <v-icon left>mdi-sync</v-icon>Force Full Sync\n            </v-btn>\n            <v-btn\n              color=\"primary\"\n              @click=\"sync('full')\"\n              rounded\n              disabled\n              v-else\n            >\n              <v-icon left>mdi-sync</v-icon>Force Full Sync\n            </v-btn>\n            <v-btn\n              color=\"primary lighten-1\"\n              @click=\"sync('update')\"\n              rounded\n              v-if=\"remoteServers.length > 0\"\n            >\n              <v-icon left>mdi-sync</v-icon>Sync (Update)\n            </v-btn>\n            <v-btn\n              color=\"primary lighten-1\"\n              @click=\"sync('update')\"\n              rounded\n              disabled\n              v-else\n            >\n              <v-icon left>mdi-sync</v-icon>Sync (Update)\n            </v-btn>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"success\"\n              @click=\"editDataSource\"\n              rounded\n              v-if=\"remoteServers.length > 0\"\n            >\n              <v-icon left>mdi-pencil</v-icon>Edit\n            </v-btn>\n            <v-btn\n              color=\"success\"\n              @click=\"editDataSource\"\n              rounded\n              disabled\n              v-else\n            >\n              <v-icon left>mdi-pencil</v-icon>Edit\n            </v-btn>\n            <v-btn\n              color=\"error\"\n              @click=\"validateDelete\"\n              rounded\n              v-if=\"remoteServers.length > 0\"\n            >\n              <v-icon left>mdi-delete</v-icon>Delete\n            </v-btn>\n            <v-btn\n              color=\"error\"\n              @click=\"validateDelete\"\n              rounded\n              disabled\n              v-else\n            >\n              <v-icon left>mdi-delete</v-icon>Delete\n            </v-btn>\n          </v-card-actions>\n          <v-card-text>\n            <v-data-table\n              :headers=\"syncServersHeader\"\n              :items=\"remoteServers\"\n              dark\n              class=\"elevation-1\"\n              :loading='$store.state.loadingServers'\n            >\n              <v-progress-linear\n                slot=\"progress\"\n                color=\"blue\"\n                indeterminate\n              ></v-progress-linear>\n              <template\n                v-slot:item=\"{ item }\"\n              >\n                <tr>\n                  <v-radio-group\n                    v-model='server'\n                    style=\"height: 5px\"\n                  >\n                    <td>\n                      <v-radio\n                        :value=\"item\"\n                        color=\"blue\"\n                      ></v-radio>\n                    </td>\n                  </v-radio-group>\n                  <td>{{item.name}}</td>\n                  <td>{{item.host}}</td>\n                  <td>{{item.sourceType}}</td>\n                  <td>{{item.username}}</td>\n                  <td v-if=\"item.username\">*****</td>\n                  <td v-else></td>\n                  <td>{{item.lastUpdate}}</td>\n                  <td>{{item.userID.userName}}</td>\n                  <td>\n                    {{item.shared.users | mergeUsers}}\n                  </td>\n                  <td>\n                    {{item.createdTime}}\n                  </td>\n                  <td v-if='item.userID._id === $store.state.auth.userID'>\n                    <v-btn\n                      color=\"success\"\n                      flat\n                      @click=\"share(item, 'showDialog')\"\n                    >\n                      <v-icon>mdi-share-variant-outline</v-icon> Share\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card-text>\n          <v-card-title primary-title>\n            <v-toolbar\n              color=\"white\"\n              style=\"font-weight: bold; font-size: 18px;\"\n            >\n              Uploaded Sources\n            </v-toolbar>\n          </v-card-title>\n          <v-card-actions>\n            <v-tooltip top>\n              <template v-slot:activator=\"{ on }\">\n                <v-btn\n                  color=\"success\"\n                  @click=\"exportCSV\"\n                  rounded\n                  v-if=\"uploadedSources.length > 0\"\n                  v-on=\"on\"\n                >\n                  <v-icon left>mdi-file-document-multiple</v-icon>Export\n                </v-btn>\n                <v-btn\n                  color=\"success\"\n                  @click=\"exportCSV\"\n                  rounded\n                  disabled\n                  v-else\n                  v-on=\"on\"\n                >\n                  <v-icon left>mdi-file-document-multiple</v-icon>Export\n                </v-btn>\n              </template>\n              <span>Export Original CSV</span>\n            </v-tooltip>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"error\"\n              @click=\"validateDelete\"\n              rounded\n              v-if=\"uploadedSources.length > 0\"\n            >\n              <v-icon left>mdi-delete</v-icon>Delete\n            </v-btn>\n            <v-btn\n              color=\"error\"\n              @click=\"validateDelete\"\n              rounded\n              disabled\n              v-else\n            >\n              <v-icon left>mdi-delete</v-icon>Delete\n            </v-btn>\n          </v-card-actions>\n          <v-card-text>\n            <v-data-table\n              :headers=\"uploadSourcesHeader\"\n              :items=\"uploadedSources\"\n              dark\n              class=\"elevation-1\"\n              :loading='$store.state.loadingServers'\n            >\n              <v-progress-linear\n                slot=\"progress\"\n                color=\"blue\"\n                indeterminate\n              ></v-progress-linear>\n              <template\n                v-slot:item=\"{ item }\"\n              >\n                <tr>\n                  <v-radio-group\n                    v-model='server'\n                    style=\"height: 5px\"\n                  >\n                    <td>\n                      <v-radio\n                        :value=\"item\"\n                        color=\"blue\"\n                      ></v-radio>\n                    </td>\n                  </v-radio-group>\n                  <td>{{item.name}}</td>\n                  <td>{{item.userID.userName}}</td>\n                  <td>\n                    {{item.shared.users | mergeUsers}}\n                  </td>\n                  <td>\n                    {{item.createdTime}}\n                  </td>\n                  <td v-if='item.userID._id === $store.state.auth.userID'>\n                    <v-btn\n                      color=\"success\"\n                      text\n                      @click=\"share(item, 'showDialog')\"\n                    >\n                      <v-icon>mdi-share-variant-outline</v-icon> Share\n                    </v-btn>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card-text>\n        </v-card>\n      </v-flex>\n      <v-spacer></v-spacer>\n    </v-layout>\n    <appRemoteSync\n      v-if='server.name'\n      :syncType=\"syncType\"\n      :serverName=\"server.name\"\n      :userID=\"$store.state.auth.userID\"\n      :sourceOwner=\"server.userID._id\"\n      :mode=\"mode\"\n    >\n    </appRemoteSync>\n  </v-container>\n</template>\n\n<script>\nimport RemoteSync from './RemoteSync'\nimport { generalMixin } from '../../mixins/generalMixin'\nimport { eventBus } from '../../main'\nimport axios from 'axios'\nimport LiquorTree from 'liquor-tree'\nexport default {\n  mixins: [generalMixin],\n  data () {\n    return {\n      syncType: '',\n      mode: '',\n      loadingPairs: false,\n      pairs: [],\n      pairsHeaders: [\n        { text: 'Pair Name', value: 'name' },\n        { text: 'Owner', value: 'owner' }\n      ],\n      helpDialog: false,\n      deleteConfirm: false,\n      editDialog: false,\n      server: {\n        name: '',\n        userID: {}\n      },\n      shareDialog: false,\n      shareSource: {},\n      users: [],\n      sharedUsers: [],\n      limitLocationId: '',\n      limitLocationName: 'No limit',\n      locationTree: [],\n      loadingLocationTree: false,\n      searchUsers: '',\n      syncServersHeader: [\n        { sortable: false },\n        { text: 'Source Name', value: 'name' },\n        { text: 'Base URL', value: 'host' },\n        { text: 'Source Type', value: 'sourceType' },\n        { text: 'User Name', value: 'username' },\n        { text: 'Password', value: 'password' },\n        { text: 'Last Sync', value: 'lastsync' },\n        { text: 'Owner', value: 'owner', sortable: false },\n        { text: 'Shared To', value: 'shareStatus' },\n        { text: 'Created Time', value: 'createdTime' }\n      ],\n      uploadSourcesHeader: [\n        { sortable: false },\n        {\n          text: 'Source Name',\n          align: 'left',\n          value: 'name'\n        },\n        { text: 'Owner', value: 'owner', sortable: false },\n        { text: 'Shared To', value: 'shareStatus' },\n        { text: 'Created Time', value: 'createdTime' }\n      ],\n      dataSources: [\n        { text: 'Upload CSV', value: 'upload' },\n        { text: 'Remote Source', value: 'remote' }\n      ],\n      usersHeader: [\n        { sortable: false },\n        { text: 'Username', value: 'userName', sortable: true },\n        { text: 'Firstname', value: 'firstName', sortable: true },\n        { text: 'Surname', value: 'surname', sortable: true }\n      ],\n      dataSource: '',\n      addDataSource: true,\n      syncProgrIndeter: false,\n      syncProgrPercent: false,\n      syncStatus: 'Waiting for sync status',\n      syncPercent: null,\n      syncProgressTimer: '',\n      syncRunning: false,\n      alertSuccess: false,\n      alertError: false,\n      alertMsg: ''\n    }\n  },\n  filters: {\n    mergeUsers (users) {\n      if (!users || users.length === 0) {\n        return ''\n      }\n      let userNames = ''\n      for (let user of users) {\n        if (!userNames) {\n          userNames = user.userName\n        } else {\n          userNames += ', ' + user.userName\n        }\n      }\n      return userNames\n    }\n  },\n  methods: {\n    sourceSelected (selection) {\n      this.addDataSource = true\n      if (selection === 'upload') {\n        this.selectedComponent = 'FacilityReconUpload'\n      } else if (selection === 'remote') {\n        this.selectedComponent = 'FacilityReconRemoteSources'\n      }\n    },\n    editDataSource () {\n      if (!this.server.name) {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'Please select data source'\n        return\n      }\n      if (this.server.userID._id !== this.$store.state.auth.userID) {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'You are not the owner of this data source, ask the owner to edit any details'\n        return\n      }\n      if (this.server.source === 'upload') {\n        return\n      }\n      this.editDialog = true\n    },\n    saveEdit () {\n      let formData = new FormData()\n      const clientId = this.$store.state.clientId\n      formData.append('host', this.server.host)\n      formData.append('sourceType', this.server.sourceType)\n      formData.append('source', this.server.source)\n      formData.append('username', this.server.username)\n      formData.append('password', this.server.password)\n      formData.append('userID', this.server.userID._id)\n      formData.append('name', this.server.name)\n      formData.append('id', this.server._id)\n      formData.append('clientId', clientId)\n      this.editDialog = false\n      axios.post('/addDataSource', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then((response) => {\n        this.server.password = response.data.password\n      })\n    },\n    validateDelete () {\n      if (!this.server.name) {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'Please select data source'\n        return\n      }\n      if (this.server.userID._id !== this.$store.state.auth.userID && this.$store.state.auth.role !== 'Admin') {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'You are not the owner of this data source, ask the owner to remove you from the share'\n        return\n      }\n      this.getPairsToDelete()\n      this.deleteConfirm = true\n    },\n    deleteDataSource () {\n      this.deleteConfirm = false\n      let userID = this.$store.state.auth.userID\n      let sourceOwner = this.server.userID._id\n      axios.get(`/deleteDataSource/${this.server._id}/${this.server.name}/${sourceOwner}/${userID}`).then(() => {\n        this.server = {}\n        eventBus.$emit('getDataSources')\n      })\n    },\n    getPairsToDelete () {\n      this.loadingPairs = true\n      axios.get('/getPairForDatasource/' + this.server._id).then((response) => {\n        this.loadingPairs = false\n        this.pairs = response.data\n      }).catch((error) => {\n        if (error.response) {\n          console.log(error.response.data)\n          console.log(error.response.status)\n          console.log(error.response.headers)\n        } else if (error.request) {\n          console.log(error.request)\n        } else {\n          console.log('Error', error.message)\n        }\n        console.log(error.config)\n      })\n    },\n    share (source, action) {\n      if (action === 'showDialog') {\n        this.limitLocationId = ''\n        this.limitLocationName = 'No limit'\n        this.sharedUsers = []\n        this.shareSource = source\n        this.getLocationTree()\n        if (source.hasOwnProperty('shared') && source.shared.users.length > 0) {\n          source.shared.users.forEach((sharedUsers) => {\n            this.sharedUsers.push(sharedUsers._id)\n          })\n        }\n        this.shareDialog = true\n      } else if (action === 'saveShare') {\n        if (this.sharedUsers.length === 0) {\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Info'\n          this.$store.state.errorDescription = 'Please select atleast one user'\n          return\n        }\n        let formData = new FormData()\n        formData.append('shareSource', this.shareSource._id)\n        formData.append('users', JSON.stringify(this.sharedUsers))\n        formData.append('userID', this.$store.state.auth.userID)\n        formData.append('role', this.$store.state.auth.role)\n        formData.append('orgId', this.$store.state.dhis.user.orgId)\n        formData.append('limitLocationId', this.limitLocationId)\n        this.$store.state.loadingServers = true\n        this.shareDialog = false\n        axios.post('/shareDataSource', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then((response) => {\n          this.$store.state.loadingServers = false\n          this.$store.state.dataSources = response.data\n        }).catch((err) => {\n          console.log(err)\n          this.$store.state.loadingServers = false\n        })\n      }\n    },\n    locationSelected (node) {\n      this.limitLocationId = node.id\n      if (node.id !== 'parent') {\n        this.limitLocationName = node.data.text\n      } else {\n        this.limitLocationName = 'No limit'\n        this.limitLocationId = ''\n      }\n    },\n    getLocationTree () {\n      let userID = this.shareSource.userID._id\n      this.loadingLocationTree = true\n      let source = this.toTitleCase(this.shareSource.name)\n      axios.get('/getTree/' + source + '/' + userID).then((hierarchy) => {\n        if (hierarchy.data) {\n          this.locationTree = [{\n            text: 'Select location to limit sharing',\n            id: 'parent',\n            children: hierarchy.data\n          }]\n        }\n        this.loadingLocationTree = false\n      })\n    },\n    getUsers () {\n      axios.get('/getUsers').then((response) => {\n        this.users = response.data\n      })\n    },\n    exportCSV () {\n      if (!this.server.name) {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'Please select data source'\n        return\n      }\n      let sourceOwner = this.server.userID._id\n      axios.get('/getUploadedCSV/' + sourceOwner + '/' + this.server.name).then((resp) => {\n        let blob = new Blob([resp.data])\n        if (window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveBlob(blob, `${this.server.name}.csv`)\n        } else {\n          let a = window.document.createElement('a')\n          a.href = window.URL.createObjectURL(blob, { type: 'text/plain' })\n          a.download = `${this.server.name}.csv`\n          document.body.appendChild(a)\n          a.click()\n          document.body.removeChild(a)\n        }\n      }).catch((err) => {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = err.response.data\n      })\n    },\n    sync (mode) {\n      if (!this.server.name) {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'Please select data source'\n        return\n      }\n      if (this.server.userID._id !== this.$store.state.auth.userID) {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'Only data source owner can run the sync'\n        return\n      }\n      if (this.server.source === 'upload') {\n        return\n      }\n      this.mode = mode\n      if (this.server.sourceType === 'DHIS2') {\n        this.syncType = 'dhisSync'\n      } else if (this.server.sourceType === 'FHIR') {\n        this.syncType = 'fhirSync'\n      }\n      setTimeout(() => {\n        eventBus.$emit('runRemoteSync')\n      }, 100)\n    }\n  },\n  computed: {\n    remoteServers () {\n      let servers = []\n      for (let sources of this.$store.state.dataSources) {\n        if (sources.source === 'syncServer') {\n          servers.push(sources)\n        }\n      }\n      return servers\n    },\n    uploadedSources () {\n      let upload = []\n      for (let sources of this.$store.state.dataSources) {\n        if (sources.source === 'upload') {\n          upload.push(sources)\n        }\n      }\n      return upload\n    }\n  },\n  components: {\n    'appRemoteSync': RemoteSync,\n    'liquor-tree': LiquorTree\n  },\n  created () {\n    this.getUsers()\n    eventBus.$on('dataSourceSaved', () => {\n      this.addDataSource = false\n      this.dataSource = ''\n    })\n    eventBus.$on('dataSourceAddedSuccessfully', () => {\n      this.alertSuccess = true\n      this.alertMsg = 'Data Source Added Successfully'\n      setTimeout(() => {\n        this.alertSuccess = false\n      }, 3000)\n    })\n    eventBus.$on('remoteServerFailedAdd', () => {\n      this.alertError = true\n      this.alertMsg = 'Data Source Failed To Be Added'\n    })\n  }\n}\n</script>\n"]}]}