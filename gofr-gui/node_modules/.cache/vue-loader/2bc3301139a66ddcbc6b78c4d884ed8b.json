{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/disabledAuth/DHIS2Auth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/disabledAuth/DHIS2Auth.vue","mtime":1619257194373},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICdAL21haW4nCmltcG9ydCB7IGdlbmVyYWxNaXhpbiB9IGZyb20gJ0AvbWl4aW5zL2dlbmVyYWxNaXhpbicKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW2dlbmVyYWxNaXhpbl0sCiAgbWV0aG9kczogewogICAgZ2V0REhJUzJVc2VyRGF0YSAoY2FsbGJhY2spIHsKICAgICAgbGV0IGF1dGggPSB0aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLmRldi5hdXRoCiAgICAgIGlmIChhdXRoLnVzZXJuYW1lID09PSAnJykgewogICAgICAgIGF1dGggPSAnJwogICAgICB9CiAgICAgIGF4aW9zLmdldCh0aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLmhvc3QgKyAnYXBpL21lJywgeyBhdXRoIH0pLnRoZW4oKHVzZXJEYXRhKSA9PiB7CiAgICAgICAgdmFyIG9yZ1VuaXRzSURzID0gdXNlckRhdGEuZGF0YS5vcmdhbmlzYXRpb25Vbml0cwogICAgICAgIGlmIChvcmdVbml0c0lEcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLnVzZXIub3JnSWQgPSBvcmdVbml0c0lEcy5zaGlmdCgpLmlkCiAgICAgICAgICBheGlvcy5nZXQodGhpcy4kc3RvcmUuc3RhdGUuZGhpcy5ob3N0ICsgJ2FwaS9vcmdhbmlzYXRpb25Vbml0cy8nICsgdGhpcy4kc3RvcmUuc3RhdGUuZGhpcy51c2VyLm9yZ0lkLCB7IGF1dGggfSkudGhlbigob3JnVW5pdHMpID0+IHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZGhpcy51c2VyLm9yZ05hbWUgPSBvcmdVbml0cy5kYXRhLmRpc3BsYXlOYW1lCiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayh1c2VyRGF0YSkKICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nRXJyb3IgPSB0cnVlCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JUaXRsZSA9ICdFcnJvcicKICAgICAgICBpZiAoZXJyLnJlc3BvbnNlICYmIGVyci5yZXNwb25zZS5kYXRhICYmIGVyci5yZXNwb25zZS5kYXRhLmh0dHBTdGF0dXNDb2RlID09PSA0MDEpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVycm9yRGVzY3JpcHRpb24gPSAnVW5hdXRob3JpemVkLCBlbnN1cmUgdGhhdCB5b3VyIERISVMyIGxvZ2luIGlzIGFjdGl2ZScKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ0xvZ291dCcgfSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JEZXNjcmlwdGlvbiA9ICdVbmF1dGhvcml6ZWQsIHBsZWFzZSByZWxvYWQgdGhlIGFwcCcKICAgICAgICB9CiAgICAgIH0pCiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIHRoaXMuc2V0REhJUzJDcmVkZW50aWFscygpCiAgICB0aGlzLmdldFJvbGVzKCkKICAgIHRoaXMuZ2V0REhJUzJVc2VyRGF0YSgoZGhpczJVc2VyKSA9PiB7CiAgICAgIGxldCBpc0FkbWluID0gZGhpczJVc2VyLmRhdGEudXNlckNyZWRlbnRpYWxzLnVzZXJSb2xlcy5maW5kKChyb2xlKSA9PiB7CiAgICAgICAgcmV0dXJuIHJvbGUuaWQgPT09IHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLmV4dGVybmFsQXV0aC5hZG1pblJvbGUKICAgICAgfSkKICAgICAgbGV0IHJvbGVJRCwgcm9sZVRleHQKICAgICAgaWYgKGlzQWRtaW4pIHsKICAgICAgICBsZXQgcm9sZSA9IHRoaXMucm9sZXMuZmluZCgocm9sZSkgPT4gewogICAgICAgICAgcmV0dXJuIHJvbGUudGV4dCA9PT0gJ0FkbWluJwogICAgICAgIH0pCiAgICAgICAgcm9sZUlEID0gcm9sZS52YWx1ZQogICAgICAgIHJvbGVUZXh0ID0gcm9sZS50ZXh0CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGV0IHJvbGUgPSB0aGlzLnJvbGVzLmZpbmQoKHJvbGUpID0+IHsKICAgICAgICAgIHJldHVybiByb2xlLnRleHQgPT09ICdEYXRhIE1hbmFnZXInCiAgICAgICAgfSkKICAgICAgICByb2xlSUQgPSByb2xlLnZhbHVlCiAgICAgICAgcm9sZVRleHQgPSByb2xlLnRleHQKICAgICAgfQogICAgICBheGlvcy5nZXQoJy9nZXRVc2VyLycgKyBkaGlzMlVzZXIuZGF0YS51c2VyQ3JlZGVudGlhbHMudXNlcm5hbWUpLnRoZW4oKHVzZXIpID0+IHsKICAgICAgICBpZiAodXNlci5kYXRhLnVzZXJJRCkgewogICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC51c2VybmFtZSA9IGRoaXMyVXNlci5kYXRhLnVzZXJDcmVkZW50aWFscy51c2VybmFtZQogICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC51c2VySUQgPSB1c2VyLmRhdGEudXNlcklECiAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnJvbGUgPSByb2xlVGV4dAogICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuaW5pdGlhbGl6aW5nQXBwID0gdHJ1ZQogICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZGVueUFjY2VzcyA9IGZhbHNlCiAgICAgICAgICBldmVudEJ1cy4kZW1pdCgnZ2V0Q29uZmlnJykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlyc3ROYW1lJywgZGhpczJVc2VyLmRhdGEuZmlyc3ROYW1lKQogICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdvdGhlck5hbWUnLCAnJykKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgncGFzc3dvcmQnLCBkaGlzMlVzZXIuZGF0YS5zdXJuYW1lKQogICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCd1c2VyTmFtZScsIGRoaXMyVXNlci5kYXRhLnVzZXJDcmVkZW50aWFscy51c2VybmFtZSkKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnc3VybmFtZScsIGRoaXMyVXNlci5kYXRhLnN1cm5hbWUpCiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3JvbGUnLCByb2xlSUQpCiAgICAgICAgICBheGlvcy5wb3N0KCcvYWRkVXNlcicsIGZvcm1EYXRhLCB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgICAgICBheGlvcy5nZXQoJy9nZXRVc2VyLycgKyBkaGlzMlVzZXIuZGF0YS51c2VyQ3JlZGVudGlhbHMudXNlcm5hbWUpLnRoZW4oKHVzZXIpID0+IHsKICAgICAgICAgICAgICBpZiAodXNlci5kYXRhLnVzZXJJRCkgewogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC51c2VybmFtZSA9IGRoaXMyVXNlci5kYXRhLnVzZXJDcmVkZW50aWFscy51c2VybmFtZQogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC51c2VySUQgPSB1c2VyLmRhdGEudXNlcklECiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnJvbGUgPSB1c2VyLmRhdGEucm9sZQogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuaW5pdGlhbGl6aW5nQXBwID0gdHJ1ZQogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZGVueUFjY2VzcyA9IGZhbHNlCiAgICAgICAgICAgICAgICBldmVudEJ1cy4kZW1pdCgnZ2V0Q29uZmlnJykKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfSkKICAgIH0pCiAgfQp9Cg=="},{"version":3,"sources":["DHIS2Auth.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DHIS2Auth.vue","sourceRoot":"src/components/disabledAuth","sourcesContent":["<template>\n  <v-container grid-list-xs>\n\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { eventBus } from '@/main'\nimport { generalMixin } from '@/mixins/generalMixin'\nexport default {\n  mixins: [generalMixin],\n  methods: {\n    getDHIS2UserData (callback) {\n      let auth = this.$store.state.dhis.dev.auth\n      if (auth.username === '') {\n        auth = ''\n      }\n      axios.get(this.$store.state.dhis.host + 'api/me', { auth }).then((userData) => {\n        var orgUnitsIDs = userData.data.organisationUnits\n        if (orgUnitsIDs.length > 0) {\n          this.$store.state.dhis.user.orgId = orgUnitsIDs.shift().id\n          axios.get(this.$store.state.dhis.host + 'api/organisationUnits/' + this.$store.state.dhis.user.orgId, { auth }).then((orgUnits) => {\n            this.$store.state.dhis.user.orgName = orgUnits.data.displayName\n            return callback(userData)\n          })\n        }\n      }).catch((err) => {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        if (err.response && err.response.data && err.response.data.httpStatusCode === 401) {\n          this.$store.state.errorDescription = 'Unauthorized, ensure that your DHIS2 login is active'\n          this.$router.push({ name: 'Logout' })\n        } else {\n          this.$store.state.errorDescription = 'Unauthorized, please reload the app'\n        }\n      })\n    }\n  },\n  created () {\n    this.setDHIS2Credentials()\n    this.getRoles()\n    this.getDHIS2UserData((dhis2User) => {\n      let isAdmin = dhis2User.data.userCredentials.userRoles.find((role) => {\n        return role.id === this.$store.state.config.generalConfig.externalAuth.adminRole\n      })\n      let roleID, roleText\n      if (isAdmin) {\n        let role = this.roles.find((role) => {\n          return role.text === 'Admin'\n        })\n        roleID = role.value\n        roleText = role.text\n      } else {\n        let role = this.roles.find((role) => {\n          return role.text === 'Data Manager'\n        })\n        roleID = role.value\n        roleText = role.text\n      }\n      axios.get('/getUser/' + dhis2User.data.userCredentials.username).then((user) => {\n        if (user.data.userID) {\n          this.$store.state.auth.username = dhis2User.data.userCredentials.username\n          this.$store.state.auth.userID = user.data.userID\n          this.$store.state.auth.role = roleText\n          this.$store.state.initializingApp = true\n          this.$store.state.denyAccess = false\n          eventBus.$emit('getConfig')\n        } else {\n          let formData = new FormData()\n          formData.append('firstName', dhis2User.data.firstName)\n          formData.append('otherName', '')\n          formData.append('password', dhis2User.data.surname)\n          formData.append('userName', dhis2User.data.userCredentials.username)\n          formData.append('surname', dhis2User.data.surname)\n          formData.append('role', roleID)\n          axios.post('/addUser', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }).then(() => {\n            axios.get('/getUser/' + dhis2User.data.userCredentials.username).then((user) => {\n              if (user.data.userID) {\n                this.$store.state.auth.username = dhis2User.data.userCredentials.username\n                this.$store.state.auth.userID = user.data.userID\n                this.$store.state.auth.role = user.data.role\n                this.$store.state.initializingApp = true\n                this.$store.state.denyAccess = false\n                eventBus.$emit('getConfig')\n              }\n            })\n          })\n        }\n      })\n    })\n  }\n}\n</script>\n"]}]}