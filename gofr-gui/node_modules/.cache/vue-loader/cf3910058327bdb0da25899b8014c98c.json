{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/ihris/ihris-resource.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/ihris/ihris-resource.vue","mtime":1621965248925},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-resource.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ihris-resource.vue","sourceRoot":"src/components/ihris","sourcesContent":["<template>\n  <v-container class=\"my-3\">\n    <v-form\n      ref=\"form\"\n      v-model=\"valid\"\n    >\n\n      <slot :source=\"source\"></slot>\n      <v-overlay :value=\"overlay\">\n        <v-progress-circular\n          size=\"50\"\n          color=\"primary\"\n          indeterminate\n          ></v-progress-circular>\n      </v-overlay>\n\n      <v-navigation-drawer\n        app\n        left\n        permanent\n        clipped\n        class=\"primary darken-1 white--text\"\n        style=\"z-index: 3;\"\n        >\n        <v-list class=\"white--text\">\n          <v-list-item>\n            <template v-if=\"!edit\">\n              <v-row>\n                <v-col md=\"12\">\n                  <v-btn small dark class=\"secondary\" @click=\"$emit('set-edit', !edit)\">\n                    <v-icon left light>mdi-pencil</v-icon>\n                    <span>Edit</span>\n                  </v-btn>\n                </v-col>\n                <v-col>\n                  <v-btn\n                    small\n                    @click=\"processRequest('approved')\"\n                    color=\"success\"\n                    v-if=\"$store.state.requestResourceUpdateData.requestUpdatingResource\"\n                    :disabled=\"currentRequestStatus === 'approved' || currentRequestStatus === ''\"\n                  >\n                    <v-icon left>mdi-check-circle</v-icon> Approve\n                  </v-btn>\n                </v-col>\n                <v-col>\n                  <v-btn\n                    small\n                    @click=\"processRequest('rejected')\"\n                    color=\"error\"\n                    v-if=\"$store.state.requestResourceUpdateData.requestUpdatingResource\"\n                    :disabled=\"currentRequestStatus !== 'pending'\"\n                  >\n                    <v-icon left>mdi-cancel</v-icon> Reject\n                  </v-btn>\n                </v-col>\n              </v-row>\n              <v-layout row wrap>\n                <v-flex xs12>\n\n                </v-flex>\n                <v-flex xs5>\n\n                </v-flex>\n                <v-spacer></v-spacer>\n                <v-flex xs5>\n\n                </v-flex>\n              </v-layout>\n            </template>\n            <v-btn small v-else dark class=\"secondary\" @click=\"$router.go(0)\">\n              <v-icon light>mdi-pencil-off</v-icon>\n              <span>Cancel</span>\n            </v-btn>\n            <v-spacer></v-spacer>\n            <template v-if=\"edit && $store.state.searchAction !== 'send-update-request'\">\n              <v-btn small v-if=\"valid\" dark class=\"success darken-1\" @click=\"processFHIR()\" :disabled=\"!valid\">\n                <v-icon light>mdi-content-save</v-icon>\n                <span>Save</span>\n              </v-btn>\n              <v-btn small v-else dark class=\"warning\" @click=\"$refs.form.validate()\">\n                <v-icon light>mdi-content-save</v-icon>\n                <span>Save</span>\n              </v-btn>\n            </template>\n            <template v-else-if=\"edit && $store.state.searchAction === 'send-update-request'\">\n              <v-btn\n                small\n                @click=\"createUpdateRequest\"\n                color=\"success\"\n              >\n                <v-icon left>mdi-check-circle</v-icon> Send Update Request\n              </v-btn>\n            </template>\n          </v-list-item>\n          <v-divider color=\"white\"></v-divider>\n          <template v-if=\"!edit && links && links.length\">\n            <v-list-item v-for=\"(link,idx) in links\" :key=\"link.url\">\n              <v-btn :key=\"link.url\" :text=\"!link.button\" :to=\"getLinkUrl(link)\" class=\"primary\">\n                <v-icon light v-if=\"link.icon\">{{link.icon}}</v-icon>\n                {{ linktext[idx]  }}\n              </v-btn>\n            </v-list-item>\n          </template>\n          <v-subheader v-if=\"sectionMenu\" class=\"white--text\"><h2>Sections</h2></v-subheader>\n          <v-list-item v-for=\"section in sectionMenu\" :href=\"'#section-'+section.name\" :key=\"section.name\">\n            <v-list-item-content class=\"white--text\" v-if=\"!edit || !section.secondary\">\n              <v-list-item-title class=\"text-uppercase\"><h4>{{ section.title }}</h4></v-list-item-title>\n              <v-list-item-subtitle class=\"white--text\">{{ section.desc }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n\n      </v-navigation-drawer>\n    </v-form>\n  </v-container>\n\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: \"ihris-resource\",\n  props: [\"title\",\"field\",\"fhirId\",\"page\",\"profile\",\"section-menu\",\"edit\",\"links\",\"constraints\" ],\n  data: function() {\n    return {\n      fhir: {},\n      orig: {},\n      valid: true,\n      source: { data: {}, path: \"\" },\n      loading: false,\n      overlay: false,\n      isEdit: false,\n      linktext: [ ],\n      advancedValid: true,\n      currentRequestStatus: ''\n    }\n  },\n  created: function() {\n    if ( this.fhirId ) {\n      this.loading = true\n      axios.get( \"/fhir/\"+this.field+\"/\"+this.fhirId ).then(response => {\n        let data = response.data\n        this.orig = data\n        this.source = { data: data, path: this.field }\n        this.setLinkText()\n        this.loading = false\n        if(data.extension) {\n          for(let ext of data.extension) {\n            if(ext.url === \"http://gofr.org/fhir/StructureDefinition/request-status\") {\n              this.currentRequestStatus = ext.valueCoding.code\n            }\n          }\n        }\n      }).catch(err=> {\n        console.log(this.field,this.fhirId,err)\n      })\n    } else if ( this.$route.query ) {\n      let presets = {\n        resourceType: this.field\n      }\n      let hasPresets = false\n      for( let path of Object.keys( this.$route.query ) ) {\n        if ( path.startsWith( this.field +\".\" ) ) {\n          hasPresets = true\n          let elements = path.substring( this.field.length+1 ).split('.')\n          let last = elements.pop()\n          let current = presets\n          for( let element of elements ) {\n            if ( element.includes('[') ) {\n              try {\n                let parts = element.split('[')\n                let name = parts[0]\n                let idx = parts[1].slice(0,-1)\n                if ( !current.hasOwnProperty(name) ) {\n                  current[name] = []\n                }\n                if ( idx ) {\n                  let next = {}\n                  current[name][parseInt(idx)] = next\n                  current = next\n                } else {\n                  let next = {}\n                  current[name].push( next )\n                  current = next\n                }\n              } catch( err ) {\n                console.log(\"Unable to process\",path)\n                continue\n              }\n            } else {\n              if ( !current.hasOwnProperty(element) ) {\n                current[element] = {}\n                current = current[element]\n              }\n            }\n          }\n          if ( last.includes('[') ) {\n            try {\n              let parts = last.split('[')\n              let name = parts[0]\n              let idx = parts[1].slice(0,-1)\n              if ( !current.hasOwnProperty(name) ) {\n                current[name] = []\n              }\n              if ( idx ) {\n                current[name][parseInt(idx)] = this.$route.query[path]\n              } else {\n                current[name].push( this.$route.query[path] )\n              }\n\n            } catch( err ) {\n              console.log(\"Unable to process\",path)\n              continue\n            }\n          } else {\n            current[last] = this.$route.query[path]\n          }\n        }\n      }\n      if ( hasPresets ) {\n        this.source = { data: presets, path: this.field }\n      }\n    }\n  },\n  computed: {\n    hasFhirId: function() {\n      if ( this.fhirId == '' ) {\n        return false\n      } else if ( !this.fhirId ) {\n        return false\n      } else {\n        return true\n      }\n    }\n  },\n  methods: {\n    async createUpdateRequest() {\n      this.$refs.form.validate()\n      if ( !this.valid ) return\n      this.fhir = {\n        resourceType: this.field,\n        meta: {\n          profile: [ \"http://gofr.org/fhir/StructureDefinition/gofr-facility-update-request\" ]\n        }\n      }\n      try {\n        await this.processChildren( this.field, this.fhir, this.$children )\n      } catch( err ) {\n        this.advancedValid = false\n        console.log(err)\n      }\n      if ( !this.advancedValid ) {\n        this.overlay = false\n        this.loading = false\n        this.$store.commit('setMessage', { type: 'error', text: 'There were errors on the form.' })\n        return\n      }\n      if(!this.fhir.extension) {\n        this.fhir.extension = []\n      }\n      this.fhir.extension.push({\n        url: \"http://gofr.org/fhir/StructureDefinition/request-status\",\n        valueCoding: {\n          system: \"http://gofr.org/fhir/StructureDefinition/request-status-codesystem\",\n          code: \"pending\",\n          display: \"Pending\"\n        }\n      }, {\n        \"url\": \"http://gofr.org/fhir/StructureDefinition/request-affected-resource\",\n        \"valueReference\": {\n          \"reference\": \"Location/\" + this.fhirId\n        }\n      })\n      let url = \"/fhir/\"+this.field\n      let opts = {\n        method: \"POST\",\n        url,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: this.fhir\n      }\n      axios( opts ).then(() => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.searchAction = \"\"\n        // this.$router.go(0)\n      } ).catch((err) => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'This request was not successfully processed'\n        this.$store.state.dialogError = true\n        console.error(err);\n      })\n    },\n    processRequest(newStatus) {\n      let url\n      if(this.$store.state.requestResourceUpdateData.requestType === 'add-request') {\n        url = \"/facilitiesRequests/add\"\n      } else if(this.$store.state.requestResourceUpdateData.requestType === 'update-request') {\n        url = \"/facilitiesRequests/update\"\n      }\n      let opts = {\n        method: \"POST\",\n        url,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: {\n          resource: this.source.data,\n          requestStatus: newStatus,\n          requestUpdatingResource: this.$store.state.requestResourceUpdateData.requestUpdatingResource,\n          profile: this.profile\n        }\n      }\n      axios( opts ).then(() => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.requestResourceUpdateData = {\n          requestType: '',\n          requestUpdatingResource: ''\n        }\n        this.$router.go(0)\n      } ).catch((err) => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'This request was not successfully processed'\n        this.$store.state.dialogError = true\n        console.error(err);\n      })\n    },\n    getLinkField: function(field) {\n      let content = this.$fhirpath.evaluate( this.source.data, field )\n      if ( content ) {\n        return content[0]\n      } else {\n        return false\n      }\n    },\n    getLinkUrl: function(link) {\n      let field\n      if ( link.field ) {\n        field = this.getLinkField(link.field)\n      }\n      if ( field ) {\n        if ( field.includes('/') ) {\n          let ref = field.split('/')\n          field = ref[1]\n        }\n        return link.url.replace(\"FIELD\",field)\n      } else {\n        return link.url\n      }\n    },\n    setLinkText: function() {\n      for ( let idx in this.links ) {\n        let link = this.links[idx]\n        if ( link.text ) {\n          this.linktext[idx] = link.text\n        } else if ( link.field ) {\n          let field = this.getLinkField(link.field)\n          if ( field ) {\n            this.$fhirutils.lookup(field).then( display => {\n              this.$set( this.linktext, idx, display )\n            } )\n          }\n        }\n      }\n    },\n    processChildren: async function( parent, obj, children ) {\n      for( let child of children ) {\n        let fullField = parent\n\n        let next = obj\n\n        if ( child.field && !child.fieldType /* ignore arrays */ ) {\n          let field\n          if ( child.sliceName ) {\n            if ( child.field.startsWith(\"value[x]\") ) {\n              field = child.field.substring(9)\n              fullField += \".\" + field\n            } else {\n              field = child.field.replace(\":\"+child.sliceName, \"\")\n              fullField += \".\" + field\n            }\n          } else {\n            field = child.field\n            fullField += \".\"+field\n          }\n          if ( child.max !== \"1\" || child.baseMax !== \"1\" ) {\n            if ( !obj.hasOwnProperty(field) ) {\n              next[field] = []\n            }\n          } else {\n            next[field] = {}\n          }\n          if ( child.hasOwnProperty(\"value\") ) {\n            if ( Array.isArray( next[field] ) ) {\n              next[field].push( child.value )\n            } else {\n              next[field] = child.value\n            }\n            next = next[field]\n          } else {\n            if ( Array.isArray( next[field] ) ) {\n              let sub = {}\n              if ( child.profile ) {\n                sub.url = child.profile\n              } else if ( field === \"extension\" && child.sliceName ) {\n                sub.url = child.sliceName\n              }\n              next[field].push( sub )\n              next = sub\n            } else {\n              next = next[field]\n            }\n          }\n        }\n        if ( child.$children ) {\n          try {\n            await this.processChildren( fullField, next, child.$children )\n          } catch( err ) {\n            this.advancedValid = false\n            console.log(err)\n          }\n        }\n        if ( child.constraints ) {\n          child.errors = []\n          try {\n            this.advancedValid = this.advancedValid && await this.$fhirutils.checkConstraints( child.constraints,\n              this.constraints, next, child.errors, this.fhirId )\n          } catch( err ) {\n            this.advancedValid = false\n            child.errors.push(\"An unknown error occurred.\")\n            console.log(err)\n          }\n        }\n\n      }\n\n    },\n    processFHIR: async function() {\n      this.$refs.form.validate()\n      if ( !this.valid ) return\n      this.advancedValid = true\n      this.overlay = true\n      this.loading = true\n\n      this.fhir = {\n        resourceType: this.field,\n        meta: {\n          profile: [ this.profile ]\n        }\n      }\n      try {\n        await this.processChildren( this.field, this.fhir, this.$children )\n      } catch( err ) {\n        this.advancedValid = false\n        console.log(err)\n      }\n      if ( !this.advancedValid ) {\n        this.overlay = false\n        this.loading = false\n        this.$store.commit('setMessage', { type: 'error', text: 'There were errors on the form.' })\n        return\n      }\n      let url = \"/fhir/\"+this.field\n      let opts = {\n        method: \"POST\",\n        url,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n      if ( this.fhirId ) {\n        this.fhir.id = this.fhirId\n        url += \"/\" + this.fhirId\n        opts.method = \"PUT\"\n        opts.url = url\n      }\n      opts.data = this.fhir\n      axios( opts ).then(response => {\n        let data = response.data\n        this.overlay = false\n        this.loading = false\n        if ( this.fhirId ) {\n          this.$router.go(0)\n        } else {\n          this.$router.push({ name:\"ResourceView\", params: {page: this.page, id: data.id } })\n        }\n      } )\n    }\n  },\n  beforeDestroy() {\n    this.$store.state.searchAction = \"\"\n    this.$store.state.requestResourceUpdateData = {\n      requestType: '',\n      requestUpdatingResource: ''\n    }\n  }\n}\n\n\n\n</script>\n"]}]}