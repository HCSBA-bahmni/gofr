{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/AddUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/AddUser.vue","mtime":1619257194373},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHsgcmVxdWlyZWQgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCmltcG9ydCB7IGdlbmVyYWxNaXhpbiB9IGZyb20gJy4uL21peGlucy9nZW5lcmFsTWl4aW4nCgpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbZ2VuZXJhbE1peGluXSwKICB2YWxpZGF0aW9uczogewogICAgdXNlck5hbWU6IHsgcmVxdWlyZWQgfSwKICAgIHJldHlwZV9wYXNzd29yZDogeyByZXF1aXJlZCB9LAogICAgcGFzc3dvcmQ6IHsgcmVxdWlyZWQgfSwKICAgIHJvbGU6IHsgcmVxdWlyZWQgfSwKICAgIGZpcnN0TmFtZTogeyByZXF1aXJlZCB9LAogICAgc3VybmFtZTogeyByZXF1aXJlZCB9LAogICAgcGhvbmU6IHsgcmVxdWlyZWQgfSwKICAgIGVtYWlsOiB7IHJlcXVpcmVkIH0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlyc3ROYW1lOiAnJywKICAgICAgb3RoZXJOYW1lOiAnJywKICAgICAgc3VybmFtZTogJycsCiAgICAgIHBob25lOiAnJywKICAgICAgZW1haWw6ICcnLAogICAgICB1c2VyTmFtZTogJycsCiAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgcmV0eXBlX3Bhc3N3b3JkOiAnJywKICAgICAgcm9sZTogJycsCiAgICAgIGN1c3RvbUZpZWxkczogW10sCiAgICAgIHBob25lRXJyb3JzOiBbXSwKICAgICAgZW1haWxFcnJvcnM6IFtdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZUVtYWlsICgpIHsKICAgICAgdGhpcy5lbWFpbEVycm9ycyA9IFtdCiAgICAgIGlmICghdGhpcy5lbWFpbCkgewogICAgICAgIHRoaXMuZW1haWxFcnJvcnMucHVzaCgnRW1haWwgaXMgcmVxdWlyZWQnKQogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CiAgICAgIGxldCByZSA9IC9eW15cc0BdK0BbXlxzQF0rXC5bXlxzQF0rJC8KICAgICAgaWYgKCFyZS50ZXN0KHRoaXMuZW1haWwpKSB7CiAgICAgICAgdGhpcy5lbWFpbEVycm9ycy5wdXNoKCdJbnZhbGlkIEVtYWlsJykKICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRlUGhvbmUgKCkgewogICAgICB0aGlzLnBob25lRXJyb3JzID0gW10KICAgICAgaWYgKCF0aGlzLnBob25lKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGhvbmVFcnJvcnMucHVzaCgnUGhvbmUgaXMgcmVxdWlyZWQnKQogICAgICB9CiAgICAgIGxldCByZSA9IC9eWytdP1tccy4vMC05XSpbKF0/WzAtOV17MSw0fVspXT9bLVxzLi8wLTldKiQvZwogICAgICBpZiAoIXJlLnRlc3QodGhpcy5waG9uZSkpIHsKICAgICAgICByZXR1cm4gdGhpcy5waG9uZUVycm9ycy5wdXNoKCdJbnZhbGlkIHBob25lIG51bWJlcicpCiAgICAgIH0KICAgIH0sCiAgICBhZGRVc2VyICgpIHsKICAgICAgaWYgKHRoaXMucGFzc3dvcmQgIT09IHRoaXMucmV0eXBlX3Bhc3N3b3JkKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nRXJyb3IgPSB0cnVlCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JUaXRsZSA9ICdFcnJvcicKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5lcnJvckRlc2NyaXB0aW9uID0gJ1Bhc3N3b3JkIG1pc21hdGNoJwogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmR5bmFtaWNQcm9ncmVzcyA9IHRydWUKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUucHJvZ3Jlc3NUaXRsZSA9ICdTYXZpbmcgVXNlcicKICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaXJzdE5hbWUnLCB0aGlzLmZpcnN0TmFtZSkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdvdGhlck5hbWUnLCB0aGlzLm90aGVyTmFtZSkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdwYXNzd29yZCcsIHRoaXMucGFzc3dvcmQpCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgndXNlck5hbWUnLCB0aGlzLnVzZXJOYW1lKQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3N1cm5hbWUnLCB0aGlzLnN1cm5hbWUpCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgncGhvbmUnLCB0aGlzLnBob25lKQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2VtYWlsJywgdGhpcy5lbWFpbCkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdyb2xlJywgdGhpcy5yb2xlKQogICAgICBmb3IgKGxldCBmaWVsZCBpbiB0aGlzLmN1c3RvbUZpZWxkcykgewogICAgICAgIGZvcm1EYXRhLmFwcGVuZChmaWVsZCwgdGhpcy5jdXN0b21GaWVsZHNbZmllbGRdKQogICAgICB9CiAgICAgIGF4aW9zLnBvc3QoJy9hZGRVc2VyLycsIGZvcm1EYXRhLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgIH0KICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYWxlcnQuc2hvdyA9IHRydWUKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hbGVydC53aWR0aCA9ICc1MDBweCcKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hbGVydC5tc2cgPSAnVXNlciBhZGRlZCBzdWNjZXNzZnVsbHknCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYWxlcnQudHlwZSA9ICdzdWNjZXNzJwogICAgICAgIC8vIGluY3JlbWVudCBjb21wb25lbnQga2V5IHRvIGZvcmNlIGNvbXBvbmVudCByZWxvYWQKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5iYXNlUm91dGVyVmlld0tleSArPSAxCiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hbGVydC5zaG93ID0gdHJ1ZQogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmFsZXJ0LndpZHRoID0gJzUwMHB4JwogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmFsZXJ0Lm1zZyA9ICdUaGlzIHVzZXIgd2FzIG5vdCBhZGRlZCwgZW5zdXJlIHVzZXJOYW1lIGlzIG5vdCB1c2VkJwogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmFsZXJ0LnR5cGUgPSAnZXJyb3InCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYmFzZVJvdXRlclZpZXdLZXkgKz0gMQogICAgICAgIGNvbnNvbGUubG9nKGVyci5yZXNwb25zZS5kYXRhLmVycm9yKQogICAgICB9KQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvZGVFcnJvcnMgKCkgewogICAgICBjb25zdCBlcnJvcnMgPSBbXQogICAgICBpZiAoIXRoaXMuJHYuY29kZS4kZGlydHkpIHJldHVybiBlcnJvcnMKICAgICAgIXRoaXMuJHYuY29kZS5yZXF1aXJlZCAmJiBlcnJvcnMucHVzaCgnQ29kZSBpcyByZXF1aXJlZCcpCiAgICAgIHJldHVybiBlcnJvcnMKICAgIH0sCiAgICBmaXJzdG5hbWVFcnJvcnMgKCkgewogICAgICBjb25zdCBlcnJvcnMgPSBbXQogICAgICBpZiAoIXRoaXMuJHYuZmlyc3ROYW1lLiRkaXJ0eSkgcmV0dXJuIGVycm9ycwogICAgICAhdGhpcy4kdi5maXJzdE5hbWUucmVxdWlyZWQgJiYgZXJyb3JzLnB1c2goJ0ZpcnN0IE5hbWUgaXMgcmVxdWlyZWQnKQogICAgICByZXR1cm4gZXJyb3JzCiAgICB9LAogICAgc3VybmFtZUVycm9ycyAoKSB7CiAgICAgIGNvbnN0IGVycm9ycyA9IFtdCiAgICAgIGlmICghdGhpcy4kdi5zdXJuYW1lLiRkaXJ0eSkgcmV0dXJuIGVycm9ycwogICAgICAhdGhpcy4kdi5zdXJuYW1lLnJlcXVpcmVkICYmIGVycm9ycy5wdXNoKCdTdXJuYW1lIGlzIHJlcXVpcmVkJykKICAgICAgcmV0dXJuIGVycm9ycwogICAgfSwKICAgIHVzZXJuYW1lRXJyb3JzICgpIHsKICAgICAgY29uc3QgZXJyb3JzID0gW10KICAgICAgaWYgKCF0aGlzLiR2LnVzZXJOYW1lLiRkaXJ0eSkgcmV0dXJuIGVycm9ycwogICAgICAhdGhpcy4kdi51c2VyTmFtZS5yZXF1aXJlZCAmJiBlcnJvcnMucHVzaCgnVXNlcm5hbWUgaXMgcmVxdWlyZWQnKQogICAgICByZXR1cm4gZXJyb3JzCiAgICB9LAogICAgcGFzc3dvcmRFcnJvcnMgKCkgewogICAgICBjb25zdCBlcnJvcnMgPSBbXQogICAgICBpZiAoIXRoaXMuJHYucGFzc3dvcmQuJGRpcnR5KSByZXR1cm4gZXJyb3JzCiAgICAgICF0aGlzLiR2LnBhc3N3b3JkLnJlcXVpcmVkICYmIGVycm9ycy5wdXNoKCdQYXNzd29yZCBpcyByZXF1aXJlZCcpCiAgICAgIHJldHVybiBlcnJvcnMKICAgIH0sCiAgICByZXR5cGVfcGFzc3dvcmRFcnJvcnMgKCkgewogICAgICBjb25zdCBlcnJvcnMgPSBbXQogICAgICBpZiAoIXRoaXMuJHYucmV0eXBlX3Bhc3N3b3JkLiRkaXJ0eSkgcmV0dXJuIGVycm9ycwogICAgICAhdGhpcy4kdi5yZXR5cGVfcGFzc3dvcmQucmVxdWlyZWQgJiYgZXJyb3JzLnB1c2goJ1JlLXR5cGUgUGFzc3dvcmQnKQogICAgICByZXR1cm4gZXJyb3JzCiAgICB9LAogICAgcm9sZUVycm9ycyAoKSB7CiAgICAgIGNvbnN0IGVycm9ycyA9IFtdCiAgICAgIGlmICghdGhpcy4kdi5yb2xlLiRkaXJ0eSkgcmV0dXJuIGVycm9ycwogICAgICAhdGhpcy4kdi5yb2xlLnJlcXVpcmVkICYmIGVycm9ycy5wdXNoKCdSb2xlIGlzIHJlcXVpcmVkJykKICAgICAgcmV0dXJuIGVycm9ycwogICAgfQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgICB0aGlzLmdldFJvbGVzKCkKICB9Cn0K"},{"version":3,"sources":["AddUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"AddUser.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-layout\n      row\n      wrap\n    >\n      <v-spacer />\n      <v-flex xs6>\n        <v-card\n          class=\"mx-auto\"\n          style=\"max-width: 500px;\"\n        >\n          <v-system-bar\n            color=\"deep-purple darken-4\"\n            dark\n          />\n          <v-toolbar\n            color=\"deep-purple accent-4\"\n            cards\n            dark\n            flat\n          >\n            <v-card-title class=\"title font-weight-regular\">Add New User</v-card-title>\n          </v-toolbar>\n          <v-form\n            ref=\"form\"\n            class=\"pa-3 pt-4\"\n          >\n            <v-text-field\n              required\n              @blur=\"$v.firstName.$touch()\"\n              @change=\"$v.firstName.$touch()\"\n              :error-messages=\"firstnameErrors\"\n              v-model=\"firstName\"\n              filled\n              color=\"deep-purple\"\n              label=\"First Name*\"\n            />\n            <v-text-field\n              v-model=\"otherName\"\n              filled\n              color=\"deep-purple\"\n              label=\"Middle Names\"\n            />\n            <v-text-field\n              required\n              @blur=\"$v.surname.$touch()\"\n              @change=\"$v.surname.$touch()\"\n              :error-messages=\"surnameErrors\"\n              v-model=\"surname\"\n              filled\n              color=\"deep-purple\"\n              label=\"Surname*\"\n            />\n            <v-text-field\n              required\n              @blur=\"validatePhone\"\n              @change=\"validatePhone\"\n              @input=\"validatePhone\"\n              :error-messages=\"phoneErrors\"\n              v-model=\"phone\"\n              filled\n              color=\"deep-purple\"\n              label=\"Phone*\"\n            />\n            <v-text-field\n              required\n              @blur=\"validateEmail\"\n              @change=\"validateEmail\"\n              @input=\"validateEmail\"\n              :error-messages=\"emailErrors\"\n              v-model=\"email\"\n              filled\n              color=\"deep-purple\"\n              label=\"Email*\"\n            />\n            <v-text-field\n              required\n              @blur=\"$v.userName.$touch()\"\n              @change=\"$v.surname.$touch()\"\n              :error-messages=\"usernameErrors\"\n              v-model=\"userName\"\n              filled\n              color=\"deep-purple\"\n              label=\"Username*\"\n            />\n            <label\n              v-for='(type, name) in $store.state.customSignupFields'\n              :key=\"name\"\n            >\n              <v-text-field\n                v-if='type.required'\n                required\n                v-model=\"customFields[name]\"\n                filled\n                color=\"deep-purple\"\n                :label=\"type.display\"\n              />\n              <v-text-field\n                v-else\n                required\n                v-model=\"customFields[name]\"\n                filled\n                color=\"deep-purple\"\n                :label=\"type.display\"\n              />\n            </label>\n            <v-text-field\n              required\n              @blur=\"$v.password.$touch()\"\n              @change=\"$v.password.$touch()\"\n              :error-messages=\"passwordErrors\"\n              v-model=\"password\"\n              type=\"password\"\n              filled\n              color=\"deep-purple\"\n              label=\"Password*\"\n            />\n            <v-text-field\n              required\n              @blur=\"$v.retype_password.$touch()\"\n              @change=\"$v.retype_password.$touch()\"\n              :error-messages=\"retype_passwordErrors\"\n              v-model=\"retype_password\"\n              type=\"password\"\n              filled\n              color=\"deep-purple\"\n              label=\"Re-type Password*\"\n            />\n            <v-select\n              required\n              :items=\"roles\"\n              v-model=\"role\"\n              single-line\n              clearable\n              @blur=\"$v.role.$touch()\"\n              @change=\"$v.role.$touch()\"\n              :error-messages=\"roleErrors\"\n              filled\n              label=\"Role*\"\n            ></v-select>\n          </v-form>\n          <v-divider />\n          <v-card-actions>\n            <v-btn\n              text\n              @click=\"$store.state.baseRouterViewKey++\"\n            >\n              <v-icon>mdi-close</v-icon>Clear\n            </v-btn>\n            <v-spacer />\n            <v-btn\n              @click=\"addUser()\"\n              :disabled=\"$v.$invalid\"\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              depressed\n            >\n              <v-icon left>mdi-web</v-icon>Add\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-flex>\n      <v-spacer />\n    </v-layout>\n  </v-container>\n</template>\n<script>\nimport axios from 'axios'\nimport { required } from 'vuelidate/lib/validators'\nimport { generalMixin } from '../mixins/generalMixin'\n\nexport default {\n  mixins: [generalMixin],\n  validations: {\n    userName: { required },\n    retype_password: { required },\n    password: { required },\n    role: { required },\n    firstName: { required },\n    surname: { required },\n    phone: { required },\n    email: { required }\n  },\n  data () {\n    return {\n      firstName: '',\n      otherName: '',\n      surname: '',\n      phone: '',\n      email: '',\n      userName: '',\n      password: '',\n      retype_password: '',\n      role: '',\n      customFields: [],\n      phoneErrors: [],\n      emailErrors: []\n    }\n  },\n  methods: {\n    validateEmail () {\n      this.emailErrors = []\n      if (!this.email) {\n        this.emailErrors.push('Email is required')\n        return false\n      }\n      let re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n      if (!re.test(this.email)) {\n        this.emailErrors.push('Invalid Email')\n        return false\n      }\n    },\n    validatePhone () {\n      this.phoneErrors = []\n      if (!this.phone) {\n        return this.phoneErrors.push('Phone is required')\n      }\n      let re = /^[+]?[\\s./0-9]*[(]?[0-9]{1,4}[)]?[-\\s./0-9]*$/g\n      if (!re.test(this.phone)) {\n        return this.phoneErrors.push('Invalid phone number')\n      }\n    },\n    addUser () {\n      if (this.password !== this.retype_password) {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'Password mismatch'\n        return\n      }\n      this.$store.state.dynamicProgress = true\n      this.$store.state.progressTitle = 'Saving User'\n      let formData = new FormData()\n      formData.append('firstName', this.firstName)\n      formData.append('otherName', this.otherName)\n      formData.append('password', this.password)\n      formData.append('userName', this.userName)\n      formData.append('surname', this.surname)\n      formData.append('phone', this.phone)\n      formData.append('email', this.email)\n      formData.append('role', this.role)\n      for (let field in this.customFields) {\n        formData.append(field, this.customFields[field])\n      }\n      axios.post('/addUser/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(() => {\n        this.$store.state.alert.show = true\n        this.$store.state.alert.width = '500px'\n        this.$store.state.alert.msg = 'User added successfully'\n        this.$store.state.alert.type = 'success'\n        // increment component key to force component reload\n        this.$store.state.baseRouterViewKey += 1\n      }).catch((err) => {\n        this.$store.state.alert.show = true\n        this.$store.state.alert.width = '500px'\n        this.$store.state.alert.msg = 'This user was not added, ensure userName is not used'\n        this.$store.state.alert.type = 'error'\n        this.$store.state.baseRouterViewKey += 1\n        console.log(err.response.data.error)\n      })\n    }\n  },\n  computed: {\n    codeErrors () {\n      const errors = []\n      if (!this.$v.code.$dirty) return errors\n      !this.$v.code.required && errors.push('Code is required')\n      return errors\n    },\n    firstnameErrors () {\n      const errors = []\n      if (!this.$v.firstName.$dirty) return errors\n      !this.$v.firstName.required && errors.push('First Name is required')\n      return errors\n    },\n    surnameErrors () {\n      const errors = []\n      if (!this.$v.surname.$dirty) return errors\n      !this.$v.surname.required && errors.push('Surname is required')\n      return errors\n    },\n    usernameErrors () {\n      const errors = []\n      if (!this.$v.userName.$dirty) return errors\n      !this.$v.userName.required && errors.push('Username is required')\n      return errors\n    },\n    passwordErrors () {\n      const errors = []\n      if (!this.$v.password.$dirty) return errors\n      !this.$v.password.required && errors.push('Password is required')\n      return errors\n    },\n    retype_passwordErrors () {\n      const errors = []\n      if (!this.$v.retype_password.$dirty) return errors\n      !this.$v.retype_password.required && errors.push('Re-type Password')\n      return errors\n    },\n    roleErrors () {\n      const errors = []\n      if (!this.$v.role.$dirty) return errors\n      !this.$v.role.required && errors.push('Role is required')\n      return errors\n    }\n  },\n  created () {\n    this.getRoles()\n  }\n}\n</script>\n"]}]}