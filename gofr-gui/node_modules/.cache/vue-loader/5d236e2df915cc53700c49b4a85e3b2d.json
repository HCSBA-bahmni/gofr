{"remainingRequest":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr2/src/components/ReconciliationExport.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr2/src/components/ReconciliationExport.vue","mtime":1619159127134},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ReconciliationExport.vue"],"names":[],"mappingsfile":"ReconciliationExport.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container grid-list-xs>\n    <v-dialog\n      persistent\n      v-model=\"downloadDialog\"\n      width=\"620px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Select file type to download\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-icon @click='closeDownloadDialog'>mdi-close</v-icon>\n        </v-toolbar>\n        <v-card-text>\n\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            rounded\n            color=\"info\"\n            @click='downloadMatched'\n          >\n            <v-icon left>mdi-file-multiple-outline</v-icon>\n            Matched\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            rounded\n            color=\"info\"\n            @click='downloadSource1Unmatched'\n          >\n            <v-icon left>mdi-file-multiple-outline</v-icon>\n            Source1 Unmatched\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            rounded\n            color=\"info\"\n            @click='downloadSource2Unmatched'\n          >\n            <v-icon left>mdi-file-multiple-outline</v-icon>\n            Source2 Unmatched\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-layout\n      row\n      wrap\n    >\n      <v-flex xs6>\n        <v-btn\n          color=\"success\"\n          rounded\n          small\n          @click='csvExport'\n        >\n          <v-icon left>mdi-file-multiple-outline</v-icon>\n          <v-progress-circular\n            v-if='loadingCSV'\n            indeterminate\n            color=\"red\"\n          ></v-progress-circular>\n          CSV Export\n        </v-btn>\n      </v-flex>\n      <v-flex xs6>\n        <v-btn\n          color=\"success\"\n          rounded\n          small\n          @click='fhirExport'\n        >\n          <v-icon left>mdi-file-multiple-outline</v-icon>\n          <v-progress-circular\n            v-if='loadingFHIR'\n            indeterminate\n            color=\"red\"\n          ></v-progress-circular>\n          FHIR Export\n        </v-btn>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n<script>\nimport axios from 'axios'\nimport { scoresMixin } from '../mixins/scoresMixin'\nimport { generalMixin } from '../mixins/generalMixin'\nexport default {\n  mixins: [scoresMixin, generalMixin],\n  data () {\n    return {\n      loadingCSV: false,\n      loadingFHIR: false,\n      downloadDialog: false,\n      matchedDownloadData: '',\n      unmatchedSource1DownloadData: '',\n      unmatchedSource2DownloadData: '',\n      downloadType: ''\n    }\n  },\n  methods: {\n    closeDownloadDialog () {\n      this.downloadDialog = false\n      this.matchedDownloadData = ''\n      this.unmatchedSource1DownloadData = ''\n      this.unmatchedSource2DownloadData = ''\n    },\n    matchedLocations (type) {\n      let userID = this.$store.state.activePair.userID._id\n      let source1 = this.getSource1()\n      let source2 = this.getSource2()\n      let sourcesOwner = this.getDatasourceOwner()\n      let source1Owner = sourcesOwner.source1Owner\n      let source2Owner = sourcesOwner.source2Owner\n      let levelMapping1 = JSON.stringify(this.$store.state.levelMapping.source1)\n      let levelMapping2 = JSON.stringify(this.$store.state.levelMapping.source2)\n      let source1LimitOrgId = this.getLimitOrgIdOnActivePair().source1LimitOrgId\n      let source2LimitOrgId = this.getLimitOrgIdOnActivePair().source2LimitOrgId\n      let params = {\n        source1,\n        source2,\n        source1Owner,\n        source2Owner,\n        type,\n        userID,\n        source1LimitOrgId,\n        source2LimitOrgId,\n        levelMapping1,\n        levelMapping2\n      }\n      return axios.get('/matchedLocations', { params })\n    },\n    unMatchedLocations (type) {\n      let userID = this.$store.state.activePair.userID._id\n      let sourcesOwner = this.getDatasourceOwner()\n      let source1Owner = sourcesOwner.source1Owner\n      let source2Owner = sourcesOwner.source2Owner\n      let levelMapping1 = this.$store.state.levelMapping.source1\n      let levelMapping2 = this.$store.state.levelMapping.source2\n      let source1LimitOrgId = this.getLimitOrgIdOnActivePair().source1LimitOrgId\n      let source2LimitOrgId = this.getLimitOrgIdOnActivePair().source2LimitOrgId\n      let source1 = this.getSource1()\n      let source2 = this.getSource2()\n      let params = {\n        source1,\n        source2,\n        source1Owner,\n        source2Owner,\n        type,\n        userID,\n        source1LimitOrgId,\n        source2LimitOrgId,\n        levelMapping1,\n        levelMapping2\n      }\n      return axios.get('/unmatchedLocations', { params })\n    },\n    csvExport () {\n      this.loadingCSV = true\n      let me = this\n      axios\n        .all([this.matchedLocations('CSV'), this.unMatchedLocations('CSV')])\n        .then(\n          axios.spread(function (matchResponse, unmatchResponse) {\n            me.loadingCSV = false\n            me.downloadDialog = true\n            me.downloadType = 'csv'\n            me.matchedDownloadData = matchResponse.data\n            me.unmatchedSource1DownloadData = unmatchResponse.data.unmatchedSource1CSV\n            me.unmatchedSource2DownloadData = unmatchResponse.data.unmatchedSource2CSV\n          })\n        )\n    },\n    fhirExport () {\n      this.loadingFHIR = true\n      let me = this\n      axios\n        .all([this.matchedLocations('FHIR'), this.unMatchedLocations('FHIR')])\n        .then(\n          axios.spread(function (matchResponse, unmatchResponse) {\n            me.loadingFHIR = false\n            me.downloadDialog = true\n            me.downloadType = 'fhir'\n            me.matchedDownloadData = matchResponse.data\n            me.unmatchedSource1DownloadData = unmatchResponse.data.unmatchedSource1mCSD\n            me.unmatchedSource2DownloadData = unmatchResponse.data.unmatchedSource2mCSD\n          })\n        )\n    },\n    downloadMatched () {\n      let extension, encoding\n      if (this.downloadType === 'fhir') {\n        extension = 'json'\n        encoding = 'data:text/json;charset=utf-8,'\n        this.matchedDownloadData = JSON.stringify(this.matchedDownloadData)\n      } else {\n        extension = 'csv'\n        encoding = 'data:text/csv;charset=utf-8,'\n      }\n      // const matchedData = encodeURI(\n      //   encoding + this.matchedDownloadData\n      // )\n      const matchedData = encoding + escape(this.matchedDownloadData)\n      const link = document.createElement('a')\n      link.setAttribute('href', matchedData)\n      link.setAttribute(\n        'download',\n        `matched${this.getSource1()}${this.getSource2()}.${extension}`\n      )\n      link.click()\n    },\n    downloadSource1Unmatched () {\n      let extension, encoding\n      if (this.downloadType === 'fhir') {\n        extension = 'json'\n        encoding = 'data:text/json;charset=utf-8,'\n        this.unmatchedSource1DownloadData = JSON.stringify(this.unmatchedSource1DownloadData)\n      } else {\n        extension = 'csv'\n        encoding = 'data:text/csv;charset=utf-8,'\n      }\n      // const unmatchedSource1Data = encodeURI(\n      //   encoding + this.unmatchedSource1DownloadData\n      // )\n      const unmatchedSource1Data = encoding + escape(this.unmatchedSource1DownloadData)\n      const link = document.createElement('a')\n      link.setAttribute('href', unmatchedSource1Data)\n      link.setAttribute('download', `unmatched${this.getSource1()}.${extension}`)\n      link.click()\n    },\n    downloadSource2Unmatched () {\n      let extension, encoding\n      if (this.downloadType === 'fhir') {\n        extension = 'json'\n        encoding = 'data:text/json;charset=utf-8,'\n        this.unmatchedSource2DownloadData = JSON.stringify(this.unmatchedSource2DownloadData)\n      } else {\n        extension = 'csv'\n        encoding = 'data:text/csv;charset=utf-8,'\n      }\n      // const unmatchedSource2Data = encodeURI(\n      //   encoding + this.unmatchedSource2DownloadData\n      // )\n      const unmatchedSource2Data = encoding + escape(this.unmatchedSource2DownloadData)\n      const link = document.createElement('a')\n      link.setAttribute('href', unmatchedSource2Data)\n      link.setAttribute('download', `unmatched${this.getSource2()}.${extension}`)\n      link.click()\n    }\n  }\n}\n</script>\n"]}]}