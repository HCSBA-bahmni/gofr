{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/Configure.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/Configure.vue","mtime":1619257194369},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IFJlbW90ZVN5bmMgZnJvbSAnLi9EYXRhU291cmNlcy9SZW1vdGVTeW5jJwppbXBvcnQgeyBldmVudEJ1cyB9IGZyb20gJ0AvbWFpbicKaW1wb3J0IFZ1ZUNvb2tpZXMgZnJvbSAndnVlLWNvb2tpZXMnCmltcG9ydCB7IHJlcXVpcmVkIH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJwppbXBvcnQgeyBnZW5lcmFsTWl4aW4gfSBmcm9tICdAL21peGlucy9nZW5lcmFsTWl4aW4nCmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFtnZW5lcmFsTWl4aW5dLAogIHZhbGlkYXRpb25zOiB7CiAgICBmYWNpbGl0eTogewogICAgICByZXF1aXJlZDogcmVxdWlyZWQKICAgIH0sCiAgICBjb2RlOiB7CiAgICAgIHJlcXVpcmVkOiByZXF1aXJlZAogICAgfSwKICAgIHVwbG9hZE5hbWU6IHsKICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICB9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHNtdHA6IHsKICAgICAgICBob3N0OiAnJywKICAgICAgICBwb3J0OiAnJywKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIHNlY3VyZWQ6IHRydWUKICAgICAgfSwKICAgICAgYXV0b0Rpc2FibGVTaW5nbGVEYXRhc291cmNlRGlhbG9nOiBmYWxzZSwKICAgICAgc2VsZWN0RGF0YXNvdXJjZURpYWxvZzogZmFsc2UsCiAgICAgIGZpeFNvdXJjZTJUbzogJycsCiAgICAgIHNlYXJjaERhdGFzb3VyY2U6ICcnLAogICAgICBkYXRhU291cmNlSGVhZGVyczogWwogICAgICAgIHsgc29ydGFibGU6IGZhbHNlIH0sCiAgICAgICAgeyB0ZXh0OiAnU291cmNlIE5hbWUnLCBhbGlnbjogJ2xlZnQnLCB2YWx1ZTogJ25hbWUnIH0sCiAgICAgICAgeyB0ZXh0OiAnT3duZXInLCB2YWx1ZTogJ293bmVyJywgc29ydGFibGU6IGZhbHNlIH0sCiAgICAgICAgeyB0ZXh0OiAnQ3JlYXRlZCBUaW1lJywgdmFsdWU6ICdjcmVhdGVkVGltZScgfQogICAgICBdLAogICAgICBjcm9uRGF0YVNvdXJjZUhlYWRlcnM6IFsKICAgICAgICB7IHRleHQ6ICdTb3VyY2UgTmFtZScsIGFsaWduOiAnbGVmdCcsIHZhbHVlOiAnbmFtZScgfSwKICAgICAgICB7IHRleHQ6ICdPd25lcicsIHZhbHVlOiAnb3duZXInLCBzb3J0YWJsZTogZmFsc2UgfSwKICAgICAgICB7IHRleHQ6ICdDcmVhdGVkIFRpbWUnLCB2YWx1ZTogJ2NyZWF0ZWRUaW1lJyB9LAogICAgICAgIHsgdGV4dDogJ0VuYWJsZWQnLCB2YWx1ZTogJ2VuYWJsZWQnIH0KICAgICAgXSwKICAgICAgZGF0YXNldHNBdXRvc3luY1N0YXRlOiB7fSwKICAgICAgdXNlQ1NWSGVhZGVyOiBmYWxzZSwKICAgICAgbW9yZUZpZWxkczogZmFsc2UsCiAgICAgIGZpZWxkTGFiZWw6ICcnLAogICAgICBmaWVsZE5hbWU6ICcnLAogICAgICByZXF1aXJlZDogJ05vJywKICAgICAgcmVxdWlyZWRUZXh0OiBbJ1llcycsICdObyddLAogICAgICBzaWdudXBGaWVsZHM6IFtdLAogICAgICBub3RpZmljYXRpb25fZW5kcG9pbnQ6ICcnLAogICAgICBub3RpZmljYXRpb25fdXNlcm5hbWU6ICcnLAogICAgICBub3RpZmljYXRpb25fcGFzc3dvcmQ6ICcnLAogICAgICBkaGlzMlJvbGVzOiBbXSwKICAgICAgbG9hZGluZ0RoaXMyUm9sZXM6IGZhbHNlLAogICAgICBkYXRhc2V0TmFtZUVycm9yczogW10sCiAgICAgIGRlZmluZVN1cGVydXNlclJvbGU6IGZhbHNlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjb250cm9sRGF0YXNldHNDcm9uam9icyAoZGF0YXNldCkgewogICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2lkJywgZGF0YXNldC5faWQpCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZW5hYmxlZCcsIHRoaXMuZGF0YXNldHNBdXRvc3luY1N0YXRlW2RhdGFzZXQuX2lkXSkKICAgICAgYXhpb3MucG9zdCgnL3VwZGF0ZURhdGFzZXRBdXRvc3luYycsIGZvcm1EYXRhKQogICAgfSwKICAgIGNoZWNrRGF0YXNldHNBZGRpdGlvbldheXMgKHdheSkgewogICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcuZGF0YXNldHNBZGRpdGlvbldheXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JUaXRsZSA9ICdDYW50IGRpc2FibGUgYm90aCB3YXlzJwogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVycm9yRGVzY3JpcHRpb24gPSAnVGhlcmUgbXVzdCBiZSBhdGxlYXN0IG9uZSB3YXkgb2YgYWRkaW5nIGEgZGF0YXNldCcKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dFcnJvciA9IHRydWUKICAgICAgICBsZXQgYWRkaXRpb25XYXkKICAgICAgICBpZiAod2F5ID09PSAncmVtb3RlJykgewogICAgICAgICAgYWRkaXRpb25XYXkgPSAnUmVtb3RlIFNlcnZlcnMgU3luYycKICAgICAgICB9IGVsc2UgaWYgKHdheSA9PT0gJ3VwbG9hZCcpIHsKICAgICAgICAgIGFkZGl0aW9uV2F5ID0gJ0NTViBVcGxvYWQnCiAgICAgICAgfQogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLmRhdGFzZXRzQWRkaXRpb25XYXlzLnB1c2goYWRkaXRpb25XYXkpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zYXZlQ29uZmlndXJhdGlvbignZ2VuZXJhbENvbmZpZycsICdkYXRhc2V0c0FkZGl0aW9uV2F5cycpCiAgICAgIH0KICAgIH0sCiAgICBhdXRvRGlzYWJsZVNpbmdsZURhdGFzb3VyY2UgKGNvbmZpcm1hdGlvbikgewogICAgICBpZiAoY29uZmlybWF0aW9uID09PSAnb2snKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb25jaWxpYXRpb24uc2luZ2xlRGF0YVNvdXJjZSA9IGZhbHNlCiAgICAgICAgdGhpcy5zYXZlQ29uZmlndXJhdGlvbignZ2VuZXJhbENvbmZpZycsICdmaXhTb3VyY2UyJykKICAgICAgICB0aGlzLnNhdmVDb25maWd1cmF0aW9uKCdnZW5lcmFsQ29uZmlnJywgJ3NpbmdsZURhdGFTb3VyY2UnKQogICAgICB9IGVsc2UgaWYgKGNvbmZpcm1hdGlvbiA9PT0gJ2NhbmNlbCcpIHsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5yZWNvbmNpbGlhdGlvbi5maXhTb3VyY2UyID0gdHJ1ZQogICAgICB9CiAgICAgIHRoaXMuYXV0b0Rpc2FibGVTaW5nbGVEYXRhc291cmNlRGlhbG9nID0gZmFsc2UKICAgIH0sCiAgICBzaW5nbGVEYXRhc291cmNlICgpIHsKICAgICAgaWYgKAogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLnJlY29uY2lsaWF0aW9uLnNpbmdsZURhdGFTb3VyY2UKICAgICAgKSB7CiAgICAgICAgaWYgKAogICAgICAgICAgIXRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLnJlY29uY2lsaWF0aW9uLmZpeFNvdXJjZTJUbyB8fAogICAgICAgICAgIXRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLnJlY29uY2lsaWF0aW9uLmZpeFNvdXJjZTIKICAgICAgICApIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmRpYWxvZ0Vycm9yID0gdHJ1ZQogICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JUaXRsZSA9ICdFcnJvcicKICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVycm9yQ29sb3IgPSAnZXJyb3InCiAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5lcnJvckRlc2NyaXB0aW9uID0gJ1RoaXMgZmVhdHVyZSBjYW4gb25seSBiZSBlbmFibGVkIGlmIHRoZXJlIGlzIGEgZGVmaW5lZCBkYXRhc291cmNlIHRvIHNlcnZlIGFzIFNvdXJjZSAyIGZvciBhbGwgcmVjb25jaWxpYXRpb24nCiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb25jaWxpYXRpb24uc2luZ2xlRGF0YVNvdXJjZSA9IGZhbHNlCiAgICAgICAgICB9KQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnNhdmVDb25maWd1cmF0aW9uKCdnZW5lcmFsQ29uZmlnJywgJ3NpbmdsZURhdGFTb3VyY2UnKQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNhdmVDb25maWd1cmF0aW9uKCdnZW5lcmFsQ29uZmlnJywgJ3NpbmdsZURhdGFTb3VyY2UnKQogICAgICB9CiAgICB9LAogICAgZGlzcGxheURhdGFzb3VyY2VEaWFsb2cgKCkgewogICAgICBpZiAoCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb25jaWxpYXRpb24uZml4U291cmNlMiA9PT0KICAgICAgICB0cnVlCiAgICAgICkgewogICAgICAgIHRoaXMuZml4U291cmNlMlRvID0gdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb25jaWxpYXRpb24uZml4U291cmNlMlRvCiAgICAgICAgdGhpcy5zZWxlY3REYXRhc291cmNlRGlhbG9nID0gdHJ1ZQogICAgICAgIHRoaXMuc2F2ZUNvbmZpZ3VyYXRpb24oJ2dlbmVyYWxDb25maWcnLCAnZml4U291cmNlMicpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLnJlY29uY2lsaWF0aW9uLnNpbmdsZURhdGFTb3VyY2UpIHsKICAgICAgICAgIHRoaXMuYXV0b0Rpc2FibGVTaW5nbGVEYXRhc291cmNlRGlhbG9nID0gdHJ1ZQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnNhdmVDb25maWd1cmF0aW9uKCdnZW5lcmFsQ29uZmlnJywgJ2ZpeFNvdXJjZTInKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGNsb3NlRGF0YXNvdXJjZURpYWxvZyAoKSB7CiAgICAgIHRoaXMuc2VsZWN0RGF0YXNvdXJjZURpYWxvZyA9IGZhbHNlCiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb25jaWxpYXRpb24uZml4U291cmNlMlRvKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb25jaWxpYXRpb24uZml4U291cmNlMiA9IGZhbHNlCiAgICAgICAgdGhpcy5zYXZlQ29uZmlndXJhdGlvbignZ2VuZXJhbENvbmZpZycsICdmaXhTb3VyY2UyJykKICAgICAgfQogICAgfSwKICAgIHNhdmVmaXhTb3VyY2UyVG8gKCkgewogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5yZWNvbmNpbGlhdGlvbi5maXhTb3VyY2UyVG8gPSB0aGlzLmZpeFNvdXJjZTJUbwogICAgICB0aGlzLnNhdmVDb25maWd1cmF0aW9uKCdnZW5lcmFsQ29uZmlnJywgJ2ZpeFNvdXJjZTJUbycpCiAgICAgIHRoaXMuc2VsZWN0RGF0YXNvdXJjZURpYWxvZyA9IGZhbHNlCiAgICB9LAogICAgZGlzYWJsZUdPRlJBdXRoICgpIHsKICAgICAgaWYgKCF0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5hdXRoRGlzYWJsZWQpIHsKICAgICAgICB0aGlzLnNhdmVDb25maWd1cmF0aW9uKCdnZW5lcmFsQ29uZmlnJywgJ2F1dGhEaXNhYmxlZCcpCiAgICAgIH0gZWxzZSBpZiAodGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcuYXV0aERpc2FibGVkKSB7CiAgICAgICAgbGV0IGlzU2V0ID0gdGhpcy5zZXRESElTMkNyZWRlbnRpYWxzKCkKICAgICAgICBpZiAoIWlzU2V0KSB7CiAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dFcnJvciA9IHRydWUKICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVycm9yVGl0bGUgPSAnRXJyb3InCiAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5lcnJvckNvbG9yID0gJ2Vycm9yJwogICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JEZXNjcmlwdGlvbiA9ICdBcHAgZG9lc250IGFwcGVhciB0byBiZSBydW5uaW5nIGluc2lkZSBESElTMiwgY2FudCBkaXNhYmxlIGF1dGhlbnRpY2F0aW9uJwogICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLmF1dGhEaXNhYmxlZCA9IGZhbHNlCiAgICAgICAgICB9KQogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICAgIHRoaXMubG9hZGluZ0RoaXMyUm9sZXMgPSB0cnVlCiAgICAgICAgdGhpcy5nZXRESElTMlJvbGVzKHJvbGVzID0+IHsKICAgICAgICAgIHRoaXMubG9hZGluZ0RoaXMyUm9sZXMgPSBmYWxzZQogICAgICAgICAgdGhpcy5kaGlzMlJvbGVzID0gWy4uLnJvbGVzLmRhdGEudXNlclJvbGVzXQogICAgICAgIH0pCiAgICAgICAgdGhpcy5kZWZpbmVTdXBlcnVzZXJSb2xlID0gdHJ1ZQogICAgICB9CiAgICB9LAogICAgcmVjb1Byb2dyZXNzTm90aWZpY2F0aW9uQ2hhbmdlZCAoKSB7CiAgICAgIGlmICghdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcuaGFzT3duUHJvcGVydHkoJ3JlY29Qcm9ncmVzc05vdGlmaWNhdGlvbicpKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb1Byb2dyZXNzTm90aWZpY2F0aW9uID0ge30KICAgICAgfQogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5yZWNvUHJvZ3Jlc3NOb3RpZmljYXRpb24udXJsID0gdGhpcy5ub3RpZmljYXRpb25fZW5kcG9pbnQKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb1Byb2dyZXNzTm90aWZpY2F0aW9uLnVzZXJuYW1lID0gdGhpcy5ub3RpZmljYXRpb25fdXNlcm5hbWUKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb1Byb2dyZXNzTm90aWZpY2F0aW9uLnBhc3N3b3JkID0gdGhpcy5ub3RpZmljYXRpb25fcGFzc3dvcmQKICAgICAgdGhpcy5zYXZlQ29uZmlndXJhdGlvbignZ2VuZXJhbENvbmZpZycpCiAgICB9LAogICAgc2F2ZVNNVFAgKCkgewogICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKQogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5wcm9ncmVzc1RpdGxlID0gJ1NhdmluZyBTTVRQJwogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5keW5hbWljUHJvZ3Jlc3MgPSB0cnVlCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnaG9zdCcsIHRoaXMuc210cC5ob3N0KQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3BvcnQnLCB0aGlzLnNtdHAucG9ydCkKICAgICAgZm9ybURhdGEuYXBwZW5kKCd1c2VybmFtZScsIHRoaXMuc210cC51c2VybmFtZSkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdwYXNzd29yZCcsIHRoaXMuc210cC5wYXNzd29yZCkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdzZWN1cmVkJywgdGhpcy5zbXRwLnNlY3VyZWQpCiAgICAgIGF4aW9zLnBvc3QoJy9zYXZlU01UUCcsIGZvcm1EYXRhLCBmb3JtRGF0YSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICB9CiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmR5bmFtaWNQcm9ncmVzcyA9IGZhbHNlCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nRXJyb3IgPSB0cnVlCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JDb2xvciA9ICdwcmltYXJ5JwogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVycm9yVGl0bGUgPSAnSW5mbycKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5lcnJvckRlc2NyaXB0aW9uID0gJ1NNVFAgc2F2ZWQgc3VjY2Vzc2Z1bGx5JwogICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKQogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmR5bmFtaWNQcm9ncmVzcyA9IGZhbHNlCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nRXJyb3IgPSB0cnVlCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JDb2xvciA9ICdlcnJvcicKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5lcnJvclRpdGxlID0gJ0Vycm9yJwogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVycm9yRGVzY3JpcHRpb24gPSAnU01UUCBmYWlsZWQgdG8gYmUgc2F2ZWQnCiAgICAgIH0pCiAgICB9LAogICAgYWRkTW9yZUZpZWxkcyAoKSB7CiAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLnByb2dyZXNzVGl0bGUgPSAnU2F2aW5nIGZpZWxkJwogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5keW5hbWljUHJvZ3Jlc3MgPSB0cnVlCiAgICAgIGxldCBleGlzdCA9IHRoaXMuc2lnbnVwRmllbGRzWzBdLmNoaWxkcmVuLmZpbmQoY2hpbGQgPT4gewogICAgICAgIHJldHVybiBjaGlsZC5pZCA9PT0gdGhpcy5maWVsZE5hbWUKICAgICAgfSkKICAgICAgaWYgKCFleGlzdCkgewogICAgICAgIGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpCiAgICAgICAgbGV0IHJlcXVpcmVkCiAgICAgICAgaWYgKHRoaXMucmVxdWlyZWQgPT09ICdZZXMnKSB7CiAgICAgICAgICByZXF1aXJlZCA9IHRydWUKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVxdWlyZWQgPSBmYWxzZQogICAgICAgIH0KICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpZWxkTmFtZScsIHRoaXMuZmllbGROYW1lKQogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmllbGRMYWJlbCcsIHRoaXMuZmllbGRMYWJlbCkKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpZWxkUmVxdWlyZWQnLCByZXF1aXJlZCkKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2Zvcm0nLCAnc2lnbnVwJykKICAgICAgICBheGlvcwogICAgICAgICAgLnBvc3QoJy9hZGRGb3JtRmllbGQnLCBmb3JtRGF0YSwgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5keW5hbWljUHJvZ3Jlc3MgPSBmYWxzZQogICAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dFcnJvciA9IHRydWUKICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JUaXRsZSA9ICdJbmZvJwogICAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5lcnJvckRlc2NyaXB0aW9uID0gJ0ZpZWxkIGFkZGVkIHN1Y2Nlc3NmdWxseScKCiAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLnNpZ251cEZpZWxkc1t0aGlzLmZpZWxkTmFtZV0gPSB7CiAgICAgICAgICAgICAgdHlwZTogJ1N0cmluZycsCiAgICAgICAgICAgICAgZGlzcGxheTogdGhpcy5maWVsZExhYmVsCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY3VzdG9tU2lnbnVwRmllbGRzW3RoaXMuZmllbGROYW1lXSA9IHsKICAgICAgICAgICAgICB0eXBlOiAnU3RyaW5nJywKICAgICAgICAgICAgICBkaXNwbGF5OiB0aGlzLmZpZWxkTGFiZWwKICAgICAgICAgICAgfQogICAgICAgICAgICBWdWVDb29raWVzLnNldCgKICAgICAgICAgICAgICAnc2lnbnVwRmllbGRzJywKICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5zaWdudXBGaWVsZHMsCiAgICAgICAgICAgICAgJ2luZmluaXR5JwogICAgICAgICAgICApCiAgICAgICAgICAgIFZ1ZUNvb2tpZXMuc2V0KAogICAgICAgICAgICAgICdjdXN0b21TaWdudXBGaWVsZHMnLAogICAgICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmN1c3RvbVNpZ251cEZpZWxkcywKICAgICAgICAgICAgICAnaW5maW5pdHknCiAgICAgICAgICAgICkKICAgICAgICAgICAgdGhpcy5zaWdudXBGaWVsZHNbMF0uY2hpbGRyZW4ucHVzaCh7CiAgICAgICAgICAgICAgaWQ6IHRoaXMuZmllbGROYW1lLAogICAgICAgICAgICAgIG5hbWU6IHRoaXMuZmllbGRMYWJlbAogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmZpZWxkTmFtZSA9ICcnCiAgICAgICAgICAgIHRoaXMuZmllbGRMYWJlbCA9ICcnCiAgICAgICAgICAgIHRoaXMucmVxdWlyZWQgPSAnTm8nCiAgICAgICAgICB9KQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmRpYWxvZ0Vycm9yID0gdHJ1ZQogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmVycm9yVGl0bGUgPSAnRXJyb3InCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JEZXNjcmlwdGlvbiA9ICdGaWVsZCBuYW1lIG11c3QgYmUgdW5pcXVlJwogICAgICB9CiAgICB9LAogICAgcHVsbE9yZ1VuaXRzICgpIHsKICAgICAgdGhpcy5zYXZlQ29uZmlndXJhdGlvbignZ2VuZXJhbENvbmZpZycsICdleHRlcm5hbEF1dGgnKQogICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2hvc3QnLCB0aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLmhvc3QpCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnc291cmNlVHlwZScsICdESElTMicpCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnc291cmNlJywgJ3N5bmNTZXJ2ZXInKQogICAgICBmb3JtRGF0YS5hcHBlbmQoCiAgICAgICAgJ3NoYXJlVG9BbGwnLAogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLmV4dGVybmFsQXV0aC5zaGFyZU9yZ1VuaXRzCiAgICAgICkKICAgICAgZm9ybURhdGEuYXBwZW5kKAogICAgICAgICdsaW1pdEJ5VXNlckxvY2F0aW9uJywKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5leHRlcm5hbEF1dGguc2hhcmVCeU9yZ0lkCiAgICAgICkKICAgICAgZm9ybURhdGEuYXBwZW5kKAogICAgICAgICd1c2VybmFtZScsCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcuZXh0ZXJuYWxBdXRoLnVzZXJOYW1lCiAgICAgICkKICAgICAgZm9ybURhdGEuYXBwZW5kKAogICAgICAgICdwYXNzd29yZCcsCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcuZXh0ZXJuYWxBdXRoLnBhc3N3b3JkCiAgICAgICkKICAgICAgZm9ybURhdGEuYXBwZW5kKAogICAgICAgICduYW1lJywKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5leHRlcm5hbEF1dGguZGF0YXNldE5hbWUKICAgICAgKQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3VzZXJJRCcsIHRoaXMuJHN0b3JlLnN0YXRlLmF1dGgudXNlcklEKQoKICAgICAgYXhpb3MKICAgICAgICAucG9zdCgnL2FkZERhdGFTb3VyY2UnLCBmb3JtRGF0YSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICBldmVudEJ1cy4kZW1pdCgncnVuUmVtb3RlU3luYycpCiAgICAgICAgfSkKICAgIH0sCiAgICBnZXRESElTMlJvbGVzIChjYWxsYmFjaykgewogICAgICBsZXQgYXV0aCA9IHRoaXMuJHN0b3JlLnN0YXRlLmRoaXMuZGV2LmF1dGgKICAgICAgaWYgKGF1dGgudXNlcm5hbWUgPT09ICcnKSB7CiAgICAgICAgYXV0aCA9ICcnCiAgICAgIH0KICAgICAgYXhpb3MKICAgICAgICAuZ2V0KHRoaXMuJHN0b3JlLnN0YXRlLmRoaXMuaG9zdCArICdhcGkvdXNlclJvbGVzJywgeyBhdXRoIH0pCiAgICAgICAgLnRoZW4ocm9sZXMgPT4gewogICAgICAgICAgY2FsbGJhY2socm9sZXMpCiAgICAgICAgfSkKICAgIH0sCiAgICBlbnN1cmVOYW1lVW5pcXVlICgpIHsKICAgICAgdGhpcy5kYXRhc2V0TmFtZUVycm9ycyA9IFtdCiAgICAgIGlmICgKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5leHRlcm5hbEF1dGguZGF0YXNldE5hbWUgPT09ICcnCiAgICAgICkgewogICAgICAgIHJldHVybiB0aGlzLmRhdGFzZXROYW1lRXJyb3JzLnB1c2goJ0RhdGFzZXQgbmFtZSBpcyByZXF1aXJlZCcpCiAgICAgIH0KICAgICAgZm9yIChsZXQgZHRTcmMgb2YgdGhpcy4kc3RvcmUuc3RhdGUuZGF0YVNvdXJjZXMpIHsKICAgICAgICBpZiAoZHRTcmMubmFtZSA9PT0gdGhpcy51cGxvYWROYW1lKSB7CiAgICAgICAgICB0aGlzLmRhdGFzZXROYW1lRXJyb3JzLnB1c2goJ1RoaXMgTmFtZSBFeGlzdHMnKQogICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIGF4aW9zLmdldCgnL2dldFNNVFAnKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2UuZGF0YSkgewogICAgICAgIHRoaXMuc210cC5ob3N0ID0gcmVzcG9uc2UuZGF0YS5ob3N0CiAgICAgICAgdGhpcy5zbXRwLnBvcnQgPSByZXNwb25zZS5kYXRhLnBvcnQKICAgICAgICB0aGlzLnNtdHAudXNlcm5hbWUgPSByZXNwb25zZS5kYXRhLnVzZXJuYW1lCiAgICAgICAgdGhpcy5zbXRwLnBhc3N3b3JkID0gcmVzcG9uc2UuZGF0YS5wYXNzd29yZAogICAgICAgIHRoaXMuc210cC5zZWN1cmVkID0gcmVzcG9uc2UuZGF0YS5zZWN1cmVkCiAgICAgIH0KICAgIH0pLmNhdGNoKChlcnIpID0+IHsKICAgICAgY29uc29sZS5sb2coZXJyKQogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dFcnJvciA9IHRydWUKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JDb2xvciA9ICdlcnJvcicKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JUaXRsZSA9ICdFcnJvcicKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JEZXNjcmlwdGlvbiA9ICdBbiBlcnJvciBvY2N1cmVkIHdoaWxlIGdldHRpbmcgU01UUCBjb25maWcnCiAgICB9KQogICAgaWYgKAogICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5hdXRoRGlzYWJsZWQgJiYKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcuYXV0aE1ldGhvZCA9PT0gJ2RoaXMyJwogICAgKSB7CiAgICAgIHRoaXMubG9hZGluZ0RoaXMyUm9sZXMgPSB0cnVlCiAgICAgIHRoaXMuZ2V0REhJUzJSb2xlcyhyb2xlcyA9PiB7CiAgICAgICAgdGhpcy5sb2FkaW5nRGhpczJSb2xlcyA9IGZhbHNlCiAgICAgICAgdGhpcy5kaGlzMlJvbGVzID0gWy4uLnJvbGVzLmRhdGEudXNlclJvbGVzXQogICAgICB9KQogICAgfQogICAgdGhpcy5zaWdudXBGaWVsZHMucHVzaCh7CiAgICAgIGlkOiAnc2lnbnVwRmllbGRzJywKICAgICAgbmFtZTogJ1NlbGYgUmVnaXN0cmF0aW9uIEZpZWxkcycsCiAgICAgIGNoaWxkcmVuOiBbXQogICAgfSkKICAgIGZvciAobGV0IGZpZWxkIGluIHRoaXMuJHN0b3JlLnN0YXRlLnNpZ251cEZpZWxkcykgewogICAgICB0aGlzLnNpZ251cEZpZWxkc1swXS5jaGlsZHJlbi5wdXNoKHsKICAgICAgICBpZDogZmllbGQsCiAgICAgICAgbmFtZTogZmllbGQKICAgICAgfSkKICAgIH0KICAgIGlmICgKICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcuaGFzT3duUHJvcGVydHkoCiAgICAgICAgJ3JlY29Qcm9ncmVzc05vdGlmaWNhdGlvbicKICAgICAgKQogICAgKSB7CiAgICAgIHRoaXMubm90aWZpY2F0aW9uX2VuZHBvaW50ID0gdGhpcy4kc3RvcmUuc3RhdGUuY29uZmlnLmdlbmVyYWxDb25maWcucmVjb1Byb2dyZXNzTm90aWZpY2F0aW9uLnVybAogICAgICB0aGlzLm5vdGlmaWNhdGlvbl91c2VybmFtZSA9IHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLnJlY29Qcm9ncmVzc05vdGlmaWNhdGlvbi51c2VybmFtZQogICAgICB0aGlzLm5vdGlmaWNhdGlvbl9wYXNzd29yZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLnJlY29Qcm9ncmVzc05vdGlmaWNhdGlvbi5wYXNzd29yZAogICAgfQoKICAgIGZvciAobGV0IHNvdXJjZXMgb2YgdGhpcy4kc3RvcmUuc3RhdGUuZGF0YVNvdXJjZXMpIHsKICAgICAgaWYgKHNvdXJjZXMuc291cmNlID09PSAnc3luY1NlcnZlcicpIHsKICAgICAgICBpZiAoc291cmNlcy5lbmFibGVBdXRvc3luYykgewogICAgICAgICAgdGhpcy5kYXRhc2V0c0F1dG9zeW5jU3RhdGVbc291cmNlcy5faWRdID0gdHJ1ZQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmRhdGFzZXRzQXV0b3N5bmNTdGF0ZVtzb3VyY2VzLl9pZF0gPSBmYWxzZQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZpeGVkU291cmNlMlRvICgpIHsKICAgICAgbGV0IGR0U3JjID0gJycKICAgICAgZm9yIChsZXQgc291cmNlIG9mIHRoaXMuJHN0b3JlLnN0YXRlLmRhdGFTb3VyY2VzKSB7CiAgICAgICAgaWYgKAogICAgICAgICAgc291cmNlLl9pZCA9PT0KICAgICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLnJlY29uY2lsaWF0aW9uLmZpeFNvdXJjZTJUbwogICAgICAgICkgewogICAgICAgICAgZHRTcmMgPSBzb3VyY2UKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIGR0U3JjLm5hbWUKICAgIH0sCiAgICBzaGFyZWRUb0FsbERhdGFzZXRzICgpIHsKICAgICAgbGV0IHNlcnZlcnMgPSBbXQogICAgICBmb3IgKGxldCBzb3VyY2VzIG9mIHRoaXMuJHN0b3JlLnN0YXRlLmRhdGFTb3VyY2VzKSB7CiAgICAgICAgaWYgKHNvdXJjZXMuc2hhcmVUb0FsbC5hY3RpdmF0ZWQpIHsKICAgICAgICAgIHNlcnZlcnMucHVzaChzb3VyY2VzKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzZXJ2ZXJzLnB1c2goc291cmNlcykKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHNlcnZlcnMKICAgIH0sCiAgICByZW1vdGVEYXRhc2V0cyAoKSB7CiAgICAgIGxldCBzZXJ2ZXJzID0gW10KICAgICAgZm9yIChsZXQgc291cmNlcyBvZiB0aGlzLiRzdG9yZS5zdGF0ZS5kYXRhU291cmNlcykgewogICAgICAgIGlmIChzb3VyY2VzLnNvdXJjZSA9PT0gJ3N5bmNTZXJ2ZXInKSB7CiAgICAgICAgICBzZXJ2ZXJzLnB1c2goc291cmNlcykKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHNlcnZlcnMKICAgIH0KICB9LAogIGJlZm9yZUNyZWF0ZSAoKSB7CiAgICBpZiAoIXRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLmhhc093blByb3BlcnR5KCdhdXRoTWV0aG9kJykpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLCAnYXV0aE1ldGhvZCcsICdkaGlzMicpCiAgICB9CiAgICBpZiAoCiAgICAgICF0aGlzLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5oYXNPd25Qcm9wZXJ0eSgnZXh0ZXJuYWxBdXRoJykKICAgICkgewogICAgICBsZXQgZXh0ZXJuYWxBdXRoID0gewogICAgICAgIHB1bGxPcmdVbml0czogdHJ1ZSwKICAgICAgICBzaGFyZU9yZ1VuaXRzOiBmYWxzZSwKICAgICAgICBzaGFyZUJ5T3JnSWQ6IGZhbHNlLAogICAgICAgIGRhdGFzZXROYW1lOiAnJywKICAgICAgICBhZG1pblJvbGU6ICcnCiAgICAgIH0KICAgICAgdGhpcy4kc2V0KAogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmNvbmZpZy5nZW5lcmFsQ29uZmlnLAogICAgICAgICdleHRlcm5hbEF1dGgnLAogICAgICAgIGV4dGVybmFsQXV0aAogICAgICApCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBhcHBSZW1vdGVTeW5jOiBSZW1vdGVTeW5jCiAgfQp9Cg=="},{"version":3,"sources":["Configure.vue"],"names":[],"mappingspfile":"Configure.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-dialog\n      persistent\n      v-model=\"autoDisableSingleDatasourceDialog\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"error\"\n          dark\n        >\n          <v-toolbar-title>\n            Disabling Single Data Source Limit\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"autoDisableSingleDatasource('cancel')\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          Disabling limiting reconciliation to be done against one choosen data source will also disable the single data source limit, click OK to proceed\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"primary\"\n            @click.native=\"autoDisableSingleDatasource('cancel')\"\n          >Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"error\"\n            @click.native=\"autoDisableSingleDatasource('ok')\"\n          >Ok</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      v-model=\"defineSuperuserRole\"\n      width=\"620px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            DHIS2 superuser role that can be an administrator of GOFR\n          </v-toolbar-title>\n        </v-toolbar>\n        <v-card-text>\n          <v-select\n            @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n            label=\"Superuser Role Name\"\n            item-text='displayName'\n            item-value='id'\n            :loading=\"loadingDhis2Roles\"\n            required\n            :items=\"dhis2Roles\"\n            v-model=\"$store.state.config.generalConfig.externalAuth.adminRole\"\n          ></v-select>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"primary\"\n            :disabled='!$store.state.config.generalConfig.externalAuth.adminRole || dhis2Roles.length === 0'\n            @click=\"saveConfiguration('generalConfig', 'authDisabled')\"\n          >\n            <v-icon left>mdi-content-save</v-icon>\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      v-model=\"selectDatasourceDialog\"\n      width=\"800px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Select datasource to fix source 2\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-text-field\n            v-model=\"searchDatasource\"\n            append-icon=\"search\"\n            label=\"Search\"\n            single-line\n            hide-details\n          ></v-text-field>\n          <v-btn\n            icon\n            dark\n            @click.native=\"closeDatasourceDialog\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        This lists only those datasets that have been shared to all users\n        <v-card-text>\n          <v-data-table\n            :headers=\"dataSourceHeaders\"\n            :items=\"sharedToAllDatasets\"\n            dark\n            class=\"elevation-1\"\n            :search=\"searchDatasource\"\n          >\n            <v-progress-linear\n              slot=\"progress\"\n              color=\"blue\"\n              indeterminate\n            ></v-progress-linear>\n            <template\n              v-slot:item=\"{ item }\"\n            >\n              <tr>\n                <v-radio-group\n                  v-model='fixSource2To'\n                  style=\"height: 5px\"\n                >\n                  <td>\n                    <v-radio\n                      :value=\"item._id\"\n                      color=\"blue\"\n                    ></v-radio>\n                  </td>\n                </v-radio-group>\n                <td>{{item.name}}</td>\n                <td>{{item.userID.userName}}</td>\n                <td>\n                  {{item.createdTime}}\n                </td>\n              </tr>\n            </template>\n          </v-data-table>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"error\"\n            @click=\"closeDatasourceDialog\"\n          >\n            <v-icon left>mdi-cancel</v-icon>\n            Cancel\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            :disabled='!fixSource2To || sharedToAllDatasets.length === 0'\n            @click=\"savefixSource2To\"\n          >\n            <v-icon left>mdi-content-save</v-icon>\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-card>\n      <v-card-title primary-title>\n        <b>System Configurations</b>\n      </v-card-title>\n      <v-card-text>\n        <v-card>\n          <v-card-title primary-title>\n            User Configurations\n          </v-card-title>\n          <v-card-text>\n            <v-layout column>\n              <v-flex>\n                <v-switch\n                  @change=\"saveConfiguration('userConfig', 'useCSVHeader')\"\n                  color=\"primary\"\n                  label=\"Apply user defined headers when reconciling\"\n                  v-model=\"$store.state.config.userConfig.reconciliation.useCSVHeader\"\n                >\n                </v-switch>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n        <v-divider></v-divider>\n        <v-divider></v-divider>\n        <v-divider></v-divider>\n        <v-card v-if='$store.state.auth.role == \"Admin\"'>\n          <v-card-title>\n            Admin Configurations\n          </v-card-title>\n          <v-card-text>\n            <v-layout column>\n              <v-flex>\n                <v-switch\n                  @change=\"saveConfiguration('generalConfig', 'parentConstraint')\"\n                  color=\"primary\"\n                  label=\"Perform match based on parent constraint\"\n                  v-model=\"$store.state.config.generalConfig.reconciliation.parentConstraint.enabled\"\n                >\n                </v-switch>\n                <v-card\n                  v-if=\"!$store.state.config.generalConfig.reconciliation.parentConstraint.enabled\"\n                  color=\"grey lighten-3\"\n                  style=\"margin-left:100px\"\n                >\n                  <v-checkbox\n                    @change=\"saveConfiguration('generalConfig', 'parConstrIdAuto')\"\n                    color=\"primary\"\n                    label=\"Automatch By ID\"\n                    v-model=\"$store.state.config.generalConfig.reconciliation.parentConstraint.idAutoMatch\"\n                    disabled\n                  ></v-checkbox>\n                  <v-checkbox\n                    @change=\"saveConfiguration('generalConfig', 'parConstrNameAuto')\"\n                    color=\"primary\"\n                    label=\"Automatch By Name (when parents differ)\"\n                    v-model=\"$store.state.config.generalConfig.reconciliation.parentConstraint.nameAutoMatch\"\n                  ></v-checkbox>\n                </v-card>\n                <v-card>\n                  <v-card-title primary-title>\n                    Choose ways datasets can be added\n                  </v-card-title>\n                  <v-card-text>\n                    <v-checkbox\n                      label=\"CSV Upload\"\n                      v-model=\"$store.state.config.generalConfig.datasetsAdditionWays\"\n                      value=\"CSV Upload\"\n                      @change=\"checkDatasetsAdditionWays('upload')\"\n                    ></v-checkbox>\n                    <v-checkbox\n                      label=\"Remote Servers Sync\"\n                      v-model=\"$store.state.config.generalConfig.datasetsAdditionWays\"\n                      value=\"Remote Servers Sync\"\n                      @change=\"checkDatasetsAdditionWays('remote')\"\n                    ></v-checkbox>\n                  </v-card-text>\n                </v-card>\n                <v-switch\n                  @change=\"saveConfiguration('generalConfig', 'allowShareToAllForNonAdmin')\"\n                  color=\"primary\"\n                  label=\"Allow non admin users to share datasets will all users\"\n                  v-model=\"$store.state.config.generalConfig.allowShareToAllForNonAdmin\"\n                >\n                </v-switch>\n                <v-tooltip top>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-switch\n                      @change=\"displayDatasourceDialog\"\n                      color=\"primary\"\n                      label=\"Select a data source to serve as Source 2 for all reconciliation\"\n                      v-model=\"$store.state.config.generalConfig.reconciliation.fixSource2\"\n                      v-on=\"on\"\n                    />\n                  </template>\n                  <span>This will limit users to perform reconciliations against the chosen data source</span>\n                </v-tooltip>\n                <template v-slot:activator=\"{ on }\">\n                  <template v-if='$store.state.config.generalConfig.reconciliation.fixSource2'>\n                    Source2 Limited To: <v-chip>{{fixedSource2To}}</v-chip>\n                      <v-tooltip top>\n                        <v-btn\n                          fab\n                          dark\n                          color=\"primary\"\n                          small\n                          @click=\"displayDatasourceDialog\"\n                          v-on=\"on\"\n                        >\n                          <v-icon dark>mdi-format-list-bulleted</v-icon>\n                        </v-btn>\n                        <span>Change dataset</span>\n                      </v-tooltip>\n                  </template>\n                </template>\n                <v-switch\n                  @change=\"singleDatasource\"\n                  color=\"primary\"\n                  label=\"Single data source per user\"\n                  v-model=\"$store.state.config.generalConfig.reconciliation.singleDataSource\"\n                >\n                </v-switch>\n                <v-switch\n                  v-if=\"$store.state.dhis.user.orgId\"\n                  @change=\"saveConfiguration('generalConfig', 'singlePair')\"\n                  color=\"primary\"\n                  label=\"Single data source pair per org unit\"\n                  v-model=\"$store.state.config.generalConfig.reconciliation.singlePair\"\n                >\n                </v-switch>\n              </v-flex>\n              <v-flex>\n                <v-card>\n                  <v-card-title primary-title>\n                    GOFR Authentication\n                  </v-card-title>\n                  <v-card-text>\n                    <v-switch\n                      @change=\"disableGOFRAuth\"\n                      color=\"primary\"\n                      label=\"Disable Authentication\"\n                      v-model=\"$store.state.config.generalConfig.authDisabled\"\n                    >\n                    </v-switch>\n                    <v-card\n                      v-if=\"$store.state.config.generalConfig.authDisabled\"\n                      color=\"grey lighten-3\"\n                      style=\"margin-left:100px\"\n                    >\n                      External Authentication Method\n                      <v-radio-group\n                        v-model=\"$store.state.config.generalConfig.authMethod\"\n                        @change=\"saveConfiguration('generalConfig', 'useDhis2Auth')\"\n                      >\n                        <v-radio\n                          label=\"dhis2\"\n                          value=\"dhis2\"\n                          disabled\n                        ></v-radio>\n                        <v-radio\n                          label=\"iHRIS\"\n                          value=\"iHRIS\"\n                          disabled\n                        ></v-radio>\n                      </v-radio-group>\n                      <v-select\n                        style=\"width: 350px\"\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        label=\"Superuser Role Name\"\n                        item-text='displayName'\n                        item-value='id'\n                        :loading=\"loadingDhis2Roles\"\n                        required\n                        :items=\"dhis2Roles\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.adminRole\"\n                      ></v-select>\n                      <v-checkbox\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        v-if=\"$store.state.config.generalConfig.authMethod\"\n                        label=\"Pull org units\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                      >\n                      </v-checkbox>\n                      <v-checkbox\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Share orgs with other users\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.shareOrgUnits\"\n                      >\n                      </v-checkbox>\n                      <v-checkbox\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        v-if=\"\n                      $store.state.config.generalConfig.externalAuth.shareOrgUnits &&\n                      $store.state.config.generalConfig.externalAuth.pullOrgUnits\n                    \"\n                        label=\"Limit orgs sharing by user orgid\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.shareByOrgId\"\n                      >\n                      </v-checkbox>\n                      <v-text-field\n                        style=\"width: 350px\"\n                        outline\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Dataset Name\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.datasetName\"\n                        @blur=\"ensureNameUnique\"\n                        @input=\"ensureNameUnique\"\n                        :error-messages=\"datasetNameErrors\"\n                        required\n                      ></v-text-field>\n                      <v-text-field\n                        style=\"width: 350px\"\n                        outline\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Username\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.userName\"\n                        required\n                      ></v-text-field>\n                      <v-text-field\n                        style=\"width: 350px\"\n                        outline\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Password\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.password\"\n                        type=\"password\"\n                        required\n                      ></v-text-field>\n                      <v-flex xs3>\n                        <v-btn\n                          color=\"primary\"\n                          :disabled='datasetNameErrors.length > 0 || !$store.state.config.generalConfig.externalAuth.datasetName'\n                          small\n                          round\n                          v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                          @click=\"pullOrgUnits\"\n                        >start pulling</v-btn>\n                      </v-flex>\n                    </v-card>\n                  </v-card-text>\n                </v-card>\n              </v-flex>\n              <v-divider></v-divider>\n              <v-flex>\n                <v-card>\n                  <v-card-title primary-title>\n                    Self Registration\n                  </v-card-title>\n                  <v-card-text>\n                    <v-switch\n                      @change=\"saveConfiguration('generalConfig', 'selfRegistration')\"\n                      color=\"primary\"\n                      label=\"Enable self registration\"\n                      v-model=\"$store.state.config.generalConfig.selfRegistration.enabled\"\n                    >\n                    </v-switch>\n                    <v-layout\n                      row\n                      wrap\n                      v-if='$store.state.config.generalConfig.selfRegistration.enabled'\n                    >\n                      <v-spacer></v-spacer>\n                      <v-flex xs3>\n                        <v-treeview :items=\"signupFields\"></v-treeview>\n                      </v-flex>\n                      <v-spacer></v-spacer>\n                      <v-flex xs8>\n                        <v-btn\n                          small\n                          round\n                          @click='moreFields = !moreFields'\n                          color=\"primary\"\n                        >Add More Fields</v-btn>\n                        <v-text-field\n                          v-if='moreFields'\n                          v-model=\"fieldLabel\"\n                          label=\"Field Label\"\n                        ></v-text-field>\n                        <v-text-field\n                          v-if='moreFields'\n                          v-model=\"fieldName\"\n                          label=\"Unique Name\"\n                        ></v-text-field>\n                        <v-select\n                          v-if='moreFields'\n                          :items=\"requiredText\"\n                          v-model=\"required\"\n                          label=\"Required\"\n                        ></v-select>\n                        <v-btn\n                          color=\"info\"\n                          small\n                          v-if='moreFields'\n                          @click='addMoreFields'\n                        >\n                          <v-icon left>mdi-content-save</v-icon> Save\n                        </v-btn>\n                        <v-btn\n                          color=\"error\"\n                          small\n                          v-if='moreFields'\n                          @click='moreFields = false'\n                        >\n                          <v-icon left>mdi-close</v-icon> Cancel\n                        </v-btn>\n                      </v-flex>\n                    </v-layout>\n                    <v-switch\n                      @change=\"saveConfiguration('generalConfig', 'selfRegistration')\"\n                      color=\"primary\"\n                      label=\"Requires Admin Approval Of Self Registration\"\n                      v-model=\"$store.state.config.generalConfig.selfRegistration.requiresApproval\"\n                    >\n                    </v-switch>\n                  </v-card-text>\n                </v-card>\n              </v-flex>\n              <v-divider></v-divider>\n              <v-flex xs1>\n                <v-card>\n                  <v-card-title primary-title>\n                    Cron Jobs\n                  </v-card-title>\n                  <v-card-text>\n                    Autosync Below Remote Datasets\n                    <v-text-field\n                      style=\"width: 350px\"\n                      outline\n                      @blur=\"saveConfiguration('generalConfig', 'datasetsAutosyncTime')\"\n                      name=\"cron_time\"\n                      label=\"Cron Time\"\n                      v-model=\"$store.state.config.generalConfig.datasetsAutosyncTime\"\n                    ></v-text-field>\n                    <v-data-table\n                      :headers=\"cronDataSourceHeaders\"\n                      :items=\"remoteDatasets\"\n                      hide-default-footer\n                      class=\"elevation-1\"\n                      pagination.sync=\"pagination\"\n                    >\n                      <template\n                        v-slot:item=\"{ item }\"\n                      >\n                        <tr>\n                          <td>{{item.name}}</td>\n                          <td>{{item.userID.userName}}</td>\n                          <td>\n                            {{item.createdTime}}\n                          </td>\n                          <td>\n                            <v-switch\n                              @change=\"controlDatasetsCronjobs(item)\"\n                              color=\"primary\"\n                              v-model=\"datasetsAutosyncState[item._id]\"\n                            >\n                            </v-switch>\n                          </td>\n                        </tr>\n                      </template>\n                    </v-data-table>\n                  </v-card-text>\n                </v-card>\n              </v-flex>\n              <v-flex xs1>\n                <v-card color=\"grey lighten-3\">\n                  <v-card-text>\n                    SMTP Configuration For Email Notifications\n                  </v-card-text>\n                  <v-card-actions>\n                    <v-layout column>\n                      <v-flex>\n                        <v-text-field\n                          label=\"SMTP Host\"\n                          v-model=\"smtp.host\"\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"SMTP Port\"\n                          v-model=\"smtp.port\"\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"SMTP Username\"\n                          v-model=\"smtp.username\"\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          type=\"password\"\n                          label=\"SMTP Password\"\n                          v-model=\"smtp.password\"\n                          autocomplete='new-password'\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-switch\n                          color=\"primary\"\n                          label=\"SMTP Secured\"\n                          v-model=\"smtp.secured\"\n                        >\n                        </v-switch>\n                      </v-flex>\n                      <v-flex>\n                        <v-layout\n                          row\n                          wrap\n                        >\n                          <v-spacer></v-spacer>\n                          <v-flex xs1>\n                            <v-btn\n                              color=\"primary\"\n                              @click=\"saveSMTP\"\n                            >\n                              <v-icon>mdi-content-save</v-icon>Save\n                            </v-btn>\n                          </v-flex>\n                        </v-layout>\n                      </v-flex>\n                    </v-layout>\n                  </v-card-actions>\n                </v-card>\n              </v-flex>\n              <v-flex xs1>\n                <v-switch\n                  @change=\"saveConfiguration('generalConfig', 'recoProgressNotification')\"\n                  color=\"primary\"\n                  label=\"Enable Endpoint Notification when reconciliation is done\"\n                  v-model=\"$store.state.config.generalConfig.recoProgressNotification.enabled\"\n                >\n                </v-switch>\n                <v-card\n                  color=\"grey lighten-3\"\n                  v-if='$store.state.config.generalConfig.recoProgressNotification.enabled'\n                  style=\"margin-left:100px\"\n                >\n                  <v-card-text>\n                    End point to send notification when reconciliation is done\n                  </v-card-text>\n                  <v-card-actions>\n                    <v-layout column>\n                      <v-flex>\n                        <v-text-field\n                          label=\"End point URL\"\n                          v-model=\"notification_endpoint\"\n                          box\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"End point Username\"\n                          v-model=\"notification_username\"\n                          box\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"End point Password\"\n                          v-model=\"notification_password\"\n                          box\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-layout\n                          row\n                          wrap\n                        >\n                          <v-spacer></v-spacer>\n                          <v-flex xs1>\n                            <v-btn\n                              color=\"primary\"\n                              @click=\"recoProgressNotificationChanged\"\n                            >\n                              <v-icon>mdi-content-save</v-icon>Save\n                            </v-btn>\n                          </v-flex>\n                        </v-layout>\n                      </v-flex>\n                    </v-layout>\n                  </v-card-actions>\n                </v-card>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n      </v-card-text>\n    </v-card>\n    <appRemoteSync\n      syncType=\"dhisSync\"\n      :serverName=\"$store.state.config.generalConfig.externalAuth.datasetName\"\n      :userID=\"$store.state.auth.userID\"\n      :sourceOwner=\"$store.state.auth.userID\"\n      mode=\"full\"\n    >\n    </appRemoteSync>\n  </v-container>\n</template>\n<script>\nimport axios from 'axios'\nimport RemoteSync from './DataSources/RemoteSync'\nimport { eventBus } from '@/main'\nimport VueCookies from 'vue-cookies'\nimport { required } from 'vuelidate/lib/validators'\nimport { generalMixin } from '@/mixins/generalMixin'\nexport default {\n  mixins: [generalMixin],\n  validations: {\n    facility: {\n      required: required\n    },\n    code: {\n      required: required\n    },\n    uploadName: {\n      required: required\n    }\n  },\n  data () {\n    return {\n      smtp: {\n        host: '',\n        port: '',\n        username: '',\n        password: '',\n        secured: true\n      },\n      autoDisableSingleDatasourceDialog: false,\n      selectDatasourceDialog: false,\n      fixSource2To: '',\n      searchDatasource: '',\n      dataSourceHeaders: [\n        { sortable: false },\n        { text: 'Source Name', align: 'left', value: 'name' },\n        { text: 'Owner', value: 'owner', sortable: false },\n        { text: 'Created Time', value: 'createdTime' }\n      ],\n      cronDataSourceHeaders: [\n        { text: 'Source Name', align: 'left', value: 'name' },\n        { text: 'Owner', value: 'owner', sortable: false },\n        { text: 'Created Time', value: 'createdTime' },\n        { text: 'Enabled', value: 'enabled' }\n      ],\n      datasetsAutosyncState: {},\n      useCSVHeader: false,\n      moreFields: false,\n      fieldLabel: '',\n      fieldName: '',\n      required: 'No',\n      requiredText: ['Yes', 'No'],\n      signupFields: [],\n      notification_endpoint: '',\n      notification_username: '',\n      notification_password: '',\n      dhis2Roles: [],\n      loadingDhis2Roles: false,\n      datasetNameErrors: [],\n      defineSuperuserRole: false\n    }\n  },\n  methods: {\n    controlDatasetsCronjobs (dataset) {\n      let formData = new FormData()\n      formData.append('id', dataset._id)\n      formData.append('enabled', this.datasetsAutosyncState[dataset._id])\n      axios.post('/updateDatasetAutosync', formData)\n    },\n    checkDatasetsAdditionWays (way) {\n      if (this.$store.state.config.generalConfig.datasetsAdditionWays.length === 0) {\n        this.$store.state.errorTitle = 'Cant disable both ways'\n        this.$store.state.errorDescription = 'There must be atleast one way of adding a dataset'\n        this.$store.state.dialogError = true\n        let additionWay\n        if (way === 'remote') {\n          additionWay = 'Remote Servers Sync'\n        } else if (way === 'upload') {\n          additionWay = 'CSV Upload'\n        }\n        this.$store.state.config.generalConfig.datasetsAdditionWays.push(additionWay)\n      } else {\n        this.saveConfiguration('generalConfig', 'datasetsAdditionWays')\n      }\n    },\n    autoDisableSingleDatasource (confirmation) {\n      if (confirmation === 'ok') {\n        this.$store.state.config.generalConfig.reconciliation.singleDataSource = false\n        this.saveConfiguration('generalConfig', 'fixSource2')\n        this.saveConfiguration('generalConfig', 'singleDataSource')\n      } else if (confirmation === 'cancel') {\n        this.$store.state.config.generalConfig.reconciliation.fixSource2 = true\n      }\n      this.autoDisableSingleDatasourceDialog = false\n    },\n    singleDatasource () {\n      if (\n        this.$store.state.config.generalConfig.reconciliation.singleDataSource\n      ) {\n        if (\n          !this.$store.state.config.generalConfig.reconciliation.fixSource2To ||\n          !this.$store.state.config.generalConfig.reconciliation.fixSource2\n        ) {\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorColor = 'error'\n          this.$store.state.errorDescription = 'This feature can only be enabled if there is a defined datasource to serve as Source 2 for all reconciliation'\n          setTimeout(() => {\n            this.$store.state.config.generalConfig.reconciliation.singleDataSource = false\n          })\n        } else {\n          this.saveConfiguration('generalConfig', 'singleDataSource')\n        }\n      } else {\n        this.saveConfiguration('generalConfig', 'singleDataSource')\n      }\n    },\n    displayDatasourceDialog () {\n      if (\n        this.$store.state.config.generalConfig.reconciliation.fixSource2 ===\n        true\n      ) {\n        this.fixSource2To = this.$store.state.config.generalConfig.reconciliation.fixSource2To\n        this.selectDatasourceDialog = true\n        this.saveConfiguration('generalConfig', 'fixSource2')\n      } else {\n        if (this.$store.state.config.generalConfig.reconciliation.singleDataSource) {\n          this.autoDisableSingleDatasourceDialog = true\n        } else {\n          this.saveConfiguration('generalConfig', 'fixSource2')\n        }\n      }\n    },\n    closeDatasourceDialog () {\n      this.selectDatasourceDialog = false\n      if (!this.$store.state.config.generalConfig.reconciliation.fixSource2To) {\n        this.$store.state.config.generalConfig.reconciliation.fixSource2 = false\n        this.saveConfiguration('generalConfig', 'fixSource2')\n      }\n    },\n    savefixSource2To () {\n      this.$store.state.config.generalConfig.reconciliation.fixSource2To = this.fixSource2To\n      this.saveConfiguration('generalConfig', 'fixSource2To')\n      this.selectDatasourceDialog = false\n    },\n    disableGOFRAuth () {\n      if (!this.$store.state.config.generalConfig.authDisabled) {\n        this.saveConfiguration('generalConfig', 'authDisabled')\n      } else if (this.$store.state.config.generalConfig.authDisabled) {\n        let isSet = this.setDHIS2Credentials()\n        if (!isSet) {\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorColor = 'error'\n          this.$store.state.errorDescription = 'App doesnt appear to be running inside DHIS2, cant disable authentication'\n          setTimeout(() => {\n            this.$store.state.config.generalConfig.authDisabled = false\n          })\n          return\n        }\n        this.loadingDhis2Roles = true\n        this.getDHIS2Roles(roles => {\n          this.loadingDhis2Roles = false\n          this.dhis2Roles = [...roles.data.userRoles]\n        })\n        this.defineSuperuserRole = true\n      }\n    },\n    recoProgressNotificationChanged () {\n      if (!this.$store.state.config.generalConfig.hasOwnProperty('recoProgressNotification')) {\n        this.$store.state.config.generalConfig.recoProgressNotification = {}\n      }\n      this.$store.state.config.generalConfig.recoProgressNotification.url = this.notification_endpoint\n      this.$store.state.config.generalConfig.recoProgressNotification.username = this.notification_username\n      this.$store.state.config.generalConfig.recoProgressNotification.password = this.notification_password\n      this.saveConfiguration('generalConfig')\n    },\n    saveSMTP () {\n      let formData = new FormData()\n      this.$store.state.progressTitle = 'Saving SMTP'\n      this.$store.state.dynamicProgress = true\n      formData.append('host', this.smtp.host)\n      formData.append('port', this.smtp.port)\n      formData.append('username', this.smtp.username)\n      formData.append('password', this.smtp.password)\n      formData.append('secured', this.smtp.secured)\n      axios.post('/saveSMTP', formData, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(() => {\n        this.$store.state.dynamicProgress = false\n        this.$store.state.dialogError = true\n        this.$store.state.errorColor = 'primary'\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'SMTP saved successfully'\n      }).catch((err) => {\n        console.log(err)\n        this.$store.state.dynamicProgress = false\n        this.$store.state.dialogError = true\n        this.$store.state.errorColor = 'error'\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'SMTP failed to be saved'\n      })\n    },\n    addMoreFields () {\n      this.$store.state.progressTitle = 'Saving field'\n      this.$store.state.dynamicProgress = true\n      let exist = this.signupFields[0].children.find(child => {\n        return child.id === this.fieldName\n      })\n      if (!exist) {\n        let formData = new FormData()\n        let required\n        if (this.required === 'Yes') {\n          required = true\n        } else {\n          required = false\n        }\n        formData.append('fieldName', this.fieldName)\n        formData.append('fieldLabel', this.fieldLabel)\n        formData.append('fieldRequired', required)\n        formData.append('form', 'signup')\n        axios\n          .post('/addFormField', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          })\n          .then(() => {\n            this.$store.state.dynamicProgress = false\n            this.$store.state.dialogError = true\n            this.$store.state.errorTitle = 'Info'\n            this.$store.state.errorDescription = 'Field added successfully'\n\n            this.$store.state.signupFields[this.fieldName] = {\n              type: 'String',\n              display: this.fieldLabel\n            }\n            this.$store.state.customSignupFields[this.fieldName] = {\n              type: 'String',\n              display: this.fieldLabel\n            }\n            VueCookies.set(\n              'signupFields',\n              this.$store.state.signupFields,\n              'infinity'\n            )\n            VueCookies.set(\n              'customSignupFields',\n              this.$store.state.customSignupFields,\n              'infinity'\n            )\n            this.signupFields[0].children.push({\n              id: this.fieldName,\n              name: this.fieldLabel\n            })\n            this.fieldName = ''\n            this.fieldLabel = ''\n            this.required = 'No'\n          })\n      } else {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'Field name must be unique'\n      }\n    },\n    pullOrgUnits () {\n      this.saveConfiguration('generalConfig', 'externalAuth')\n      let formData = new FormData()\n      formData.append('host', this.$store.state.dhis.host)\n      formData.append('sourceType', 'DHIS2')\n      formData.append('source', 'syncServer')\n      formData.append(\n        'shareToAll',\n        this.$store.state.config.generalConfig.externalAuth.shareOrgUnits\n      )\n      formData.append(\n        'limitByUserLocation',\n        this.$store.state.config.generalConfig.externalAuth.shareByOrgId\n      )\n      formData.append(\n        'username',\n        this.$store.state.config.generalConfig.externalAuth.userName\n      )\n      formData.append(\n        'password',\n        this.$store.state.config.generalConfig.externalAuth.password\n      )\n      formData.append(\n        'name',\n        this.$store.state.config.generalConfig.externalAuth.datasetName\n      )\n      formData.append('userID', this.$store.state.auth.userID)\n\n      axios\n        .post('/addDataSource', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        .then(() => {\n          eventBus.$emit('runRemoteSync')\n        })\n    },\n    getDHIS2Roles (callback) {\n      let auth = this.$store.state.dhis.dev.auth\n      if (auth.username === '') {\n        auth = ''\n      }\n      axios\n        .get(this.$store.state.dhis.host + 'api/userRoles', { auth })\n        .then(roles => {\n          callback(roles)\n        })\n    },\n    ensureNameUnique () {\n      this.datasetNameErrors = []\n      if (\n        this.$store.state.config.generalConfig.externalAuth.datasetName === ''\n      ) {\n        return this.datasetNameErrors.push('Dataset name is required')\n      }\n      for (let dtSrc of this.$store.state.dataSources) {\n        if (dtSrc.name === this.uploadName) {\n          this.datasetNameErrors.push('This Name Exists')\n          return false\n        }\n      }\n    }\n  },\n  created () {\n    axios.get('/getSMTP').then((response) => {\n      if (response && response.data) {\n        this.smtp.host = response.data.host\n        this.smtp.port = response.data.port\n        this.smtp.username = response.data.username\n        this.smtp.password = response.data.password\n        this.smtp.secured = response.data.secured\n      }\n    }).catch((err) => {\n      console.log(err)\n      this.$store.state.dialogError = true\n      this.$store.state.errorColor = 'error'\n      this.$store.state.errorTitle = 'Error'\n      this.$store.state.errorDescription = 'An error occured while getting SMTP config'\n    })\n    if (\n      this.$store.state.config.generalConfig.authDisabled &&\n      this.$store.state.config.generalConfig.authMethod === 'dhis2'\n    ) {\n      this.loadingDhis2Roles = true\n      this.getDHIS2Roles(roles => {\n        this.loadingDhis2Roles = false\n        this.dhis2Roles = [...roles.data.userRoles]\n      })\n    }\n    this.signupFields.push({\n      id: 'signupFields',\n      name: 'Self Registration Fields',\n      children: []\n    })\n    for (let field in this.$store.state.signupFields) {\n      this.signupFields[0].children.push({\n        id: field,\n        name: field\n      })\n    }\n    if (\n      this.$store.state.config.generalConfig.hasOwnProperty(\n        'recoProgressNotification'\n      )\n    ) {\n      this.notification_endpoint = this.$store.state.config.generalConfig.recoProgressNotification.url\n      this.notification_username = this.$store.state.config.generalConfig.recoProgressNotification.username\n      this.notification_password = this.$store.state.config.generalConfig.recoProgressNotification.password\n    }\n\n    for (let sources of this.$store.state.dataSources) {\n      if (sources.source === 'syncServer') {\n        if (sources.enableAutosync) {\n          this.datasetsAutosyncState[sources._id] = true\n        } else {\n          this.datasetsAutosyncState[sources._id] = false\n        }\n      }\n    }\n  },\n  computed: {\n    fixedSource2To () {\n      let dtSrc = ''\n      for (let source of this.$store.state.dataSources) {\n        if (\n          source._id ===\n          this.$store.state.config.generalConfig.reconciliation.fixSource2To\n        ) {\n          dtSrc = source\n        }\n      }\n      return dtSrc.name\n    },\n    sharedToAllDatasets () {\n      let servers = []\n      for (let sources of this.$store.state.dataSources) {\n        if (sources.shareToAll.activated) {\n          servers.push(sources)\n        } else {\n          servers.push(sources)\n        }\n      }\n      return servers\n    },\n    remoteDatasets () {\n      let servers = []\n      for (let sources of this.$store.state.dataSources) {\n        if (sources.source === 'syncServer') {\n          servers.push(sources)\n        }\n      }\n      return servers\n    }\n  },\n  beforeCreate () {\n    if (!this.$store.state.config.generalConfig.hasOwnProperty('authMethod')) {\n      this.$set(this.$store.state.config.generalConfig, 'authMethod', 'dhis2')\n    }\n    if (\n      !this.$store.state.config.generalConfig.hasOwnProperty('externalAuth')\n    ) {\n      let externalAuth = {\n        pullOrgUnits: true,\n        shareOrgUnits: false,\n        shareByOrgId: false,\n        datasetName: '',\n        adminRole: ''\n      }\n      this.$set(\n        this.$store.state.config.generalConfig,\n        'externalAuth',\n        externalAuth\n      )\n    }\n  },\n  components: {\n    appRemoteSync: RemoteSync\n  }\n}\n</script>\n"]}]}