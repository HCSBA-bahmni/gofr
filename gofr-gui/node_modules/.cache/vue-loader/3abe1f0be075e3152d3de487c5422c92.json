{"remainingRequest":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr2/src/components/DataSources/FacilityReconUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr2/src/components/DataSources/FacilityReconUpload.vue","mtime":1619088607791},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FacilityReconUpload.vue"],"names":[],"mappingsogfile":"FacilityReconUpload.vue","sourceRoot":"src/components/DataSources","sourcesContent":["<template>\n  <v-container fluid>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"dialog\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Information\n          </v-toolbar-title>\n        </v-toolbar>\n        <v-card-text>\n          Data uploaded successfully\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"primary\"\n            dark\n            @click.native=\"closeDialog('FacilityReconView')\"\n          >\n            <v-icon left>mdi-format-list-bulleted-square</v-icon>\n            View Data\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"invalidRows\"\n      max-width=\"1050px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"error\"\n          dark\n        >\n          <v-toolbar-title>\n            <v-icon>mdi-close-circle</v-icon>Data Upload was not successful,review below invalid rows in your CSV\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"closeInvalidRows()\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          <v-data-table\n            :headers=\"invalidRowsHeader\"\n            :items=\"invalidRowsContent\"\n            light\n            class=\"elevation-1\"\n          >\n            <template\n              slot=\"items\"\n              slot-scope=\"props\"\n            >\n              <td\n                v-for='header in invalidRowsHeader'\n                :key=\"header.value\"\n              >{{props.item[header.value]}}</td>\n            </template>\n          </v-data-table>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"confirmUpload\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Warning\n          </v-toolbar-title>\n        </v-toolbar>\n        <v-card-text>\n          You are about to upload CSV data into the app, click proceed to upload\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"error\"\n            @click.native=\"confirmUpload = false\"\n          >Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            dark\n            @click.native=\"performExtraCheck\"\n          >Proceed</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"errorDialog\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-card-title>\n          {{errorTitle}}\n        </v-card-title>\n        <v-card-text>\n          {{errorContent}}\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"error\"\n            @click.native=\"errorDialog = false\"\n          >Ok</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      v-model=\"uploadPrepaProgr\"\n      transition=\"scale-transition\"\n      persistent\n      width=\"300\"\n    >\n      <v-card\n        color=\"primary\"\n        dark\n      >\n        <v-card-text>\n          {{uploadStatus}}\n          <v-progress-linear\n            indeterminate\n            color=\"white\"\n            class=\"mb-0\"\n            v-if='!fileUploadPercentage'\n          ></v-progress-linear>\n          <v-progress-linear\n            v-model=\"fileUploadPercentage\"\n            color=\"white\"\n            class=\"mb-0\"\n            v-else\n          ></v-progress-linear>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      v-model=\"percentDialog\"\n      transition=\"scale-transition\"\n      persistent\n      width=\"270\"\n    >\n      <v-card\n        color=\"white\"\n        dark\n      >\n        <v-card-text>\n          <center>\n            <font style=\"color:blue\">{{uploadStatus}}</font><br>\n            <v-progress-circular\n              :rotate=\"-90\"\n              :size=\"100\"\n              :width=\"15\"\n              :value=\"uploadPercent\"\n              color=\"primary\"\n            >\n              <v-avatar\n                color=\"indigo\"\n                size=\"50px\"\n              >\n                <span class=\"white--text\">\n                  <b>{{ uploadPercent }}%</b>\n                </span>\n              </v-avatar>\n            </v-progress-circular>\n          </center>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-slide-y-transition\n      mode=\"out-in\"\n      v-if='!$store.state.denyAccess'\n    >\n      <v-stepper v-model=\"e1\">\n        <v-stepper-header>\n          <v-stepper-step\n            step=\"1\"\n            :complete=\"e1 > 1\"\n          >Upload CSV</v-stepper-step>\n          <v-divider></v-divider>\n          <v-stepper-step\n            step=\"2\"\n            :complete=\"e1 > 2\"\n          >Map Headers</v-stepper-step>\n          <v-btn\n            icon\n            @click.native=\"closeUploadWindow()\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-stepper-header>\n        <v-stepper-items>\n          <v-stepper-content step=\"1\">\n            <v-card class=\"mb-5\">\n              <v-card-title>Upload CSV (utf-8 only) - <b>Select a CSV file and upload</b></v-card-title>\n              <v-card-text>\n                <v-text-field\n                  label=\"Enter Unique Name For Your Data\"\n                  v-model=\"uploadName\"\n                  @blur=\"ensureNameUnique\"\n                  @input=\"ensureNameUnique\"\n                  :error-messages=\"uploadNameErrors\"\n                  required\n                ></v-text-field>\n                <input\n                  type=\"file\"\n                  @change=\"fileSelected\"\n                >\n                <br><br>\n                <v-card>\n                  <v-card-title primary-title>\n                    Advanced Options\n                  </v-card-title>\n                  <v-card-text>\n                    <v-tooltip top>\n                      <template v-slot:activator=\"{ on }\">\n                        <v-checkbox\n                          v-if=\"$store.state.dhis.user.orgId\"\n                          :disabled=\"shareWithAll\"\n                          v-on=\"on\"\n                          color=\"primary\"\n                          label=\"Share with other users of the same org unit as yours\"\n                          v-model=\"shareToSameOrgid\"\n                        ></v-checkbox>\n                      </template>\n                      <span>\n                        Share this dataset with all other users that are on the same org unit as you\n                      </span>\n                    </v-tooltip>\n                    <v-checkbox\n                      v-if='$store.state.config.generalConfig.allowShareToAllForNonAdmin || $store.state.auth.role === \"Admin\"'\n                      @change=\"sharingOptions\"\n                      color=\"primary\"\n                      label=\"Share with all other users\"\n                      v-model=\"shareWithAll\"\n                    >\n                    </v-checkbox>\n                    <v-tooltip top>\n                      <template v-slot:activator=\"{ on }\">\n                        <v-checkbox\n                          v-if=\"shareWithAll && $store.state.dhis.user.orgId\"\n                          v-on=\"on\"\n                          color=\"primary\"\n                          label=\"Limit orgs sharing by user orgid\"\n                          v-model=\"limitShareByOrgId\"\n                        >\n                        </v-checkbox>\n                      </template>\n                      <span>\n                        if activated, other users will see locations (including location children) that has the same location id as their location id\n                      </span>\n                    </v-tooltip>\n                  </v-card-text>\n                </v-card>\n              </v-card-text>\n            </v-card>\n            <v-btn\n              color=\"primary\"\n              @click.native=\"e1 = 2\"\n              v-if='uploadedFileName && uploadName && uploadNameErrors.length === 0'\n            >Continue</v-btn>\n            <v-btn\n              color=\"primary\"\n              @click.native=\"e1 = 2\"\n              v-else\n              disabled\n            >Continue</v-btn>\n          </v-stepper-content>\n          <v-stepper-content step=\"2\">\n            <b>Map an appropriate CSV header against those on the app.</b>\n            <v-layout\n              row\n              wrap\n              ref=\"form\"\n              v-model=\"valid\"\n            >\n              <v-flex xs6>\n                <v-subheader>Facility*</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemFacility\"\n                  v-model=\"facility\"\n                  @blur=\"$v.facility.$touch()\"\n                  @change=\"$v.facility.$touch()\"\n                  :error-messages=\"facilityErrors\"\n                  label=\"Select\"\n                  required\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-subheader>Code*</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemCode\"\n                  v-model=\"code\"\n                  @blur=\"$v.code.$touch()\"\n                  @change=\"$v.code.$touch()\"\n                  :error-messages=\"codeErrors\"\n                  label=\"Select\"\n                  required\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-subheader>Latitude</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemLat\"\n                  v-model=\"lat\"\n                  label=\"Select\"\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-subheader>Longitude</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemLong\"\n                  v-model=\"long\"\n                  label=\"Select\"\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <template>\n                <v-flex xs6>\n                  <v-subheader>Level 1</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel1\"\n                    v-model=\"level1\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template>\n                <v-flex xs6>\n                  <v-subheader>Level 2</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel2\"\n                    v-model=\"level2\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel3'>\n                <v-flex xs6>\n                  <v-subheader>Level 3</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel3\"\n                    v-model=\"level3\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel4'>\n                <v-flex xs6>\n                  <v-subheader>Level 4</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel4\"\n                    v-model=\"level4\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel5'>\n                <v-flex xs6>\n                  <v-subheader>Level 5</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel5\"\n                    v-model=\"level5\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel6'>\n                <v-flex xs6>\n                  <v-subheader>Level 6</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel6\"\n                    v-model=\"level6\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel7'>\n                <v-flex xs6>\n                  <v-subheader>Level 7</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel7\"\n                    v-model=\"level7\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n            </v-layout>\n            <v-layout\n              row\n              wrap\n            >\n              <v-spacer></v-spacer>\n              <v-flex xs1>\n                <v-tooltip top>\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn\n                    v-if='!showLevel7'\n                    class=\"mx-14\"\n                    fab\n                    dark\n                    small\n                    color=\"primary\"\n                    v-on=\"on\"\n                    @click=\"showMoreLevel\"\n                  >\n                    <v-icon dark>\n                      mdi-plus\n                    </v-icon>\n                  </v-btn>\n                </template>\n                <span>Add More Level</span>\n              </v-tooltip>\n              </v-flex>\n            </v-layout>\n            <v-layout\n              row\n              wrap\n            >\n              <v-flex xs1>\n                <v-btn\n                  color=\"error\"\n                  @click.native=\"e1 = 1\"\n                >Go Back</v-btn>\n              </v-flex>\n              <v-spacer></v-spacer>\n              <v-flex xs1>\n                <v-btn\n                  color=\"primary\"\n                  @click.native=\"confirmUpload = true\"\n                  :disabled=\"$v.$invalid\"\n                >Upload</v-btn>\n              </v-flex>\n            </v-layout>\n          </v-stepper-content>\n        </v-stepper-items>\n      </v-stepper>\n    </v-slide-y-transition>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { dataSourcesMixin } from './dataSourcesMixin'\nimport { generalMixin } from '../../mixins/generalMixin'\nimport { required } from 'vuelidate/lib/validators'\nimport { eventBus } from '../../main'\n\nexport default {\n  mixins: [dataSourcesMixin, generalMixin],\n  data () {\n    return {\n      datasetLimitWarn: false,\n      errorDialog: false,\n      errorTitle: '',\n      errorContent: '',\n      dialog: false,\n      fileUploadPercentage: '',\n      percentDialog: false,\n      uploadPrepaProgr: false,\n      UploadProgressTimer: '',\n      uploadStatus: '1/3 Uploading CSV to the server',\n      uploadPercent: null,\n      uploadName: '',\n      uploadNameErrors: [],\n      confirmUpload: false,\n      confirmTitle: '',\n      confirmMsg: '',\n      file: '',\n      uploadedFileName: '',\n      e1: 1,\n      facility: null,\n      code: null,\n      lat: null,\n      long: null,\n      level1: null,\n      level2: null,\n      level3: null,\n      level4: null,\n      level5: null,\n      level6: null,\n      level7: null,\n      showLevel3: false,\n      showLevel4: false,\n      showLevel5: false,\n      showLevel6: false,\n      showLevel7: false,\n      uploadedHeaders: [\n      ],\n      mappedHeaders: [],\n      invalidRowsHeader: [],\n      invalidRowsContent: [],\n      invalidRows: false,\n      valid: false\n    }\n  },\n  validations: {\n    facility: {\n      required: required\n    },\n    code: {\n      required: required\n    },\n    uploadName: {\n      required: required\n    }\n  },\n  methods: {\n    fileSelected (e) {\n      this.uploadedFileName = e.target.files[0]['name']\n      if (e.target.files[0]['type'] !== 'text/csv' &&\n        !(e.target.files[0]['type'] === 'application/vnd.ms-excel' &&\n          e.target.files[0].name.slice(-3).toLowerCase() === 'csv')\n      ) {\n        this.errorDialog = true\n        this.errorTitle = 'Error'\n        this.errorContent = 'Wrong file type uploaded,Only CSV format is supported'\n        this.uploadedFileName = ''\n      }\n      this.file = e.target.files[0]\n      let reader = new FileReader()\n      reader.addEventListener('load', function () {\n        var data = reader.result\n        var allTextLines = data.split(/\\r\\n|\\n/)\n        var headerString = allTextLines[0]\n        this.uploadedHeaders = headerString.split(',')\n      }.bind(this), false)\n      reader.readAsText(e.target.files[0], 'utf-8')\n    },\n    ensureNameUnique () {\n      this.uploadNameErrors = []\n      if (this.uploadName === '') {\n        return this.uploadNameErrors.push('Upload name is required')\n      }\n      if (this.uploadName.length > 35) {\n        return this.uploadNameErrors.push('Name must not exceed 35 characters')\n      }\n      for (let invalidChar of this.invalidCharacters) {\n        if (this.uploadName.indexOf(invalidChar) !== -1) {\n          return this.uploadNameErrors.push('Name is invalid')\n        }\n      }\n      for (let dtSrc of this.$store.state.dataSources) {\n        if (dtSrc.name.toLowerCase() === this.uploadName.toLowerCase()) {\n          this.uploadNameErrors.push('This Name Exists')\n          return false\n        }\n      }\n    },\n    confirmSubmit () {\n      this.confirmUpload = true\n    },\n    checkUploadProgress () {\n      const clientId = this.$store.state.clientId\n      axios.get('/progress/uploadProgress/' + clientId).then((uploadProgress) => {\n        if (!uploadProgress.data || (!uploadProgress.data.status && !uploadProgress.data.percent && !uploadProgress.data.error)) {\n          this.$store.state.uploadRunning = false\n          this.uploadPrepaProgr = false\n          this.percentDialog = false\n          this.$store.state.errorTitle = 'An error has occured'\n          this.$store.state.errorDescription = 'You should delete this data source from view data source page then re-upload'\n          this.$store.state.errorColor = 'error'\n          this.$store.state.dialogError = true\n          return\n        } else if (uploadProgress.data.error !== null) {\n          this.$store.state.uploadRunning = false\n          this.uploadPrepaProgr = false\n          this.percentDialog = false\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorDescription = uploadProgress.data.error\n          console.log(uploadProgress.data.error)\n          return\n        }\n        this.uploadStatus = uploadProgress.data.status\n        if (uploadProgress.data.percent) {\n          if (!this.percentDialog) {\n            this.uploadPrepaProgr = false\n            this.percentDialog = true\n          }\n          this.uploadPercent = uploadProgress.data.percent\n        }\n        if (uploadProgress.data.status === 'Done' || uploadProgress.data.status >= 100) {\n          this.clearProgress('uploadProgress')\n          this.addDataSource('upload')\n          clearInterval(this.UploadProgressTimer)\n          // resetting reco level\n          this.$store.state.recoLevel = 2\n          this.percentDialog = false\n          this.dialog = true\n          this.$store.state.uploadRunning = false\n        } else {\n          this.checkUploadProgress()\n        }\n      }).catch((err) => {\n        console.log(err)\n        this.checkUploadProgress()\n      })\n    },\n    performExtraCheck () {\n      // reload general config and see if still allowed to upload more data sources\n      this.$store.state.dynamicProgress = true\n      this.$store.state.progressTitle = 'Performing extra validations'\n      this.getGeneralConfig(() => {\n        this.datasetLimitWarn = false\n        this.$store.state.dynamicProgress = false\n        if (this.canAddDataset) {\n          this.submitCSV()\n        } else {\n          this.confirmUpload = false\n          this.datasetLimitWarn = true\n        }\n      })\n    },\n    submitCSV () {\n      let formData = new FormData()\n      formData.append('file', this.file)\n      formData.append('csvName', this.uploadName)\n      formData.append('facility', this.facility)\n      formData.append('code', this.code)\n      formData.append('lat', this.lat)\n      formData.append('long', this.long)\n      formData.append('level1', this.level1)\n      formData.append('level2', this.level2)\n      formData.append('level3', this.level3)\n      formData.append('level4', this.level4)\n      formData.append('level5', this.level5)\n      formData.append('level6', this.level6)\n      formData.append('level7', this.level7)\n      formData.append('clientId', this.$store.state.clientId)\n      formData.append('userID', this.$store.state.auth.userID)\n      this.confirmUpload = false\n      this.$store.state.uploadRunning = true\n      this.uploadPrepaProgr = true\n\n      // preparing data for adding data source\n      this.host = ''\n      this.sourceType = 'upload'\n      this.username = ''\n      this.password = ''\n      this.name = this.uploadName\n\n      axios.post('/uploadCSV',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: function (progressEvent) {\n            this.fileUploadPercentage = parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total))\n            if (this.fileUploadPercentage === 100) {\n              this.fileUploadPercentage = ''\n              this.uploadStatus = '2/3 Validating CSV Data'\n            }\n          }.bind(this)\n        }\n      ).then(() => {\n        // this.UploadProgressTimer = setInterval(this.checkUploadProgress, 1000)\n        this.checkUploadProgress()\n      }).catch((err) => {\n        if (Array.isArray(err.response.data.error)) {\n          this.invalidRows = true\n          for (var k = 0; k < err.response.data.error.length; k++) {\n            if (k === 0) {\n              let headers = Object.keys(err.response.data.error[k].data)\n              for (let header of headers) {\n                this.invalidRowsHeader.push({\n                  text: header,\n                  value: header\n                })\n              }\n              this.invalidRowsHeader.push({\n                text: 'Reason',\n                value: 'reason'\n              })\n            }\n            let row = Object.values(err.response.data.error[k].data)\n            let content = {}\n            for (let ind in row) {\n              content[this.invalidRowsHeader[ind].value] = row[ind]\n            }\n            content['reason'] = err.response.data.error[k].reason\n            this.invalidRowsContent.push(content)\n          }\n        } else {\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorDescription = err.response.data.error + '. Reload page and retry'\n        }\n        this.$store.state.uploadRunning = false\n        this.uploadPrepaProgr = false\n        this.percentDialog = false\n        clearInterval(this.UploadProgressTimer)\n      })\n    },\n    closeInvalidRows () {\n      this.invalidRows = false\n      this.invalidRowsHeader = []\n      this.invalidRowsContent = []\n      this.e1 = 1\n    },\n    closeDialog (component) {\n      this.$router.push({ name: component })\n      this.dialog = false\n    },\n    closeUploadWindow () {\n      eventBus.$emit('dataSourceSaved')\n    },\n    showMoreLevel () {\n      if (!this.showLevel3) {\n        this.showLevel3 = true\n        return\n      }\n      if (!this.showLevel4) {\n        this.showLevel4 = true\n        return\n      }\n      if (!this.showLevel5) {\n        this.showLevel5 = true\n        return\n      }\n      if (!this.showLevel6) {\n        this.showLevel6 = true\n        return\n      }\n      if (!this.showLevel7) {\n        this.showLevel7 = true\n      }\n    }\n  },\n  computed: {\n    facilityErrors () {\n      const errors = []\n      if (!this.$v.facility.$dirty) return errors\n      !this.$v.facility.required && errors.push('Facility is required')\n      return errors\n    },\n    codeErrors () {\n      const errors = []\n      if (!this.$v.code.$dirty) return errors\n      !this.$v.code.required && errors.push('Code is required')\n      return errors\n    },\n    filteredItemFacility () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemCode () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLat () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLong () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel1 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel2 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel3 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel4 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel5 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel6 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level7)\n    },\n    filteredItemLevel7 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6)\n    }\n  },\n  created () {\n    if (this.$store.state.uploadProgressData.percentDialog) {\n      this.percentDialog = this.$store.state.uploadProgressData.percentDialog\n    }\n    if (this.$store.state.uploadProgressData.uploadPrepaProgr) {\n      this.uploadPrepaProgr = this.$store.state.uploadProgressData.uploadPrepaProgr\n    }\n    if (this.$store.state.uploadProgressData.UploadProgressTimer) {\n      this.UploadProgressTimer = this.$store.state.uploadProgressData.UploadProgressTimer\n    }\n    if (this.$store.state.uploadProgressData.uploadStatus) {\n      this.uploadStatus = this.$store.state.uploadProgressData.uploadStatus\n    }\n    if (this.$store.state.uploadProgressData.uploadPercent) {\n      this.uploadPercent = this.$store.state.uploadProgressData.uploadPercent\n    }\n    // if (this.percentDialog || this.uploadPrepaProgr) {\n    //   this.UploadProgressTimer = setInterval(this.checkUploadProgress, 1000)\n    // }\n  },\n  destroyed () {\n    this.$store.state.uploadProgressData.dialog = this.dialog\n    this.$store.state.uploadProgressData.percentDialog = this.percentDialog\n    this.$store.state.uploadProgressData.uploadPrepaProgr = this.uploadPrepaProgr\n    this.$store.state.uploadProgressData.UploadProgressTimer = this.UploadProgressTimer\n    this.$store.state.uploadProgressData.uploadStatus = this.uploadStatus\n    this.$store.state.uploadProgressData.uploadPercent = this.uploadPercent\n    // clearInterval(this.checkUploadProgress)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.jbtn-file {\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.jbtn-file input[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  right: 0;\n  min-width: 100%;\n  min-height: 100%;\n  text-align: right;\n  filter: alpha(opacity=0);\n  opacity: 0;\n  outline: none;\n  cursor: inherit;\n  display: block;\n}\n.input.invalid input {\n  border: 1px solid red;\n  background-color: #ffc9aa;\n}\n.input.invalid label {\n  color: red;\n}\n</style>\n"]}]}