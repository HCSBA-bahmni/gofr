{"remainingRequest":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr2/src/components/FacilityRegistry/AddCodeSystem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr2/src/components/FacilityRegistry/AddCodeSystem.vue","mtime":1619236353543},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ally/gofr2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ally/gofr2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHsgcmVxdWlyZWQgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCmNvbnN0IGJhY2tlbmRTZXJ2ZXIgPSBwcm9jZXNzLmVudi5CQUNLRU5EX1NFUlZFUgpleHBvcnQgZGVmYXVsdCB7CiAgdmFsaWRhdGlvbnM6IHsKICAgIG5hbWU6IHsgcmVxdWlyZWQgfSwKICAgIGNvZGU6IHsgcmVxdWlyZWQgfQogIH0sCiAgcHJvcHM6IFsnY29kZVN5c3RlbVR5cGUnLCAnZGlzcGxheVRleHQnXSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIG5hbWU6ICcnLAogICAgICBjb2RlOiAnJwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkU2VydmljZVR5cGUgKCkgewogICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKQogICAgICBmb3JtRGF0YS5hcHBlbmQoJ25hbWUnLCB0aGlzLm5hbWUpCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnY29kZScsIHRoaXMuY29kZSkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdjb2RlU3lzdGVtVHlwZScsIHRoaXMuY29kZVN5c3RlbVR5cGUpCiAgICAgIGF4aW9zLnBvc3QoYmFja2VuZFNlcnZlciArICcvRlIvYWRkQ29kZVN5c3RlbScsIGZvcm1EYXRhLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgIH0KICAgICAgfSkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hbGVydC5zaG93ID0gdHJ1ZQogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmFsZXJ0LndpZHRoID0gJzUwMHB4JwogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmFsZXJ0Lm1zZyA9ICdDb2RlIHN5c3RlbSBhZGRlZCBzdWNjZXNzZnVsbHkhJwogICAgICAgIHRoaXMuJHN0b3JlLnN0YXRlLmFsZXJ0LnR5cGUgPSAnc3VjY2VzcycKICAgICAgICAvLyBpbmNyZW1lbnQgY29tcG9uZW50IGtleSB0byBmb3JjZSBjb21wb25lbnQgcmVsb2FkCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYmFzZVJvdXRlclZpZXdLZXkgKz0gMQogICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYWxlcnQuc2hvdyA9IHRydWUKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hbGVydC53aWR0aCA9ICc1MDBweCcKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5hbGVydC5tc2cgPSAnRmFpbGVkIHRvIGFkZCBjb2RlIHN5c3RlbSEnCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYWxlcnQudHlwZSA9ICdlcnJvcicKICAgICAgICAvLyBpbmNyZW1lbnQgY29tcG9uZW50IGtleSB0byBmb3JjZSBjb21wb25lbnQgcmVsb2FkCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuYmFzZVJvdXRlclZpZXdLZXkgKz0gMQogICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgfSkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBuYW1lRXJyb3JzICgpIHsKICAgICAgY29uc3QgZXJyb3JzID0gW10KICAgICAgaWYgKCF0aGlzLiR2Lm5hbWUuJGRpcnR5KSByZXR1cm4gZXJyb3JzCiAgICAgICF0aGlzLiR2Lm5hbWUucmVxdWlyZWQgJiYgZXJyb3JzLnB1c2goJ05hbWUgaXMgcmVxdWlyZWQnKQogICAgICByZXR1cm4gZXJyb3JzCiAgICB9LAogICAgY29kZUVycm9ycyAoKSB7CiAgICAgIGNvbnN0IGVycm9ycyA9IFtdCiAgICAgIGlmICghdGhpcy4kdi5jb2RlLiRkaXJ0eSkgcmV0dXJuIGVycm9ycwogICAgICAhdGhpcy4kdi5jb2RlLnJlcXVpcmVkICYmIGVycm9ycy5wdXNoKCdDb2RlIGlzIHJlcXVpcmVkJykKICAgICAgcmV0dXJuIGVycm9ycwogICAgfQogIH0KfQo="},{"version":3,"sources":["AddCodeSystem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddCodeSystem.vue","sourceRoot":"src/components/FacilityRegistry","sourcesContent":["<template>\n  <v-container>\n    <v-card\n      class=\"pt-4 mx-auto\"\n      flat\n      max-width=\"500\"\n    >\n      <v-card-title primary-title>\n        <b>Adding New {{displayText}}</b>\n      </v-card-title>\n      <v-card-text>\n        <v-card>\n          <v-form\n            ref=\"form\"\n            class=\"pa-3 pt-4\"\n          >\n            <v-text-field\n              required\n              @blur=\"$v.name.$touch()\"\n              @change=\"$v.name.$touch()\"\n              :error-messages=\"nameErrors\"\n              v-model=\"name\"\n              box\n              color=\"deep-purple\"\n              label=\"Name\"\n            />\n            <v-text-field\n              required\n              @blur=\"$v.code.$touch()\"\n              @change=\"$v.code.$touch()\"\n              :error-messages=\"codeErrors\"\n              v-model=\"code\"\n              box\n              color=\"deep-purple\"\n              label=\"Code\"\n            />\n          </v-form>\n          <v-card-actions>\n            <v-btn\n              flat\n              @click=\"$store.state.baseRouterViewKey++\"\n            >\n              <v-icon>clear</v-icon>Clear\n            </v-btn>\n            <v-spacer />\n            <v-btn\n              @click=\"addServiceType()\"\n              :disabled=\"$v.$invalid\"\n              class=\"white--text\"\n              color=\"deep-purple accent-4\"\n              depressed\n            >\n              <v-icon left>add</v-icon>Add\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n<script>\nimport axios from 'axios'\nimport { required } from 'vuelidate/lib/validators'\nconst backendServer = process.env.BACKEND_SERVER\nexport default {\n  validations: {\n    name: { required },\n    code: { required }\n  },\n  props: ['codeSystemType', 'displayText'],\n  data () {\n    return {\n      name: '',\n      code: ''\n    }\n  },\n  methods: {\n    addServiceType () {\n      let formData = new FormData()\n      formData.append('name', this.name)\n      formData.append('code', this.code)\n      formData.append('codeSystemType', this.codeSystemType)\n      axios.post(backendServer + '/FR/addCodeSystem', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then((response) => {\n        this.$store.state.alert.show = true\n        this.$store.state.alert.width = '500px'\n        this.$store.state.alert.msg = 'Code system added successfully!'\n        this.$store.state.alert.type = 'success'\n        // increment component key to force component reload\n        this.$store.state.baseRouterViewKey += 1\n      }).catch((err) => {\n        this.$store.state.alert.show = true\n        this.$store.state.alert.width = '500px'\n        this.$store.state.alert.msg = 'Failed to add code system!'\n        this.$store.state.alert.type = 'error'\n        // increment component key to force component reload\n        this.$store.state.baseRouterViewKey += 1\n        console.log(err)\n      })\n    }\n  },\n  computed: {\n    nameErrors () {\n      const errors = []\n      if (!this.$v.name.$dirty) return errors\n      !this.$v.name.required && errors.push('Name is required')\n      return errors\n    },\n    codeErrors () {\n      const errors = []\n      if (!this.$v.code.$dirty) return errors\n      !this.$v.code.required && errors.push('Code is required')\n      return errors\n    }\n  }\n}\n</script>"]}]}