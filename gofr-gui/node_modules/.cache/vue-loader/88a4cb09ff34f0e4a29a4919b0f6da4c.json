{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/fhir/fhir-coding.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/fhir/fhir-coding.vue","mtime":1619771013235},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["fhir-coding.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fhir-coding.vue","sourceRoot":"src/components/fhir","sourcesContent":["<template>\n  <ihris-element :edit=\"edit\" :loading=\"loading\">\n    <template #form>\n      <v-select \n        :loading=\"loading\" \n        :label=\"display\" \n        v-model=\"valueCode\" \n        :items=\"items\" \n        outlined \n        hide-details=\"auto\" \n        :error-messages=\"errors\"\n        item-text=\"display\"\n        item-value=\"code\"\n        :disabled=\"disabled\"\n        :rules=\"rules\"\n        dense\n        @change=\"errors = []\"\n      >\n        <template #label>{{display}} <span v-if=\"required\" class=\"red--text font-weight-bold\">*</span></template>\n      </v-select>\n    </template>\n    <template #header>\n      {{display}}\n    </template>\n    <template #value>\n      {{valueDisplay || value.display || \"\"}}\n    </template>\n  </ihris-element>\n</template>\n\n<script>\nimport IhrisElement from \"../ihris/ihris-element.vue\"\n\n/*\nconst itemSort = (a,b) => {\n  return (a.display === b.display ? (a.code === b.code ? 0 : (a.code < b.code ? -1: 1)) : (a.display < b.display ? -1 : 1) )\n}\n*/\nexport default {\n  name: \"fhir-coding\",\n  props: [\"field\",\"label\",\"sliceName\",\"targetprofile\",\"min\",\"max\",\"base-min\",\"base-max\",\"slotProps\",\"path\",\"binding\",\"edit\",\"readOnlyIfSet\",\n    \"constraints\"],\n  components: {\n    IhrisElement\n  },\n  data: function() {\n    return {\n      value: { system: \"\", code: \"\", display: \"\" },\n      valueCode: \"\",\n      valueDisplay: \"\",\n      loading: true,\n      errors: [],\n      //error: false,\n      items: [],\n      source: { path: \"\", data: {}, binding: this.binding },\n      disabled: false,\n      lockWatch: false\n    }\n  },\n  created: function() {\n    this.setupData()\n  },\n  watch: {\n    slotProps: {\n      handler() {\n        //console.log(\"WATCH CODING\",this.path,this.slotProps)\n        if ( !this.lockWatch ) {\n          this.setupData()\n        }\n      },\n      deep: true\n    },\n    valueCode: function( code ) {\n      if ( this.items ) {\n        let findValue = this.items.find( item => item.code === code )\n        if ( findValue ) {\n          this.value = findValue\n        }\n      }\n      if ( this.value.system && this.value.code ) {\n        this.$fhirutils.codeLookup( this.value.system, this.value.code, this.binding || this.source.binding ).then( display => {\n          this.valueDisplay = display\n        } )\n      }\n    }\n  },\n  methods: {\n    setupData: function() {\n      if ( this.slotProps && this.slotProps.source ) {\n        this.source = { path: this.slotProps.source.path+\".\"+this.field, data: {}, \n          binding: this.binding || this.slotProps.source.binding }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n          // Need to see if this works and figure out what it needs to be\n          if ( this.source.data ) {\n            this.value = this.source.data\n            this.valueCode = this.value.code\n            this.lockWatch = true\n            //console.log(\"set\",this.value,this.valueCode)\n          }\n        } else {\n          let expression = this.$fhirutils.pathFieldExpression( this.field )\n          this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, expression )\n          //console.log(\"FPATH info\",this.path,this.slotProps)\n          //console.log(\"FPATH setting value to\",this.field,this.source.data[0],expression,this.slotProps.source.data)\n          if ( this.source.data[0] ) {\n            this.value = this.source.data[0]\n            this.valueCode = this.value.code\n            this.lockWatch = true\n          }\n        }\n        this.disabled = this.readOnlyIfSet && (!!this.valueCode)\n      }\n      let binding = this.binding || this.slotProps.source.binding\n      this.$fhirutils.expand( binding ).then( items => {\n        this.items = items \n        this.loading = false\n      } ).catch( err => {\n        console.log(err)\n        //this.error = true\n        this.errors = err.message\n        this.loading = false\n      } )\n      //console.log(\"CODING\",binding)\n      /*\n      let lastSlash = binding.lastIndexOf('/')\n      let lastPipe = binding.lastIndexOf('|')\n      let valueSetId = binding.slice(lastSlash+1, (lastPipe !== -1 ? lastPipe : binding.length ))\n      //console.log(\"CODING\",lastSlash,lastPipe,valueSetId)\n      fetch(\"/fhir/ValueSet/\"+valueSetId+\"/$expand\").then(response=> {\n        if( response.ok ) {\n          response.json().then(data=>{\n            try {\n              if ( data.expansion.contains && data.expansion.contains.length > 0 ) {\n                if ( data.expansion.contains[0].hasOwnProperty(\"display\") ) {\n                  this.items = data.expansion.contains\n                } else if ( data.compose && data.compose.include ) {\n                  this.items = data.expansion.contains.map( code => {\n                    let include = data.compose.include.find( inc => inc.system === code.system )\n                    if ( include && include.concept ) {\n                      let display = include.concept.find( concept => concept.code === code.code )\n                      if ( display ) {\n                        code.display = display.display\n                      }\n                    }\n                    return code\n                  } )\n                }\n              }\n              this.items.sort( itemSort )\n            } catch(err) {\n              this.error = true\n              this.errors = \"Invalid response from server.\"\n            }\n            this.loading = false\n          }).catch(err=>{\n            this.errors = err.message\n            this.error = true\n            this.loading = false\n          })\n        } else {\n          // Try loading valueset without expansion if expand failed.\n          console.log(\"Failed to get ValueSet Expansion for \"+valueSetId)\n          fetch(\"/fhir/ValueSet/\"+valueSetId).then(response=> {\n            if ( response.ok ) {\n              response.json().then(data=> {\n                this.items = []\n                if ( data.compose && data.compose.include ) {\n                  for( let include of data.compose.include ) {\n                    if ( include.concept ) {\n                      for ( let concept of include.concept ) {\n                        concept.system = include.system\n                        this.items.push( concept )\n                        //this.items.push( { system: include.system, ...concept } )\n                      }\n                    }\n                  }\n                }\n                this.items.sort( itemSort )\n                this.loading = false\n              }).catch(err=>{\n                this.errors = err.message\n                this.error = true\n                this.loading = false\n              })\n            } else {\n              this.error = true\n              this.errors = \"Invalid response from server.\"\n              this.loading = false\n            }\n          }).catch(err=>{\n            this.errors = err.message\n            this.error = true\n            this.loading = false\n          })\n\n        }\n      }).catch(err=>{\n        this.errors = err.message\n        this.error = true\n        this.loading = false\n      })\n      */\n    }\n  },\n  computed: {\n    index: function() {\n      if ( this.slotProps && this.slotProps.input ) return this.slotProps.input.index\n      else return undefined\n    },\n    display: function() {\n      if ( this.slotProps && this.slotProps.input) return this.slotProps.input.label\n      else return this.label\n    },\n    required: function() {\n      return (this.index || 0) < this.min\n    },\n    rules: function() {\n      if ( this.required ) {\n        return [ v => !!v || this.display+\" is required\" ]\n      } else {\n        return []\n      }\n    }\n    /*\n    displayValue: function() {\n      let found = this.items.find( item => item.code === this.valueCode )\n      if ( found ) {\n        return found.display\n      } else {\n        return \"\"\n      }\n    }\n    */\n  }\n}\n</script>\n"]}]}