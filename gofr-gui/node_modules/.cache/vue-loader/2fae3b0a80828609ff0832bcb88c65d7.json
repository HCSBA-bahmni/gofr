{"remainingRequest":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-array.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-array.vue","mtime":1619258072495},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiaWhyaXMtYXJyYXkiLAogIHByb3BzOiBbImxhYmVsIiwgIm1pbiIsICJtYXgiLCAiaWQiLCAicGF0aCIsICJzbG90UHJvcHMiLCAiZmllbGQiLCAiZmllbGRUeXBlIiwgInByb2ZpbGUiLCAidGFyZ2V0UHJvZmlsZSIsICJzbGljZU5hbWUiLCAiZWRpdCIgXSwKICBkYXRhOiBmdW5jdGlvbigpIHsKICAgIHJldHVybiB7CiAgICAgIGlucHV0czogW10sCiAgICAgIHNvdXJjZTogeyBwYXRoOiAiIiwgZGF0YTogW10gfSwKICAgICAgaXNBcnJheTogdHJ1ZSwKICAgICAgbG9ja1dhdGNoOiBmYWxzZQogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24oKSB7CiAgICB0aGlzLnNldHVwSW5wdXRzKCkKICB9LAogIHdhdGNoOiB7CiAgICBzbG90UHJvcHM6IHsKICAgICAgaGFuZGxlcigpIHsKICAgICAgICBpZiAoICF0aGlzLmxvY2tXYXRjaCApIHsKICAgICAgICAgIC8vY29uc29sZS5sb2coIldBVENIQVJSIix0aGlzLnBhdGgsdGhpcy5zbG90UHJvcHMuc291cmNlKQogICAgICAgICAgdGhpcy5zZXR1cElucHV0cygpCiAgICAgICAgfQogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXR1cElucHV0czogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMuaW5wdXRzID0gW10KICAgICAgdGhpcy5zb3VyY2UgPSB7IHBhdGg6IHRoaXMucGF0aCwgZGF0YToge30gfQogICAgICBsZXQgcGF0aCA9IHRoaXMucGF0aAogICAgICBpZiAoIHRoaXMuc2xvdFByb3BzICYmIHRoaXMuc2xvdFByb3BzLnNvdXJjZSApIHsKICAgICAgICBsZXQgZXhwcmVzc2lvbiA9IHRoaXMuZmllbGQKICAgICAgICBpZiAoIHRoaXMuc2xpY2VOYW1lICkgewogICAgICAgICAgZXhwcmVzc2lvbiA9IHRoaXMuZmllbGQucmVwbGFjZSgvKFteOl0rKTooLispLywgIiQxLndoZXJlKHVybD0nIit0aGlzLnByb2ZpbGUrIicpIikKICAgICAgICB9CiAgICAgICAgdGhpcy5zb3VyY2UuZGF0YSA9IHRoaXMuJGZoaXJwYXRoLmV2YWx1YXRlKCB0aGlzLnNsb3RQcm9wcy5zb3VyY2UuZGF0YSwgZXhwcmVzc2lvbikKICAgICAgICBpZiAoIHRoaXMuc291cmNlLmRhdGEubGVuZ3RoID4gMCApIHsKICAgICAgICAgIHRoaXMubG9ja1dhdGNoID0gdHJ1ZQogICAgICAgIH0KICAgICAgfQogICAgICBmb3IoIGxldCBpZHggPSAwOyBpZHggPCB0aGlzLmFjdHVhbE1pbjsgaWR4KysgKSB7CiAgICAgICAgbGV0IGxhYmVsID0gdGhpcy5sYWJlbAogICAgICAgIGlmICggdGhpcy5kaXNwbGF5SW5kZXggKSB7CiAgICAgICAgICBsYWJlbCArPSAiICgiKyhpZHgrMSkrIikiCiAgICAgICAgfQogICAgICAgIGxldCBpbnB1dCA9IHsgbGFiZWw6IGxhYmVsLCBpbmRleDogaWR4LCBkYXRhOiB1bmRlZmluZWQgfSAKICAgICAgICBpZiAoIHRoaXMuc291cmNlLmRhdGFbaWR4XSApIHsKICAgICAgICAgIGlucHV0LnNvdXJjZSA9IHsgZGF0YTogdGhpcy5zb3VyY2UuZGF0YVtpZHhdLCBwYXRoOiBwYXRoKyJbIitpZHgrIl0iLCBmcm9tQXJyYXk6IHRydWUgfQogICAgICAgIH0KICAgICAgICB0aGlzLmlucHV0cy5wdXNoKCBpbnB1dCApCiAgICAgIH0KICAgIH0sCiAgICBhZGRSb3c6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLmxvY2tXYXRjaCA9IHRydWUKICAgICAgaWYgKCB0aGlzLmFkZEF2YWlsYWJsZSApIHsKICAgICAgICBsZXQgbGFiZWwgPSB0aGlzLmxhYmVsCiAgICAgICAgaWYgKCB0aGlzLmRpc3BsYXlJbmRleCApIHsKICAgICAgICAgIGxhYmVsICs9ICIgKCIrKHRoaXMuaW5wdXRzLmxlbmd0aCsxKSsiKSIKICAgICAgICB9CiAgICAgICAgdGhpcy5pbnB1dHMucHVzaCggeyBsYWJlbDogbGFiZWwsIGluZGV4OiB0aGlzLmlucHV0cy5sZW5ndGggfSApCiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVSb3c6IGZ1bmN0aW9uKCkgewogICAgICBpZiAoIHRoaXMuc3ViQXZhaWxhYmxlICkgewogICAgICAgIHRoaXMuaW5wdXRzLnNwbGljZSgtMSkKICAgICAgfQogICAgfSwKICAgIGdldEZpZWxkOiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuZmllbGQKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBhY3R1YWxNaW46IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gTWF0aC5tYXgoIHRoaXMubWluLCAoIHRoaXMuc291cmNlLmRhdGEubGVuZ3RoID4gMCA/IHRoaXMuc291cmNlLmRhdGEubGVuZ3RoIDogMCApICkKICAgICAgLy9yZXR1cm4gdGhpcy5taW4gPCAxID8gMSA6IHRoaXMubWluCiAgICB9LAogICAgYWRkQXZhaWxhYmxlOiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMubWF4ID09PSAiKiIgfHwgdGhpcy5pbnB1dHMubGVuZ3RoIDwgdGhpcy5tYXgKICAgIH0sCiAgICBkaXNwbGF5SW5kZXg6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5tYXggPT09ICIqIiB8fCB0aGlzLm1heCA+IDEKICAgIH0sCiAgICBzdWJBdmFpbGFibGU6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5hY3R1YWxNaW4gPCB0aGlzLmlucHV0cy5sZW5ndGgKICAgIH0sCiAgICBzaW1wbGVEaXNwbGF5OiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuICF0aGlzLmVkaXQgJiYgWyAic3RyaW5nIiBdLmluY2x1ZGVzKHRoaXMuZmllbGRUeXBlKQogICAgfSwKICAgIHNpbXBsZVZhbHVlOiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuc291cmNlLmRhdGEuam9pbigiICIpCiAgICB9CgogIH0KfQo="},{"version":3,"sources":["ihris-array.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ihris-array.vue","sourceRoot":"src/components/ihris","sourcesContent":["<template>\n  <div>\n    <div v-if=\"simpleDisplay\">\n      <v-row dense>\n        <v-col :cols=\"$store.state.cols.header\" class=\"font-weight-bold\">{{label}}</v-col><v-col :cols=\"$store.state.cols.header\">{{simpleValue}}</v-col>\n      </v-row>\n      <v-divider></v-divider>\n    </div>\n    <v-container v-else>\n      <v-card>\n        <v-system-bar\n          color=\"secondary\"\n          dark\n          v-if=\"edit\"\n          >\n          {{ label }}\n          <v-spacer></v-spacer>\n          <v-btn v-if=\"subAvailable\" icon @click=\"removeRow()\"><v-icon class=\"font-weight-bold\">mdi-minus</v-icon></v-btn>\n          <v-btn v-if=\"addAvailable\" icon @click=\"addRow()\"><v-icon>mdi-plus</v-icon></v-btn>\n        </v-system-bar>\n        <slot v-for=\"input in inputs\" :input=\"input\" :source=\"input.source\"></slot>\n      </v-card>\n    </v-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ihris-array\",\n  props: [\"label\", \"min\", \"max\", \"id\", \"path\", \"slotProps\", \"field\", \"fieldType\", \"profile\", \"targetProfile\", \"sliceName\", \"edit\" ],\n  data: function() {\n    return {\n      inputs: [],\n      source: { path: \"\", data: [] },\n      isArray: true,\n      lockWatch: false\n    }\n  },\n  created: function() {\n    this.setupInputs()\n  },\n  watch: {\n    slotProps: {\n      handler() {\n        if ( !this.lockWatch ) {\n          //console.log(\"WATCHARR\",this.path,this.slotProps.source)\n          this.setupInputs()\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    setupInputs: function() {\n      this.inputs = []\n      this.source = { path: this.path, data: {} }\n      let path = this.path\n      if ( this.slotProps && this.slotProps.source ) {\n        let expression = this.field\n        if ( this.sliceName ) {\n          expression = this.field.replace(/([^:]+):(.+)/, \"$1.where(url='\"+this.profile+\"')\")\n        }\n        this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, expression)\n        if ( this.source.data.length > 0 ) {\n          this.lockWatch = true\n        }\n      }\n      for( let idx = 0; idx < this.actualMin; idx++ ) {\n        let label = this.label\n        if ( this.displayIndex ) {\n          label += \" (\"+(idx+1)+\")\"\n        }\n        let input = { label: label, index: idx, data: undefined } \n        if ( this.source.data[idx] ) {\n          input.source = { data: this.source.data[idx], path: path+\"[\"+idx+\"]\", fromArray: true }\n        }\n        this.inputs.push( input )\n      }\n    },\n    addRow: function() {\n      this.lockWatch = true\n      if ( this.addAvailable ) {\n        let label = this.label\n        if ( this.displayIndex ) {\n          label += \" (\"+(this.inputs.length+1)+\")\"\n        }\n        this.inputs.push( { label: label, index: this.inputs.length } )\n      }\n    },\n    removeRow: function() {\n      if ( this.subAvailable ) {\n        this.inputs.splice(-1)\n      }\n    },\n    getField: function() {\n      return this.field\n    }\n  },\n  computed: {\n    actualMin: function() {\n      return Math.max( this.min, ( this.source.data.length > 0 ? this.source.data.length : 0 ) )\n      //return this.min < 1 ? 1 : this.min\n    },\n    addAvailable: function() {\n      return this.max === \"*\" || this.inputs.length < this.max\n    },\n    displayIndex: function() {\n      return this.max === \"*\" || this.max > 1\n    },\n    subAvailable: function() {\n      return this.actualMin < this.inputs.length\n    },\n    simpleDisplay: function() {\n      return !this.edit && [ \"string\" ].includes(this.fieldType)\n    },\n    simpleValue: function() {\n      return this.source.data.join(\" \")\n    }\n\n  }\n}\n</script>\n"]}]}