{"remainingRequest":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-codesystem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-codesystem.vue","mtime":1619771118040},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-codesystem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"ihris-codesystem.vue","sourceRoot":"src/components/ihris","sourcesContent":["<template>\n  <v-container class=\"my-3\">\n        \n    <slot :source=\"source\"></slot>\n    <v-overlay :value=\"overlay\">\n      <v-progress-circular\n        size=\"50\"\n        color=\"primary\"\n        indeterminate\n        ></v-progress-circular>\n    </v-overlay>\n\n    <v-navigation-drawer\n      app\n      right\n      permanent\n      clipped\n      class=\"primary darken-1 white--text\"\n      style=\"z-index: 3;\"\n      >\n      <v-list class=\"white--text\">\n        <v-list-item>\n          <v-btn v-if=\"!edit\" dark class=\"secondary\" @click=\"$emit('set-edit', !edit)\">\n          <v-icon light>mdi-pencil</v-icon>\n          <span>Edit</span>\n          </v-btn>\n          <v-btn v-else dark class=\"secondary\" @click=\"fhirId ? $router.go(0) : $router.go(-1)\">\n          <v-icon light>mdi-pencil-off</v-icon>\n          <span>Cancel</span>\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn dark class=\"success darken-1\" @click=\"processFHIR()\" v-if=\"edit\">\n          <v-icon light>mdi-content-save</v-icon>\n          <span>Save</span>\n          </v-btn>\n        </v-list-item>\n        <v-divider color=\"white\"></v-divider>\n        <v-subheader class=\"white--text\"><h2>Sections</h2></v-subheader>\n        <v-list-item v-for=\"section in sectionMenu\" :href=\"'#section-'+section.name\" :key=\"section.name\">\n          <v-list-item-content class=\"white--text\" v-if=\"!edit || !section.secondary\">\n            <v-list-item-title class=\"text-uppercase\"><h4>{{ section.title }}</h4></v-list-item-title>\n            <v-list-item-subtitle class=\"white--text\">{{ section.desc }}</v-list-item-subtitle>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n\n    </v-navigation-drawer>\n  </v-container>\n\n</template>\n\n<script>\nexport default {\n  name: \"ihris-codesystem\",\n  props: [\"title\",\"field\",\"fhir-id\",\"page\",\"profile\",\"section-menu\",\"edit\" ],\n  data: function() {\n    return {\n      fhir: {},\n      source: { data: {}, path: \"\" },\n      loading: false,\n      overlay: false,\n      isEdit: false\n    }\n  },\n  created: function() {\n    if ( this.fhirId ) {\n      this.loading = true\n      //console.log(\"getting\",this.field,this.fhirId)\n      let codeSystemId = this.profile.substring( this.profile.lastIndexOf(\"/\")+1 )\n      fetch( \"/fhir/\"+this.field+\"/\"+codeSystemId ).then(response => {\n        if ( response.ok ) {\n          response.json().then(data => {\n            let types = {}\n            if ( data.property ) {\n              for ( let prop of data.property ) {\n                types[prop.code] = \"value\"+prop.type.charAt(0).toUpperCase() + prop.type.slice(1)\n              }\n            }\n            let formatted = data.concept.find( concept => concept.code === this.fhirId )\n            //this.$store.commit('setCurrentResource', data)\n            /*\n          let formatted = { code: this.fhirId }\n          try {\n            formatted.display = data.parameter.find( param => param.name === \"display\" ).valueString\n          } catch (err) { //do nothing \n          }\n          try {\n            formatted.definition = data.parameter.find( param => param.name === \"definition\" ).valueString\n          } catch (err) { //do nothing \n          }\n          try {\n            let properties = data.parameter.filter( param => param.name === \"property\" )\n            for( let property of properties ) {\n              try {\n                let code = property.part.find( part => part.name === \"code\" ).valueCode\n                let value = property.part.find( part => part.name === \"value\" )\n                for( let key of Object.keys( value ) ) {\n                  if ( key === \"name\" ) continue\n                  if ( key === \"valueCoding\" ) {\n                    formatted[code] = [ value[key] ]\n                  } else {\n                    formatted[code] = value[key]\n                  }\n                }\n              } catch (err) {\n                continue\n              }\n            }\n          } catch (err) { //do nothing\n          }\n             */\n            if ( formatted && formatted.property ) {\n              for( let property of formatted.property ) {\n                formatted[property.code] = property[ types[ property.code ] ]\n              }\n              delete formatted.property\n            }\n\n            this.source = { data: formatted, path: this.field }\n            this.loading = false\n            //console.log(data)\n          }).catch(err=> {\n            this.loading = false\n            console.log(this.field,this.fhirId,err,response)\n          })\n        } else {\n          this.loading = false\n          console.log(\"Invalid response\",response)\n          response.text().then(body => {\n            console.log(\"body text:\",body)\n          } ).catch(err => {\n            console.log(\"Failed to get text:\",err)\n          } )\n        }\n      }).catch(err=> {\n        this.loading = false\n        console.log(this.field,this.fhirId,err)\n      })\n    }\n  },\n  computed: {\n    hasFhirId: function() {\n      if ( this.fhirId == '' ) {\n        console.log(\"blank\")\n        return false\n      } else if ( !this.fhirId ) {\n        console.log(\"fhirid is falsy\")\n        return false\n      } else {\n        console.log(\"fhirid else\")\n        return true\n      }\n    }\n    /*\n    source: function() {\n      return this.$store.state.fhir\n    }\n    */\n  },\n  methods: {\n    processFHIR: function() {\n      this.overlay = true\n      this.loading = true\n      //console.log(this.field)\n      this.fhir = { }\n      //console.log(this)\n      processChildren( this.field, this.fhir, this.$children )\n      let codeSystemId = this.profile.substring( this.profile.lastIndexOf(\"/\")+1 )\n      let url = \"/fhir/\"+this.field+\"/\"+codeSystemId\n      let opts = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/fhir+json\"\n        },\n        redirect: 'manual',\n      } \n      url += \"/\" + this.fhir.code\n      const keep = [ \"code\", \"display\", \"definition\", \"property\" ]\n      for( let key of Object.keys( this.fhir ) ) {\n        if ( !keep.includes( key ) ) {\n          delete this.fhir[key]\n        }\n      }\n      opts.body = JSON.stringify(this.fhir)\n      console.log(\"SAVE\",url,this.fhir)\n      fetch( url, opts ).then(response => {\n        //console.log(response)\n        //console.log(response.headers)\n        if ( response.status === 200 ) {\n          this.overlay = false\n          this.loading = false\n          if ( this.fhirId ) {\n            this.$router.go(0)\n          } else {\n            this.$router.push({ name:\"resource_view\", params: {page: this.page, id: this.fhir.code } })\n          }\n        } \n      } ).catch(err => {\n        console.log(\"FAILED TO SAVE\",url,err)\n      } )\n      //console.log(this.fhir)\n\n      /*\n      console.log(this.$scopedSlots.default())\n      processSlots( this.field, this.$scopedSlots.default() )\n      */\n    }\n  }\n}\n\nconst toCamel = (kebab) => {\n  // replace fhir with value\n  let value = \"value\" + kebab.substring(4)\n  return value.replace( /(-[a-z])/ig, ($1) => {\n    return $1.toUpperCase().replace('-', '')\n  } )\n}\n\nconst processChildren = function( parent, obj, children ) {\n  //console.log(\"called on \"+parent)\n\n  children.forEach( child => {\n\n    let fullField = parent\n\n    let next = obj\n\n    if ( child.field && !child.fieldType /* ignore arrays */ ) {\n      //console.log(\"working on \"+parent+\" . \"+child.field)\n      let field\n      if ( child.sliceName ) {\n        if ( child.field.startsWith(\"value[x]\") ) {\n          field = child.field.substring(9)\n          fullField += \".\" + field\n        } else {\n          field = child.field.replace(\":\"+child.sliceName, \"\")\n          fullField += \".\" + field\n        }\n      } else {\n        field = child.field\n        fullField += \".\"+field\n      }\n      if ( child.max !== \"1\" || child.baseMax !== \"1\" ) {\n        if ( !obj.hasOwnProperty(field) ) {\n          next[field] = []\n        }\n      } else {\n        next[field] = {}\n      }\n      //console.log(fullField)\n        //console.log(child.max, child.baseMax)\n      //console.log(child)\n      /* No arrays for codesystem so replacing this code\n      if ( child.hasOwnProperty(\"value\") ) {\n        //console.log( fullField +\"=\"+ child.value )\n        if ( Array.isArray( next[field] ) ) {\n          next[field].push( child.value )\n        } else {\n          next[field] = child.value\n        }\n        next = next[field]\n      } else {\n        if ( Array.isArray( next[field] ) ) {\n          let sub = {}\n          if ( child.profile ) {\n            sub.url = child.profile\n          } else if ( field === \"extension\" && child.sliceName ) {\n            sub.url = child.sliceName\n          }\n          next[field].push( sub )\n          next = sub\n        } else {\n          next = next[field]\n        }\n      }\n      */\n      if ( child.hasOwnProperty(\"value\") ) {\n        //console.log( fullField +\"=\"+ child.value )\n        if ( child.path.startsWith(\"CodeSystem.property.\") ) {\n          if ( !next.property ) {\n            next.property = []\n          }\n          let prop = { code: field }\n          let type = toCamel( child.$vnode.componentOptions.tag )\n          if ( child.value && ( child.value.hasOwnProperty(\"system\") ? (child.value.code || child.value.value) : true ) ) {\n            prop[type] = child.value\n            next.property.push( prop )\n          }\n        } else {\n          next[field] = child.value\n        }\n      }\n      next = next[field]\n    }\n\n    if ( child.$children ) {\n      processChildren( fullField, next, child.$children )\n    } \n\n  } )\n\n}\n\n\n</script>\n"]}]}