{"remainingRequest":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-resource.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-resource.vue","mtime":1619771126601},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-resource.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container class=\"my-3\">\n        \n    <v-form \n      ref=\"form\"\n      v-model=\"valid\"\n    >\n  \n      <slot :source=\"source\"></slot>\n      <v-overlay :value=\"overlay\">\n        <v-progress-circular\n          size=\"50\"\n          color=\"primary\"\n          indeterminate\n          ></v-progress-circular>\n      </v-overlay>\n\n      <v-navigation-drawer\n        app\n        right\n        permanent\n        clipped\n        class=\"primary darken-1 white--text\"\n        style=\"z-index: 3;\"\n        >\n        <v-list class=\"white--text\">\n          <v-list-item>\n            <v-btn v-if=\"!edit\" dark class=\"secondary\" @click=\"$emit('set-edit', !edit)\">\n              <v-icon light>mdi-pencil</v-icon>\n              <span>Edit</span>\n            </v-btn>\n            <v-btn v-else dark class=\"secondary\" @click=\"$router.go(0)\">\n              <v-icon light>mdi-pencil-off</v-icon>\n              <span>Cancel</span>\n            </v-btn>\n            <v-spacer></v-spacer>\n            <template v-if=\"edit\">\n              <v-btn v-if=\"valid\" dark class=\"success darken-1\" @click=\"processFHIR()\" :disabled=\"!valid\">\n                <v-icon light>mdi-content-save</v-icon>\n                <span>Save</span>\n              </v-btn>\n              <v-btn v-else dark class=\"warning\" @click=\"$refs.form.validate()\">\n                <v-icon light>mdi-content-save</v-icon>\n                <span>Save</span>\n              </v-btn>\n            </template>\n          </v-list-item>\n          <v-divider color=\"white\"></v-divider>\n          <template v-if=\"!edit && links && links.length\">\n            <v-list-item v-for=\"(link,idx) in links\" :key=\"link.url\">\n              <v-btn :key=\"link.url\" :text=\"!link.button\" :to=\"getLinkUrl(link)\" class=\"primary\">\n                <v-icon light v-if=\"link.icon\">{{link.icon}}</v-icon>\n                {{ linktext[idx]  }}\n              </v-btn>\n            </v-list-item>\n          </template>\n          <v-subheader v-if=\"sectionMenu\" class=\"white--text\"><h2>Sections</h2></v-subheader>\n          <v-list-item v-for=\"section in sectionMenu\" :href=\"'#section-'+section.name\" :key=\"section.name\">\n            <v-list-item-content class=\"white--text\" v-if=\"!edit || !section.secondary\">\n              <v-list-item-title class=\"text-uppercase\"><h4>{{ section.title }}</h4></v-list-item-title>\n              <v-list-item-subtitle class=\"white--text\">{{ section.desc }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n  \n      </v-navigation-drawer>\n    </v-form>\n  </v-container>\n\n</template>\n\n<script>\nexport default {\n  name: \"ihris-resource\",\n  props: [\"title\",\"field\",\"fhir-id\",\"page\",\"profile\",\"section-menu\",\"edit\",\"links\",\"constraints\" ],\n  data: function() {\n    return {\n      fhir: {},\n      orig: {},\n      valid: true,\n      source: { data: {}, path: \"\" },\n      loading: false,\n      overlay: false,\n      isEdit: false,\n      linktext: [ ],\n      advancedValid: true\n    }\n  },\n  created: function() {\n    if ( this.fhirId ) {\n      this.loading = true\n      //console.log(\"getting\",this.field,this.fhirId)\n      fetch( \"/fhir/\"+this.field+\"/\"+this.fhirId ).then(response => {\n        response.json().then(data => {\n          //this.$store.commit('setCurrentResource', data)\n          this.orig = data\n          this.source = { data: data, path: this.field }\n          this.setLinkText()\n          this.loading = false\n        }).catch(err=> {\n          console.log(this.field,this.fhirId,err)\n        })\n      }).catch(err=> {\n        console.log(this.field,this.fhirId,err)\n      })\n    } else if ( this.$route.query ) {\n      let presets = {\n        resourceType: this.field\n      }\n      let hasPresets = false\n      for( let path of Object.keys( this.$route.query ) ) {\n        if ( path.startsWith( this.field +\".\" ) ) {\n          hasPresets = true\n          let elements = path.substring( this.field.length+1 ).split('.')\n          let last = elements.pop()\n          let current = presets\n          for( let element of elements ) {\n            if ( element.includes('[') ) {\n              try {\n                let parts = element.split('[')\n                let name = parts[0]\n                let idx = parts[1].slice(0,-1)\n                if ( !current.hasOwnProperty(name) ) {\n                  current[name] = []\n                }\n                if ( idx ) {\n                  let next = {}\n                  current[name][parseInt(idx)] = next\n                  current = next\n                } else {\n                  let next = {}\n                  current[name].push( next )\n                  current = next\n                }\n              } catch( err ) {\n                console.log(\"Unable to process\",path)\n                continue\n              }\n            } else {\n              if ( !current.hasOwnProperty(element) ) {\n                current[element] = {}\n                current = current[element]\n              }\n            }\n          }\n          if ( last.includes('[') ) {\n            try {\n              let parts = last.split('[')\n              let name = parts[0]\n              let idx = parts[1].slice(0,-1)\n              if ( !current.hasOwnProperty(name) ) {\n                current[name] = []\n              }\n              if ( idx ) {\n                current[name][parseInt(idx)] = this.$route.query[path]\n              } else {\n                current[name].push( this.$route.query[path] )\n              }\n\n            } catch( err ) {\n              console.log(\"Unable to process\",path)\n              continue\n            }\n          } else {\n            current[last] = this.$route.query[path]\n          }\n        }\n      }\n      if ( hasPresets ) {\n        this.source = { data: presets, path: this.field }\n      }\n    }\n  },\n  computed: {\n    hasFhirId: function() {\n      if ( this.fhirId == '' ) {\n        return false\n      } else if ( !this.fhirId ) {\n        return false\n      } else {\n        return true\n      }\n    }\n    /*\n    source: function() {\n      return this.$store.state.fhir\n    }\n    */\n  },\n  methods: {\n    getLinkField: function(field) {\n      let content = this.$fhirpath.evaluate( this.source.data, field )\n      if ( content ) {\n        return content[0]\n      } else {\n        return false\n      }\n    },\n    getLinkUrl: function(link) {\n      let field\n      if ( link.field ) {\n        field = this.getLinkField(link.field)\n      }\n      if ( field ) {\n        if ( field.includes('/') ) {\n          let ref = field.split('/')\n          field = ref[1]\n        }\n        return link.url.replace(\"FIELD\",field)\n      } else {\n        return link.url \n      }\n    },\n    setLinkText: function() {\n      for ( let idx in this.links ) {\n        let link = this.links[idx]\n        if ( link.text ) {\n          this.linktext[idx] = link.text\n        } else if ( link.field ) {\n          let field = this.getLinkField(link.field)\n          if ( field ) {\n            this.$fhirutils.lookup(field).then( display => {\n              this.$set( this.linktext, idx, display )\n            } )\n          }\n        }\n      }\n    },\n    processFHIR: async function() {\n      this.$refs.form.validate()\n      if ( !this.valid ) return\n      this.advancedValid = true\n      this.overlay = true\n      this.loading = true\n\n      //const processChildren = function( parent, obj, children ) {\n      const processChildren = async ( parent, obj, children ) => {\n        //console.log(\"called on \"+parent)\n\n        for( let child of children ) {\n\n          let fullField = parent\n\n          let next = obj\n\n          if ( child.field && !child.fieldType /* ignore arrays */ ) {\n            //console.log(\"working on \"+parent+\" . \"+child.field)\n            let field\n            if ( child.sliceName ) {\n              if ( child.field.startsWith(\"value[x]\") ) {\n                field = child.field.substring(9)\n                fullField += \".\" + field\n              } else {\n                field = child.field.replace(\":\"+child.sliceName, \"\")\n                fullField += \".\" + field\n              }\n            } else {\n              field = child.field\n              fullField += \".\"+field\n            }\n            if ( child.max !== \"1\" || child.baseMax !== \"1\" ) {\n              if ( !obj.hasOwnProperty(field) ) {\n                next[field] = []\n              }\n            } else {\n              next[field] = {}\n            }\n            //console.log(fullField)\n            //console.log(child.max, child.baseMax)\n            //console.log(child)\n            if ( child.hasOwnProperty(\"value\") ) {\n              //console.log( fullField +\"=\"+ child.value )\n              if ( Array.isArray( next[field] ) ) {\n                next[field].push( child.value )\n              } else {\n                next[field] = child.value\n              }\n              next = next[field]\n            } else {\n              if ( Array.isArray( next[field] ) ) {\n                let sub = {}\n                if ( child.profile ) {\n                  sub.url = child.profile\n                } else if ( field === \"extension\" && child.sliceName ) {\n                  sub.url = child.sliceName\n                }\n                next[field].push( sub )\n                next = sub\n              } else {\n                next = next[field]\n              }\n            }\n          }\n\n          if ( child.$children ) {\n            try { \n              await processChildren( fullField, next, child.$children )\n            } catch( err ) {\n              this.advancedValid = false\n              console.log(err)\n            }\n          } \n          if ( child.constraints ) {\n            child.errors = []\n            try {\n              this.advancedValid = this.advancedValid && await this.$fhirutils.checkConstraints( child.constraints, \n                this.constraints, next, child.errors, this.fhirId )\n            } catch( err ) {\n              this.advancedValid = false\n              child.errors.push(\"An unknown error occurred.\")\n              console.log(err)\n            }\n          }\n\n        }\n\n      }\n\n      //console.log(this.field)\n      this.fhir = { \n        resourceType: this.field,\n        meta: {\n          profile: [ this.profile ] \n        }\n      }\n      //console.log(this)\n      try {\n        await processChildren( this.field, this.fhir, this.$children )\n      } catch( err ) {\n        this.advancedValid = false\n        console.log(err)\n      }\n      if ( !this.advancedValid ) {\n        this.overlay = false\n        this.loading = false\n        this.$store.commit('setMessage', { type: 'error', text: 'There were errors on the form.' })\n        return\n      }\n      console.log(\"FINISHED PROCESS AND CHECK.\")\n      let url = \"/fhir/\"+this.field\n      let opts = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/fhir+json\"\n        },\n        redirect: 'manual',\n      } \n      if ( this.fhirId ) {\n        this.fhir.id = this.fhirId\n        url += \"/\" + this.fhirId\n        opts.method = \"PUT\"\n      }\n      opts.body = JSON.stringify(this.fhir)\n      console.log(\"SAVE\",url,this.fhir)\n      fetch( url, opts ).then(response => {\n        //console.log(response)\n        //console.log(response.headers)\n        if ( response.status === 201 || response.status === 200 ) {\n          response.json().then(data => {\n            this.overlay = false\n            this.loading = false\n            if ( this.fhirId ) {\n              this.$router.go(0)\n            } else {\n              this.$router.push({ name:\"resource_view\", params: {page: this.page, id: data.id } })\n            }\n          })\n        }\n      } )\n      //console.log(this.fhir)\n\n      /*\n      console.log(this.$scopedSlots.default())\n      processSlots( this.field, this.$scopedSlots.default() )\n      */\n    }\n  }\n}\n\n\n\n</script>\n"],"sourceRoot":"src/components/ihris"}]}