{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/DataSources/FacilityReconUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/DataSources/FacilityReconUpload.vue","mtime":1619257194373},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FacilityReconUpload.vue"],"names":[],"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","sourcesContent":["<template>\n  <v-container fluid>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"dialog\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Information\n          </v-toolbar-title>\n        </v-toolbar>\n        <v-card-text>\n          Data uploaded successfully\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"primary\"\n            dark\n            @click.native=\"closeDialog('FacilityReconView')\"\n          >\n            <v-icon left>mdi-format-list-bulleted-square</v-icon>\n            View Data\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"invalidRows\"\n      max-width=\"1050px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"error\"\n          dark\n        >\n          <v-toolbar-title>\n            <v-icon>mdi-close-circle</v-icon>Data Upload was not successful,review below invalid rows in your CSV\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"closeInvalidRows()\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          <v-data-table\n            :headers=\"invalidRowsHeader\"\n            :items=\"invalidRowsContent\"\n            light\n            class=\"elevation-1\"\n          >\n            <template\n              slot=\"items\"\n              slot-scope=\"props\"\n            >\n              <td\n                v-for='header in invalidRowsHeader'\n                :key=\"header.value\"\n              >{{props.item[header.value]}}</td>\n            </template>\n          </v-data-table>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"confirmUpload\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Warning\n          </v-toolbar-title>\n        </v-toolbar>\n        <v-card-text>\n          You are about to upload CSV data into the app, click proceed to upload\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"error\"\n            @click.native=\"confirmUpload = false\"\n          >Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            dark\n            @click.native=\"performExtraCheck\"\n          >Proceed</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      transition=\"scale-transition\"\n      v-model=\"errorDialog\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-card-title>\n          {{errorTitle}}\n        </v-card-title>\n        <v-card-text>\n          {{errorContent}}\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"error\"\n            @click.native=\"errorDialog = false\"\n          >Ok</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog\n      v-model=\"uploadPrepaProgr\"\n      transition=\"scale-transition\"\n      persistent\n      width=\"300\"\n    >\n      <v-card\n        color=\"primary\"\n        dark\n      >\n        <v-card-text>\n          {{uploadStatus}}\n          <v-progress-linear\n            indeterminate\n            color=\"white\"\n            class=\"mb-0\"\n            v-if='!fileUploadPercentage'\n          ></v-progress-linear>\n          <v-progress-linear\n            v-model=\"fileUploadPercentage\"\n            color=\"white\"\n            class=\"mb-0\"\n            v-else\n          ></v-progress-linear>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      v-model=\"percentDialog\"\n      transition=\"scale-transition\"\n      persistent\n      width=\"270\"\n    >\n      <v-card\n        color=\"white\"\n        dark\n      >\n        <v-card-text>\n          <center>\n            <font style=\"color:blue\">{{uploadStatus}}</font><br>\n            <v-progress-circular\n              :rotate=\"-90\"\n              :size=\"100\"\n              :width=\"15\"\n              :value=\"uploadPercent\"\n              color=\"primary\"\n            >\n              <v-avatar\n                color=\"indigo\"\n                size=\"50px\"\n              >\n                <span class=\"white--text\">\n                  <b>{{ uploadPercent }}%</b>\n                </span>\n              </v-avatar>\n            </v-progress-circular>\n          </center>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n    <v-slide-y-transition\n      mode=\"out-in\"\n      v-if='!$store.state.denyAccess'\n    >\n      <v-stepper v-model=\"e1\">\n        <v-stepper-header>\n          <v-stepper-step\n            step=\"1\"\n            :complete=\"e1 > 1\"\n          >Upload CSV</v-stepper-step>\n          <v-divider></v-divider>\n          <v-stepper-step\n            step=\"2\"\n            :complete=\"e1 > 2\"\n          >Map Headers</v-stepper-step>\n          <v-btn\n            icon\n            @click.native=\"closeUploadWindow()\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-stepper-header>\n        <v-stepper-items>\n          <v-stepper-content step=\"1\">\n            <v-card class=\"mb-5\">\n              <v-card-title>Upload CSV (utf-8 only) - <b>Select a CSV file and upload</b></v-card-title>\n              <v-card-text>\n                <v-text-field\n                  label=\"Enter Unique Name For Your Data\"\n                  v-model=\"uploadName\"\n                  @blur=\"ensureNameUnique\"\n                  @input=\"ensureNameUnique\"\n                  :error-messages=\"uploadNameErrors\"\n                  required\n                ></v-text-field>\n                <input\n                  type=\"file\"\n                  @change=\"fileSelected\"\n                >\n                <br><br>\n                <v-card>\n                  <v-card-title primary-title>\n                    Advanced Options\n                  </v-card-title>\n                  <v-card-text>\n                    <v-tooltip top>\n                      <template v-slot:activator=\"{ on }\">\n                        <v-checkbox\n                          v-if=\"$store.state.dhis.user.orgId\"\n                          :disabled=\"shareWithAll\"\n                          v-on=\"on\"\n                          color=\"primary\"\n                          label=\"Share with other users of the same org unit as yours\"\n                          v-model=\"shareToSameOrgid\"\n                        ></v-checkbox>\n                      </template>\n                      <span>\n                        Share this dataset with all other users that are on the same org unit as you\n                      </span>\n                    </v-tooltip>\n                    <v-checkbox\n                      v-if='$store.state.config.generalConfig.allowShareToAllForNonAdmin || $store.state.auth.role === \"Admin\"'\n                      @change=\"sharingOptions\"\n                      color=\"primary\"\n                      label=\"Share with all other users\"\n                      v-model=\"shareWithAll\"\n                    >\n                    </v-checkbox>\n                    <v-tooltip top>\n                      <template v-slot:activator=\"{ on }\">\n                        <v-checkbox\n                          v-if=\"shareWithAll && $store.state.dhis.user.orgId\"\n                          v-on=\"on\"\n                          color=\"primary\"\n                          label=\"Limit orgs sharing by user orgid\"\n                          v-model=\"limitShareByOrgId\"\n                        >\n                        </v-checkbox>\n                      </template>\n                      <span>\n                        if activated, other users will see locations (including location children) that has the same location id as their location id\n                      </span>\n                    </v-tooltip>\n                  </v-card-text>\n                </v-card>\n              </v-card-text>\n            </v-card>\n            <v-btn\n              color=\"primary\"\n              @click.native=\"e1 = 2\"\n              v-if='uploadedFileName && uploadName && uploadNameErrors.length === 0'\n            >Continue</v-btn>\n            <v-btn\n              color=\"primary\"\n              @click.native=\"e1 = 2\"\n              v-else\n              disabled\n            >Continue</v-btn>\n          </v-stepper-content>\n          <v-stepper-content step=\"2\">\n            <b>Map an appropriate CSV header against those on the app.</b>\n            <v-layout\n              row\n              wrap\n              ref=\"form\"\n              v-model=\"valid\"\n            >\n              <v-flex xs6>\n                <v-subheader>Facility*</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemFacility\"\n                  v-model=\"facility\"\n                  @blur=\"$v.facility.$touch()\"\n                  @change=\"$v.facility.$touch()\"\n                  :error-messages=\"facilityErrors\"\n                  label=\"Select\"\n                  required\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-subheader>Code*</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemCode\"\n                  v-model=\"code\"\n                  @blur=\"$v.code.$touch()\"\n                  @change=\"$v.code.$touch()\"\n                  :error-messages=\"codeErrors\"\n                  label=\"Select\"\n                  required\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-subheader>Latitude</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemLat\"\n                  v-model=\"lat\"\n                  label=\"Select\"\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <v-flex xs6>\n                <v-subheader>Longitude</v-subheader>\n              </v-flex>\n              <v-flex xs6>\n                <v-select\n                  :items=\"filteredItemLong\"\n                  v-model=\"long\"\n                  label=\"Select\"\n                  single-line\n                  clearable\n                >\n                </v-select>\n              </v-flex>\n              <template>\n                <v-flex xs6>\n                  <v-subheader>Level 1</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel1\"\n                    v-model=\"level1\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template>\n                <v-flex xs6>\n                  <v-subheader>Level 2</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel2\"\n                    v-model=\"level2\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel3'>\n                <v-flex xs6>\n                  <v-subheader>Level 3</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel3\"\n                    v-model=\"level3\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel4'>\n                <v-flex xs6>\n                  <v-subheader>Level 4</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel4\"\n                    v-model=\"level4\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel5'>\n                <v-flex xs6>\n                  <v-subheader>Level 5</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel5\"\n                    v-model=\"level5\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel6'>\n                <v-flex xs6>\n                  <v-subheader>Level 6</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel6\"\n                    v-model=\"level6\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n              <template v-if='showLevel7'>\n                <v-flex xs6>\n                  <v-subheader>Level 7</v-subheader>\n                </v-flex>\n                <v-flex xs6>\n                  <v-select\n                    :items=\"filteredItemLevel7\"\n                    v-model=\"level7\"\n                    label=\"Select\"\n                    single-line\n                    clearable\n                  >\n                  </v-select>\n                </v-flex>\n              </template>\n            </v-layout>\n            <v-layout\n              row\n              wrap\n            >\n              <v-spacer></v-spacer>\n              <v-flex xs1>\n                <v-tooltip top>\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn\n                    v-if='!showLevel7'\n                    class=\"mx-14\"\n                    fab\n                    dark\n                    small\n                    color=\"primary\"\n                    v-on=\"on\"\n                    @click=\"showMoreLevel\"\n                  >\n                    <v-icon dark>\n                      mdi-plus\n                    </v-icon>\n                  </v-btn>\n                </template>\n                <span>Add More Level</span>\n              </v-tooltip>\n              </v-flex>\n            </v-layout>\n            <v-layout\n              row\n              wrap\n            >\n              <v-flex xs1>\n                <v-btn\n                  color=\"error\"\n                  @click.native=\"e1 = 1\"\n                >Go Back</v-btn>\n              </v-flex>\n              <v-spacer></v-spacer>\n              <v-flex xs1>\n                <v-btn\n                  color=\"primary\"\n                  @click.native=\"confirmUpload = true\"\n                  :disabled=\"$v.$invalid\"\n                >Upload</v-btn>\n              </v-flex>\n            </v-layout>\n          </v-stepper-content>\n        </v-stepper-items>\n      </v-stepper>\n    </v-slide-y-transition>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { dataSourcesMixin } from './dataSourcesMixin'\nimport { generalMixin } from '../../mixins/generalMixin'\nimport { required } from 'vuelidate/lib/validators'\nimport { eventBus } from '../../main'\n\nexport default {\n  mixins: [dataSourcesMixin, generalMixin],\n  data () {\n    return {\n      datasetLimitWarn: false,\n      errorDialog: false,\n      errorTitle: '',\n      errorContent: '',\n      dialog: false,\n      fileUploadPercentage: '',\n      percentDialog: false,\n      uploadPrepaProgr: false,\n      UploadProgressTimer: '',\n      uploadStatus: '1/3 Uploading CSV to the server',\n      uploadPercent: null,\n      uploadName: '',\n      uploadNameErrors: [],\n      confirmUpload: false,\n      confirmTitle: '',\n      confirmMsg: '',\n      file: '',\n      uploadedFileName: '',\n      e1: 1,\n      facility: null,\n      code: null,\n      lat: null,\n      long: null,\n      level1: null,\n      level2: null,\n      level3: null,\n      level4: null,\n      level5: null,\n      level6: null,\n      level7: null,\n      showLevel3: false,\n      showLevel4: false,\n      showLevel5: false,\n      showLevel6: false,\n      showLevel7: false,\n      uploadedHeaders: [\n      ],\n      mappedHeaders: [],\n      invalidRowsHeader: [],\n      invalidRowsContent: [],\n      invalidRows: false,\n      valid: false\n    }\n  },\n  validations: {\n    facility: {\n      required: required\n    },\n    code: {\n      required: required\n    },\n    uploadName: {\n      required: required\n    }\n  },\n  methods: {\n    fileSelected (e) {\n      this.uploadedFileName = e.target.files[0]['name']\n      if (e.target.files[0]['type'] !== 'text/csv' &&\n        !(e.target.files[0]['type'] === 'application/vnd.ms-excel' &&\n          e.target.files[0].name.slice(-3).toLowerCase() === 'csv')\n      ) {\n        this.errorDialog = true\n        this.errorTitle = 'Error'\n        this.errorContent = 'Wrong file type uploaded,Only CSV format is supported'\n        this.uploadedFileName = ''\n      }\n      this.file = e.target.files[0]\n      let reader = new FileReader()\n      reader.addEventListener('load', function () {\n        var data = reader.result\n        var allTextLines = data.split(/\\r\\n|\\n/)\n        var headerString = allTextLines[0]\n        this.uploadedHeaders = headerString.split(',')\n      }.bind(this), false)\n      reader.readAsText(e.target.files[0], 'utf-8')\n    },\n    ensureNameUnique () {\n      this.uploadNameErrors = []\n      if (this.uploadName === '') {\n        return this.uploadNameErrors.push('Upload name is required')\n      }\n      if (this.uploadName.length > 35) {\n        return this.uploadNameErrors.push('Name must not exceed 35 characters')\n      }\n      for (let invalidChar of this.invalidCharacters) {\n        if (this.uploadName.indexOf(invalidChar) !== -1) {\n          return this.uploadNameErrors.push('Name is invalid')\n        }\n      }\n      for (let dtSrc of this.$store.state.dataSources) {\n        if (dtSrc.name.toLowerCase() === this.uploadName.toLowerCase()) {\n          this.uploadNameErrors.push('This Name Exists')\n          return false\n        }\n      }\n    },\n    confirmSubmit () {\n      this.confirmUpload = true\n    },\n    checkUploadProgress () {\n      const clientId = this.$store.state.clientId\n      axios.get('/progress/uploadProgress/' + clientId).then((uploadProgress) => {\n        if (!uploadProgress.data || (!uploadProgress.data.status && !uploadProgress.data.percent && !uploadProgress.data.error)) {\n          this.$store.state.uploadRunning = false\n          this.uploadPrepaProgr = false\n          this.percentDialog = false\n          this.$store.state.errorTitle = 'An error has occured'\n          this.$store.state.errorDescription = 'You should delete this data source from view data source page then re-upload'\n          this.$store.state.errorColor = 'error'\n          this.$store.state.dialogError = true\n          return\n        } else if (uploadProgress.data.error !== null) {\n          this.$store.state.uploadRunning = false\n          this.uploadPrepaProgr = false\n          this.percentDialog = false\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorDescription = uploadProgress.data.error\n          console.log(uploadProgress.data.error)\n          return\n        }\n        this.uploadStatus = uploadProgress.data.status\n        if (uploadProgress.data.percent) {\n          if (!this.percentDialog) {\n            this.uploadPrepaProgr = false\n            this.percentDialog = true\n          }\n          this.uploadPercent = uploadProgress.data.percent\n        }\n        if (uploadProgress.data.status === 'Done' || uploadProgress.data.status >= 100) {\n          this.clearProgress('uploadProgress')\n          this.addDataSource('upload')\n          clearInterval(this.UploadProgressTimer)\n          // resetting reco level\n          this.$store.state.recoLevel = 2\n          this.percentDialog = false\n          this.dialog = true\n          this.$store.state.uploadRunning = false\n        } else {\n          this.checkUploadProgress()\n        }\n      }).catch((err) => {\n        console.log(err)\n        this.checkUploadProgress()\n      })\n    },\n    performExtraCheck () {\n      // reload general config and see if still allowed to upload more data sources\n      this.$store.state.dynamicProgress = true\n      this.$store.state.progressTitle = 'Performing extra validations'\n      this.getGeneralConfig(() => {\n        this.datasetLimitWarn = false\n        this.$store.state.dynamicProgress = false\n        if (this.canAddDataset) {\n          this.submitCSV()\n        } else {\n          this.confirmUpload = false\n          this.datasetLimitWarn = true\n        }\n      })\n    },\n    submitCSV () {\n      let formData = new FormData()\n      formData.append('file', this.file)\n      formData.append('csvName', this.uploadName)\n      formData.append('facility', this.facility)\n      formData.append('code', this.code)\n      formData.append('lat', this.lat)\n      formData.append('long', this.long)\n      formData.append('level1', this.level1)\n      formData.append('level2', this.level2)\n      formData.append('level3', this.level3)\n      formData.append('level4', this.level4)\n      formData.append('level5', this.level5)\n      formData.append('level6', this.level6)\n      formData.append('level7', this.level7)\n      formData.append('clientId', this.$store.state.clientId)\n      formData.append('userID', this.$store.state.auth.userID)\n      this.confirmUpload = false\n      this.$store.state.uploadRunning = true\n      this.uploadPrepaProgr = true\n\n      // preparing data for adding data source\n      this.host = ''\n      this.sourceType = 'upload'\n      this.username = ''\n      this.password = ''\n      this.name = this.uploadName\n\n      axios.post('/uploadCSV',\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: function (progressEvent) {\n            this.fileUploadPercentage = parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total))\n            if (this.fileUploadPercentage === 100) {\n              this.fileUploadPercentage = ''\n              this.uploadStatus = '2/3 Validating CSV Data'\n            }\n          }.bind(this)\n        }\n      ).then(() => {\n        // this.UploadProgressTimer = setInterval(this.checkUploadProgress, 1000)\n        this.checkUploadProgress()\n      }).catch((err) => {\n        if (Array.isArray(err.response.data.error)) {\n          this.invalidRows = true\n          for (var k = 0; k < err.response.data.error.length; k++) {\n            if (k === 0) {\n              let headers = Object.keys(err.response.data.error[k].data)\n              for (let header of headers) {\n                this.invalidRowsHeader.push({\n                  text: header,\n                  value: header\n                })\n              }\n              this.invalidRowsHeader.push({\n                text: 'Reason',\n                value: 'reason'\n              })\n            }\n            let row = Object.values(err.response.data.error[k].data)\n            let content = {}\n            for (let ind in row) {\n              content[this.invalidRowsHeader[ind].value] = row[ind]\n            }\n            content['reason'] = err.response.data.error[k].reason\n            this.invalidRowsContent.push(content)\n          }\n        } else {\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorDescription = err.response.data.error + '. Reload page and retry'\n        }\n        this.$store.state.uploadRunning = false\n        this.uploadPrepaProgr = false\n        this.percentDialog = false\n        clearInterval(this.UploadProgressTimer)\n      })\n    },\n    closeInvalidRows () {\n      this.invalidRows = false\n      this.invalidRowsHeader = []\n      this.invalidRowsContent = []\n      this.e1 = 1\n    },\n    closeDialog (component) {\n      this.$router.push({ name: component })\n      this.dialog = false\n    },\n    closeUploadWindow () {\n      eventBus.$emit('dataSourceSaved')\n    },\n    showMoreLevel () {\n      if (!this.showLevel3) {\n        this.showLevel3 = true\n        return\n      }\n      if (!this.showLevel4) {\n        this.showLevel4 = true\n        return\n      }\n      if (!this.showLevel5) {\n        this.showLevel5 = true\n        return\n      }\n      if (!this.showLevel6) {\n        this.showLevel6 = true\n        return\n      }\n      if (!this.showLevel7) {\n        this.showLevel7 = true\n      }\n    }\n  },\n  computed: {\n    facilityErrors () {\n      const errors = []\n      if (!this.$v.facility.$dirty) return errors\n      !this.$v.facility.required && errors.push('Facility is required')\n      return errors\n    },\n    codeErrors () {\n      const errors = []\n      if (!this.$v.code.$dirty) return errors\n      !this.$v.code.required && errors.push('Code is required')\n      return errors\n    },\n    filteredItemFacility () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemCode () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLat () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLong () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel1 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel2 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel3 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level4 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel4 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level5 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel5 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level6 && o !== this.level7)\n    },\n    filteredItemLevel6 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level7)\n    },\n    filteredItemLevel7 () {\n      let uploadedHeaders = this.uploadedHeaders\n      return uploadedHeaders.filter(o => o !== this.facility && o !== this.code && o !== this.lat && o !== this.long && o !== this.level1 && o !== this.level2 && o !== this.level3 && o !== this.level4 && o !== this.level5 && o !== this.level6)\n    }\n  },\n  created () {\n    if (this.$store.state.uploadProgressData.percentDialog) {\n      this.percentDialog = this.$store.state.uploadProgressData.percentDialog\n    }\n    if (this.$store.state.uploadProgressData.uploadPrepaProgr) {\n      this.uploadPrepaProgr = this.$store.state.uploadProgressData.uploadPrepaProgr\n    }\n    if (this.$store.state.uploadProgressData.UploadProgressTimer) {\n      this.UploadProgressTimer = this.$store.state.uploadProgressData.UploadProgressTimer\n    }\n    if (this.$store.state.uploadProgressData.uploadStatus) {\n      this.uploadStatus = this.$store.state.uploadProgressData.uploadStatus\n    }\n    if (this.$store.state.uploadProgressData.uploadPercent) {\n      this.uploadPercent = this.$store.state.uploadProgressData.uploadPercent\n    }\n    // if (this.percentDialog || this.uploadPrepaProgr) {\n    //   this.UploadProgressTimer = setInterval(this.checkUploadProgress, 1000)\n    // }\n  },\n  destroyed () {\n    this.$store.state.uploadProgressData.dialog = this.dialog\n    this.$store.state.uploadProgressData.percentDialog = this.percentDialog\n    this.$store.state.uploadProgressData.uploadPrepaProgr = this.uploadPrepaProgr\n    this.$store.state.uploadProgressData.UploadProgressTimer = this.UploadProgressTimer\n    this.$store.state.uploadProgressData.uploadStatus = this.uploadStatus\n    this.$store.state.uploadProgressData.uploadPercent = this.uploadPercent\n    // clearInterval(this.checkUploadProgress)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.jbtn-file {\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.jbtn-file input[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  right: 0;\n  min-width: 100%;\n  min-height: 100%;\n  text-align: right;\n  filter: alpha(opacity=0);\n  opacity: 0;\n  outline: none;\n  cursor: inherit;\n  display: block;\n}\n.input.invalid input {\n  border: 1px solid red;\n  background-color: #ffc9aa;\n}\n.input.invalid label {\n  color: red;\n}\n</style>\n"],"sourceRoot":"src/components/DataSources"}]}