{"remainingRequest":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-secondary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-secondary.vue","mtime":1619771141106},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-secondary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,IAAA,QAAA,GAAA,SAAA,QAAA,CAAA,GAAA,EAAA;AACA,SAAA,CAAA,CAAA,GAAA,IAAA,GAAA,CAAA,WAAA,KAAA,MAAA;AACA,CAFA;;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,YAAA,EACA,cADA,EACA,MADA,EACA,SADA,EACA,SADA,CAFA;AAIA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AAAA,QAAA,IAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,UAAA,EAAA;AALA,KAAA;AAOA,GAZA;AAaA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,SAAA;AACA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,GAhBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,GAAA,GAAA,WAAA,KAAA,KAAA;AACA,UAAA,QAAA,GAAA,EAAA;;AACA,UAAA,KAAA,OAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,cAAA,KAAA,OAAA;AACA;;AACA,UAAA,KAAA,WAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,KAAA,WAAA,GAAA,GAAA,GAAA,KAAA,MAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA,SAAA,CAAA,KAAA,SAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,IAAA,GAAA,GAAA,KAAA,MAAA;AACA;;AACA,MAAA,GAAA,IAAA,MAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,QAAA,CAAA,GAAA;AACA,KA3BA;AA4BA,IAAA,QAAA,EAAA,kBAAA,GAAA,EAAA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,UAAA,QAAA,CAAA,IAAA,GAAA,IAAA;AAAA,+EAAA,iBAAA,IAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACA,IAAA,CAAA,KAAA,IAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CADA;AAAA;AAAA;AAAA;;AAAA,6DAEA,IAAA,CAAA,KAFA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA,sBAAA,KAFA;AAGA,sBAAA,GAHA,GAGA;AAAA,wBAAA,EAAA,EAAA,KAAA,CAAA,QAAA,CAAA;AAAA,uBAHA;AAAA,8DAIA,KAAA,CAAA,OAJA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,sBAAA,MAJA;;AAAA,4BAKA,MAAA,CAAA,KAAA,KAAA,SALA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAOA,sBAAA,OAPA,GAOA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EAAA,MAAA,CAAA,KAAA,CAPA;AAAA;AAAA,6BAQA,KAAA,CAAA,cAAA,CAAA,OAAA,CARA;;AAAA;AAQA,sBAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CARA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUA,sBAAA,OAAA,CAAA,GAAA;;AAVA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAaA,0BAAA,CAAA,GAAA,CAAA,OAAA,EAAA,GAAA,CAAA,OAAA,GAAA,EAAA;AAbA,8DAcA,KAAA,CAAA,OAdA;;AAAA;AAcA,+EAAA;AAAA,0BAAA,MAAA;;AACA,8BAAA,MAAA,CAAA,GAAA,EAAA;AACA,gCAAA,MAAA,CAAA,SAAA,EAAA;AACA,8BAAA,KADA,GACA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EAAA,MAAA,CAAA,SAAA,CADA;;AAEA,kCAAA,KAAA,CAAA,KAAA,CAAA,UAAA,IAAA;AAAA,uCAAA,IAAA;AAAA,+BAAA,CAAA,EAAA;AACA,gCAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA,6BALA,MAKA;AACA,8BAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA,2BATA,MASA;AACA,gCAAA,MAAA,CAAA,SAAA,EAAA;AACA,8BAAA,MADA,GACA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EAAA,MAAA,CAAA,SAAA,CADA;;AAEA,kCAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,EAAA;AACA,gCAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA,IAAA,MAAA,CAAA,KAAA,CAAA,UAAA,IAAA;AAAA,yCAAA,IAAA;AAAA,iCAAA,CAAA;AACA,+BAFA,MAEA;AACA,gCAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,UAAA,IAAA;AAAA,yCAAA,IAAA;AAAA,iCAAA,CAAA;AACA;AACA,6BAPA,MAOA;AACA,8BAAA,MAAA,CAAA,KAAA,GAAA,IAAA;AACA;AACA;AACA;AApCA;AAAA;AAAA;AAAA;AAAA;;AAqCA,sBAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA;;AArCA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,8DAwCA,KAAA,CAAA,OAxCA;;AAAA;AAwCA,+EAAA;AAAA,0BAAA,OAAA;;AACA,8BAAA,CAAA,OAAA,CAAA,GAAA,EAAA;AACA,4BAAA,OAAA,CAAA,KAAA,GAAA,OAAA,CAAA,YAAA;AACA;AACA;AA5CA;AAAA;AAAA;AAAA;AAAA;;AAAA;AA8CA,sBAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,MAAA;AAAA,+BAAA,CAAA,MAAA,CAAA,GAAA,IAAA,MAAA,CAAA,KAAA;AAAA,uBAAA,CAAA;;AAGA,0BAAA,IAAA,CAAA,IAAA,EAAA;AACA,wBAAA,IADA,GACA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,iCAAA,IAAA,CAAA,QAAA,KAAA,MAAA;AAAA,yBAAA,CADA;;AAEA,4BAAA,IAAA,EAAA;AACA,0BAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA;AACA,yBAFA,MAEA;AACA,0BAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA;AACA,uBAPA,MAOA;AACA,wBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA;;AA1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAA;;AAAA;AAAA;AAAA;AAAA,eA2DA,KA3DA,CA2DA,UAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,WA9DA;AA+DA,SAhEA,MAgEA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,EAAA,QAAA,CAAA,MAAA;AACA;AACA,OArEA,EAqEA,KArEA,CAqEA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OAxEA;AA0EA,KAvGA;AAwGA,IAAA,cAAA;AAAA,oFAAA,kBAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,OAAA,CAAA,OAAA,CADA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,cAAA,CAAA,CAFA;;AAAA;AAEA,gBAAA,MAFA;AAAA,kDAGA,MAAA,CAAA,IAAA,CAAA,GAAA,CAHA;;AAAA;AAAA,qBAIA,QAAA,CAAA,OAAA,CAJA;AAAA;AAAA;AAAA;;AAAA,sBAKA,OAAA,CAAA,IAAA,IAAA,OAAA,CAAA,MALA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMA,KAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,MAAA,EAAA,OAAA,CAAA,IAAA,CANA;;AAAA;AAAA;;AAAA;AAAA,qBAOA,OAAA,CAAA,OAPA;AAAA;AAAA;AAAA;;AAAA,kDAQA,OAAA,CAAA,OARA;;AAAA;AAAA,qBASA,OAAA,CAAA,IATA;AAAA;AAAA;AAAA;;AAAA,kDAUA,OAAA,CAAA,IAVA;;AAAA;AAAA,qBAWA,OAAA,CAAA,SAXA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAYA,KAAA,UAAA,CAAA,cAAA,CAAA,OAAA,CAAA,SAAA,CAZA;;AAAA;AAAA;;AAAA;AAcA,gBAAA,OAAA,CAAA,GAAA,CAAA,4BAAA,EAAA,OAAA;AAdA,kDAeA,SAfA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kDAkBA,OAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAxGA;AA6HA,IAAA,SA7HA,qBA6HA,IA7HA,EA6HA,IA7HA,EA6HA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,CAAA,EAAA,EAAA,OAAA,CAAA,QAAA,EAAA,KAAA,MAAA,CAAA;AACA;AA/HA;AA1BA,CAAA","sourcesContent":["<template>\n  <v-container class=\"my-3\" v-if=\"!edit\">\n    <v-data-table\n      :headers=\"columns\"\n      :items=\"items\"\n      item-key=\"id\"\n      :items-per-page=\"5\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      dense\n    >\n      \n      <template v-slot:top>\n        <v-toolbar flat color=\"white\">\n          <v-toolbar-title>\n            {{ title }}\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn \n            v-for=\"action in topActions\" \n            :to=\"setupLink( action.link, {} )\" \n            :color=\"action.class\" \n            :key=\"action.text\"\n            small\n            >\n            {{ action.text }}\n          </v-btn>\n        </v-toolbar>\n      </template>\n      <template v-slot:item._action=\"{ item }\">\n        <v-btn \n          v-for=\"action in item.actions\" \n          :to=\"setupLink( action.link, item )\" \n          :color=\"action.class\" \n          :key=\"action.text\"\n          small\n          rounded\n          >\n          {{ action.text }}\n        </v-btn>\n      </template>\n    </v-data-table>\n  </v-container>\n</template>\n\n<script>\nconst isObject = (obj) => {\n  return (!!obj) && (obj.constructor === Object)\n}\n\nexport default {\n  name: \"ihris-secondary\",\n  props: [\"title\", \"field\", \"profile\", \"slotProps\", \"link-id\", \"link-field\", \n    \"search-field\", \"edit\", \"columns\", \"actions\"],\n  data: function() {\n    return {\n      source: { data: {}, path: this.field },\n      empty: true,\n      items: [],\n      loading: true,\n      topActions: []\n    }\n  },\n  mounted: function() {\n    this.setupData()\n  },\n  watch: {\n    /*\n    slotProps: {\n      handler() {\n        this.setupData()\n      }, \n      deep: true\n    }\n    */\n  },\n  methods: {\n    setupData: function() {\n      /*\n      if ( this.slotProps && this.slotProps.source ) {\n        this.source = { path: this.field, data: {} }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n        } else {\n          this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, this.field )\n        }\n        //console.log(this.source)\n      }\n      */\n      let url = \"/fhir/\" + this.field\n      let queryStr = []\n      if ( this.profile ) {\n        queryStr.push( \"_profile=\"+this.profile )\n      }\n      if ( this.searchField ) {\n        queryStr.push( this.searchField+\"=\"+this.linkId )\n      } else {\n        queryStr.push( this.linkField.substring( this.linkField.indexOf('.') +1 ) +\"=\"+this.linkId )\n      }\n      url += \"?\" + queryStr.join(\"&\")\n      this.items = []\n      this.loading = true\n      this.addItems( url )\n    },\n    addItems: function (url) {\n      fetch( url ).then( response => {\n        if ( response.status === 200 ) {\n          response.json().then( async data => {\n            if ( data.entry && data.entry.length > 0 ) {\n              for( let entry of data.entry ) {\n                let row = { id: entry.resource.id }\n                for( let header of this.columns ) {\n                  if ( header.value === \"_action\" ) continue\n                  try {\n                    let content = this.$fhirpath.evaluate( entry.resource, header.value )\n                    row[header.value] = await this.processContent( content )\n                  } catch ( err ) {\n                    console.log(err)\n                  }\n                }\n                if ( !row.actions ) row.actions = []\n                for( let action of this.actions ) {\n                  if ( action.row ) {\n                    if ( action.condition ) {\n                      let meets = this.$fhirpath.evaluate( entry.resource, action.condition )\n                      if ( meets.every( meet => meet ) ) {\n                        row.actions.push( action )\n                      }\n                    } else {\n                      row.actions.push( action )\n                    }\n                  } else {\n                    if ( action.condition ) {\n                      let meets = this.$fhirpath.evaluate( entry.resource, action.condition )\n                      if ( action.hasOwnProperty(\"meets\") ) {\n                        action.meets = action.meets && meets.every( meet => meet )\n                      } else {\n                        action.meets = meets.every( meet => meet )\n                      }\n                    } else {\n                      action.meets = true\n                    }\n                  }\n                }\n                this.items.push( row )\n              }\n            } else {\n              for( let action of this.actions ) {\n                if ( !action.row ) {\n                  action.meets = action.emptyDisplay\n                }\n              }\n            }\n            this.topActions = this.actions.filter( action => !action.row && action.meets )\n\n\n            if ( data.link ) {\n              let next = data.link.find( link => link.relation === \"next\" )\n              if ( next ) {\n                this.addItems( next.url )\n              } else {\n                this.loading = false\n              }\n            } else {\n              this.loading = false\n            }\n          } ).catch( err => {\n            this.loading = false\n            console.log(err)\n          } )\n        } else {\n          this.loading = false\n          console.log(\"Unable to fetch\",url,response.status)\n        }\n      } ).catch( err => {\n        this.loading = false\n        console.log(err)\n      } )\n\n    },\n    processContent: async function( content ) {\n      if ( Array.isArray( content ) ) {\n        let output = await Promise.all(content.map( this.processContent ))\n        return output.join(\" \")\n      } else if ( isObject( content ) ) {\n        if ( content.code && content.system ) {\n          return await this.$fhirutils.codeLookup( content.system, content.code )\n        } else if ( content.display ) {\n          return content.display\n        } else if ( content.code ) {\n          return content.code\n        } else if ( content.reference ) {\n          return await this.$fhirutils.resourceLookup( content.reference)\n        } else {\n          console.log(\"Unable to process content:\",content)\n          return \"Unknown\"\n        }\n      } else {\n        return content\n      }\n    },\n    setupLink( link, item ) {\n      return link.replace( \"ITEMID\", item.id ).replace( \"FHIRID\", this.linkId )\n    }\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components/ihris"}]}