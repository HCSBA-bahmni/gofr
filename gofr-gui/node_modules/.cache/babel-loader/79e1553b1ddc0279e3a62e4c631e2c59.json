{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/ihris/ihris-secondary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/ihris/ihris-secondary.vue","mtime":1620114035917},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-secondary.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container class=\"my-3\" v-if=\"!edit\">\n    <v-data-table\n      :headers=\"columns\"\n      :items=\"items\"\n      item-key=\"id\"\n      :items-per-page=\"5\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n      dense\n    >\n\n      <template v-slot:top>\n        <v-toolbar flat color=\"white\">\n          <v-toolbar-title>\n            {{ title }}\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            v-for=\"action in topActions\"\n            :to=\"setupLink( action.link, {} )\"\n            :color=\"action.class\"\n            :key=\"action.text\"\n            small\n            >\n            {{ action.text }}\n          </v-btn>\n        </v-toolbar>\n      </template>\n      <template v-slot:item._action=\"{ item }\">\n        <v-btn\n          v-for=\"action in item.actions\"\n          :to=\"setupLink( action.link, item )\"\n          :color=\"action.class\"\n          :key=\"action.text\"\n          small\n          rounded\n          >\n          {{ action.text }}\n        </v-btn>\n      </template>\n    </v-data-table>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nconst isObject = (obj) => {\n  return (!!obj) && (obj.constructor === Object)\n}\n\nexport default {\n  name: \"ihris-secondary\",\n  props: [\"title\", \"field\", \"profile\", \"slotProps\", \"link-id\", \"link-field\",\n    \"search-field\", \"edit\", \"columns\", \"actions\"],\n  data: function() {\n    return {\n      source: { data: {}, path: this.field },\n      empty: true,\n      items: [],\n      loading: true,\n      topActions: []\n    }\n  },\n  mounted: function() {\n    this.setupData()\n  },\n  watch: {\n    /*\n    slotProps: {\n      handler() {\n        this.setupData()\n      },\n      deep: true\n    }\n    */\n  },\n  methods: {\n    setupData: function() {\n      /*\n      if ( this.slotProps && this.slotProps.source ) {\n        this.source = { path: this.field, data: {} }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n        } else {\n          this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, this.field )\n        }\n        //console.log(this.source)\n      }\n      */\n      let url = \"/fhir/\" + this.field\n      let queryStr = []\n      if ( this.profile ) {\n        queryStr.push( \"_profile=\"+this.profile )\n      }\n      if ( this.searchField ) {\n        queryStr.push( this.searchField+\"=\"+this.linkId )\n      } else {\n        queryStr.push( this.linkField.substring( this.linkField.indexOf('.') +1 ) +\"=\"+this.linkId )\n      }\n      url += \"?\" + queryStr.join(\"&\")\n      this.items = []\n      this.loading = true\n      this.addItems( url )\n    },\n    addItems: function (url) {\n      axios.get( url ).then( async (response) => {\n        let data = response.data\n        if ( data.entry && data.entry.length > 0 ) {\n          for( let entry of data.entry ) {\n            let row = { id: entry.resource.id }\n            for( let header of this.columns ) {\n              if ( header.value === \"_action\" ) continue\n              try {\n                let content = this.$fhirpath.evaluate( entry.resource, header.value )\n                row[header.value] = await this.processContent( content )\n              } catch ( err ) {\n                console.log(err)\n              }\n            }\n            if ( !row.actions ) row.actions = []\n            for( let action of this.actions ) {\n              if ( action.row ) {\n                if ( action.condition ) {\n                  let meets = this.$fhirpath.evaluate( entry.resource, action.condition )\n                  if ( meets.every( meet => meet ) ) {\n                    row.actions.push( action )\n                  }\n                } else {\n                  row.actions.push( action )\n                }\n              } else {\n                if ( action.condition ) {\n                  let meets = this.$fhirpath.evaluate( entry.resource, action.condition )\n                  if ( action.hasOwnProperty(\"meets\") ) {\n                    action.meets = action.meets && meets.every( meet => meet )\n                  } else {\n                    action.meets = meets.every( meet => meet )\n                  }\n                } else {\n                  action.meets = true\n                }\n              }\n            }\n            this.items.push( row )\n          }\n        } else {\n          for( let action of this.actions ) {\n            if ( !action.row ) {\n              action.meets = action.emptyDisplay\n            }\n          }\n        }\n        this.topActions = this.actions.filter( action => !action.row && action.meets )\n\n\n        if ( data.link ) {\n          let next = data.link.find( link => link.relation === \"next\" )\n          if ( next ) {\n            this.addItems( next.url )\n          } else {\n            this.loading = false\n          }\n        } else {\n          this.loading = false\n        }\n      } ).catch( err => {\n        this.loading = false\n        console.log(err)\n      } )\n\n    },\n    processContent: async function( content ) {\n      if ( Array.isArray( content ) ) {\n        let output = await Promise.all(content.map( this.processContent ))\n        return output.join(\" \")\n      } else if ( isObject( content ) ) {\n        if ( content.code && content.system ) {\n          return await this.$fhirutils.codeLookup( content.system, content.code )\n        } else if ( content.display ) {\n          return content.display\n        } else if ( content.code ) {\n          return content.code\n        } else if ( content.reference ) {\n          return await this.$fhirutils.resourceLookup( content.reference)\n        } else {\n          console.log(\"Unable to process content:\",content)\n          return \"Unknown\"\n        }\n      } else {\n        return content\n      }\n    },\n    setupLink( link, item ) {\n      return link.replace( \"ITEMID\", item.id ).replace( \"FHIRID\", this.linkId )\n    }\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components/ihris"}]}