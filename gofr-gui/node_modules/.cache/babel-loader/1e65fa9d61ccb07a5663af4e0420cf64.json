{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/ihris/ihris-resource.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/ihris/ihris-resource.vue","mtime":1621965248925},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-resource.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container class=\"my-3\">\n    <v-form\n      ref=\"form\"\n      v-model=\"valid\"\n    >\n\n      <slot :source=\"source\"></slot>\n      <v-overlay :value=\"overlay\">\n        <v-progress-circular\n          size=\"50\"\n          color=\"primary\"\n          indeterminate\n          ></v-progress-circular>\n      </v-overlay>\n\n      <v-navigation-drawer\n        app\n        left\n        permanent\n        clipped\n        class=\"primary darken-1 white--text\"\n        style=\"z-index: 3;\"\n        >\n        <v-list class=\"white--text\">\n          <v-list-item>\n            <template v-if=\"!edit\">\n              <v-row>\n                <v-col md=\"12\">\n                  <v-btn small dark class=\"secondary\" @click=\"$emit('set-edit', !edit)\">\n                    <v-icon left light>mdi-pencil</v-icon>\n                    <span>Edit</span>\n                  </v-btn>\n                </v-col>\n                <v-col>\n                  <v-btn\n                    small\n                    @click=\"processRequest('approved')\"\n                    color=\"success\"\n                    v-if=\"$store.state.requestResourceUpdateData.requestUpdatingResource\"\n                    :disabled=\"currentRequestStatus === 'approved' || currentRequestStatus === ''\"\n                  >\n                    <v-icon left>mdi-check-circle</v-icon> Approve\n                  </v-btn>\n                </v-col>\n                <v-col>\n                  <v-btn\n                    small\n                    @click=\"processRequest('rejected')\"\n                    color=\"error\"\n                    v-if=\"$store.state.requestResourceUpdateData.requestUpdatingResource\"\n                    :disabled=\"currentRequestStatus !== 'pending'\"\n                  >\n                    <v-icon left>mdi-cancel</v-icon> Reject\n                  </v-btn>\n                </v-col>\n              </v-row>\n              <v-layout row wrap>\n                <v-flex xs12>\n\n                </v-flex>\n                <v-flex xs5>\n\n                </v-flex>\n                <v-spacer></v-spacer>\n                <v-flex xs5>\n\n                </v-flex>\n              </v-layout>\n            </template>\n            <v-btn small v-else dark class=\"secondary\" @click=\"$router.go(0)\">\n              <v-icon light>mdi-pencil-off</v-icon>\n              <span>Cancel</span>\n            </v-btn>\n            <v-spacer></v-spacer>\n            <template v-if=\"edit && $store.state.searchAction !== 'send-update-request'\">\n              <v-btn small v-if=\"valid\" dark class=\"success darken-1\" @click=\"processFHIR()\" :disabled=\"!valid\">\n                <v-icon light>mdi-content-save</v-icon>\n                <span>Save</span>\n              </v-btn>\n              <v-btn small v-else dark class=\"warning\" @click=\"$refs.form.validate()\">\n                <v-icon light>mdi-content-save</v-icon>\n                <span>Save</span>\n              </v-btn>\n            </template>\n            <template v-else-if=\"edit && $store.state.searchAction === 'send-update-request'\">\n              <v-btn\n                small\n                @click=\"createUpdateRequest\"\n                color=\"success\"\n              >\n                <v-icon left>mdi-check-circle</v-icon> Send Update Request\n              </v-btn>\n            </template>\n          </v-list-item>\n          <v-divider color=\"white\"></v-divider>\n          <template v-if=\"!edit && links && links.length\">\n            <v-list-item v-for=\"(link,idx) in links\" :key=\"link.url\">\n              <v-btn :key=\"link.url\" :text=\"!link.button\" :to=\"getLinkUrl(link)\" class=\"primary\">\n                <v-icon light v-if=\"link.icon\">{{link.icon}}</v-icon>\n                {{ linktext[idx]  }}\n              </v-btn>\n            </v-list-item>\n          </template>\n          <v-subheader v-if=\"sectionMenu\" class=\"white--text\"><h2>Sections</h2></v-subheader>\n          <v-list-item v-for=\"section in sectionMenu\" :href=\"'#section-'+section.name\" :key=\"section.name\">\n            <v-list-item-content class=\"white--text\" v-if=\"!edit || !section.secondary\">\n              <v-list-item-title class=\"text-uppercase\"><h4>{{ section.title }}</h4></v-list-item-title>\n              <v-list-item-subtitle class=\"white--text\">{{ section.desc }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n\n      </v-navigation-drawer>\n    </v-form>\n  </v-container>\n\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: \"ihris-resource\",\n  props: [\"title\",\"field\",\"fhirId\",\"page\",\"profile\",\"section-menu\",\"edit\",\"links\",\"constraints\" ],\n  data: function() {\n    return {\n      fhir: {},\n      orig: {},\n      valid: true,\n      source: { data: {}, path: \"\" },\n      loading: false,\n      overlay: false,\n      isEdit: false,\n      linktext: [ ],\n      advancedValid: true,\n      currentRequestStatus: ''\n    }\n  },\n  created: function() {\n    if ( this.fhirId ) {\n      this.loading = true\n      axios.get( \"/fhir/\"+this.field+\"/\"+this.fhirId ).then(response => {\n        let data = response.data\n        this.orig = data\n        this.source = { data: data, path: this.field }\n        this.setLinkText()\n        this.loading = false\n        if(data.extension) {\n          for(let ext of data.extension) {\n            if(ext.url === \"http://gofr.org/fhir/StructureDefinition/request-status\") {\n              this.currentRequestStatus = ext.valueCoding.code\n            }\n          }\n        }\n      }).catch(err=> {\n        console.log(this.field,this.fhirId,err)\n      })\n    } else if ( this.$route.query ) {\n      let presets = {\n        resourceType: this.field\n      }\n      let hasPresets = false\n      for( let path of Object.keys( this.$route.query ) ) {\n        if ( path.startsWith( this.field +\".\" ) ) {\n          hasPresets = true\n          let elements = path.substring( this.field.length+1 ).split('.')\n          let last = elements.pop()\n          let current = presets\n          for( let element of elements ) {\n            if ( element.includes('[') ) {\n              try {\n                let parts = element.split('[')\n                let name = parts[0]\n                let idx = parts[1].slice(0,-1)\n                if ( !current.hasOwnProperty(name) ) {\n                  current[name] = []\n                }\n                if ( idx ) {\n                  let next = {}\n                  current[name][parseInt(idx)] = next\n                  current = next\n                } else {\n                  let next = {}\n                  current[name].push( next )\n                  current = next\n                }\n              } catch( err ) {\n                console.log(\"Unable to process\",path)\n                continue\n              }\n            } else {\n              if ( !current.hasOwnProperty(element) ) {\n                current[element] = {}\n                current = current[element]\n              }\n            }\n          }\n          if ( last.includes('[') ) {\n            try {\n              let parts = last.split('[')\n              let name = parts[0]\n              let idx = parts[1].slice(0,-1)\n              if ( !current.hasOwnProperty(name) ) {\n                current[name] = []\n              }\n              if ( idx ) {\n                current[name][parseInt(idx)] = this.$route.query[path]\n              } else {\n                current[name].push( this.$route.query[path] )\n              }\n\n            } catch( err ) {\n              console.log(\"Unable to process\",path)\n              continue\n            }\n          } else {\n            current[last] = this.$route.query[path]\n          }\n        }\n      }\n      if ( hasPresets ) {\n        this.source = { data: presets, path: this.field }\n      }\n    }\n  },\n  computed: {\n    hasFhirId: function() {\n      if ( this.fhirId == '' ) {\n        return false\n      } else if ( !this.fhirId ) {\n        return false\n      } else {\n        return true\n      }\n    }\n  },\n  methods: {\n    async createUpdateRequest() {\n      this.$refs.form.validate()\n      if ( !this.valid ) return\n      this.fhir = {\n        resourceType: this.field,\n        meta: {\n          profile: [ \"http://gofr.org/fhir/StructureDefinition/gofr-facility-update-request\" ]\n        }\n      }\n      try {\n        await this.processChildren( this.field, this.fhir, this.$children )\n      } catch( err ) {\n        this.advancedValid = false\n        console.log(err)\n      }\n      if ( !this.advancedValid ) {\n        this.overlay = false\n        this.loading = false\n        this.$store.commit('setMessage', { type: 'error', text: 'There were errors on the form.' })\n        return\n      }\n      if(!this.fhir.extension) {\n        this.fhir.extension = []\n      }\n      this.fhir.extension.push({\n        url: \"http://gofr.org/fhir/StructureDefinition/request-status\",\n        valueCoding: {\n          system: \"http://gofr.org/fhir/StructureDefinition/request-status-codesystem\",\n          code: \"pending\",\n          display: \"Pending\"\n        }\n      }, {\n        \"url\": \"http://gofr.org/fhir/StructureDefinition/request-affected-resource\",\n        \"valueReference\": {\n          \"reference\": \"Location/\" + this.fhirId\n        }\n      })\n      let url = \"/fhir/\"+this.field\n      let opts = {\n        method: \"POST\",\n        url,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: this.fhir\n      }\n      axios( opts ).then(() => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.searchAction = \"\"\n        // this.$router.go(0)\n      } ).catch((err) => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'This request was not successfully processed'\n        this.$store.state.dialogError = true\n        console.error(err);\n      })\n    },\n    processRequest(newStatus) {\n      let url\n      if(this.$store.state.requestResourceUpdateData.requestType === 'add-request') {\n        url = \"/facilitiesRequests/add\"\n      } else if(this.$store.state.requestResourceUpdateData.requestType === 'update-request') {\n        url = \"/facilitiesRequests/update\"\n      }\n      let opts = {\n        method: \"POST\",\n        url,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: {\n          resource: this.source.data,\n          requestStatus: newStatus,\n          requestUpdatingResource: this.$store.state.requestResourceUpdateData.requestUpdatingResource,\n          profile: this.profile\n        }\n      }\n      axios( opts ).then(() => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.requestResourceUpdateData = {\n          requestType: '',\n          requestUpdatingResource: ''\n        }\n        this.$router.go(0)\n      } ).catch((err) => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'This request was not successfully processed'\n        this.$store.state.dialogError = true\n        console.error(err);\n      })\n    },\n    getLinkField: function(field) {\n      let content = this.$fhirpath.evaluate( this.source.data, field )\n      if ( content ) {\n        return content[0]\n      } else {\n        return false\n      }\n    },\n    getLinkUrl: function(link) {\n      let field\n      if ( link.field ) {\n        field = this.getLinkField(link.field)\n      }\n      if ( field ) {\n        if ( field.includes('/') ) {\n          let ref = field.split('/')\n          field = ref[1]\n        }\n        return link.url.replace(\"FIELD\",field)\n      } else {\n        return link.url\n      }\n    },\n    setLinkText: function() {\n      for ( let idx in this.links ) {\n        let link = this.links[idx]\n        if ( link.text ) {\n          this.linktext[idx] = link.text\n        } else if ( link.field ) {\n          let field = this.getLinkField(link.field)\n          if ( field ) {\n            this.$fhirutils.lookup(field).then( display => {\n              this.$set( this.linktext, idx, display )\n            } )\n          }\n        }\n      }\n    },\n    processChildren: async function( parent, obj, children ) {\n      for( let child of children ) {\n        let fullField = parent\n\n        let next = obj\n\n        if ( child.field && !child.fieldType /* ignore arrays */ ) {\n          let field\n          if ( child.sliceName ) {\n            if ( child.field.startsWith(\"value[x]\") ) {\n              field = child.field.substring(9)\n              fullField += \".\" + field\n            } else {\n              field = child.field.replace(\":\"+child.sliceName, \"\")\n              fullField += \".\" + field\n            }\n          } else {\n            field = child.field\n            fullField += \".\"+field\n          }\n          if ( child.max !== \"1\" || child.baseMax !== \"1\" ) {\n            if ( !obj.hasOwnProperty(field) ) {\n              next[field] = []\n            }\n          } else {\n            next[field] = {}\n          }\n          if ( child.hasOwnProperty(\"value\") ) {\n            if ( Array.isArray( next[field] ) ) {\n              next[field].push( child.value )\n            } else {\n              next[field] = child.value\n            }\n            next = next[field]\n          } else {\n            if ( Array.isArray( next[field] ) ) {\n              let sub = {}\n              if ( child.profile ) {\n                sub.url = child.profile\n              } else if ( field === \"extension\" && child.sliceName ) {\n                sub.url = child.sliceName\n              }\n              next[field].push( sub )\n              next = sub\n            } else {\n              next = next[field]\n            }\n          }\n        }\n        if ( child.$children ) {\n          try {\n            await this.processChildren( fullField, next, child.$children )\n          } catch( err ) {\n            this.advancedValid = false\n            console.log(err)\n          }\n        }\n        if ( child.constraints ) {\n          child.errors = []\n          try {\n            this.advancedValid = this.advancedValid && await this.$fhirutils.checkConstraints( child.constraints,\n              this.constraints, next, child.errors, this.fhirId )\n          } catch( err ) {\n            this.advancedValid = false\n            child.errors.push(\"An unknown error occurred.\")\n            console.log(err)\n          }\n        }\n\n      }\n\n    },\n    processFHIR: async function() {\n      this.$refs.form.validate()\n      if ( !this.valid ) return\n      this.advancedValid = true\n      this.overlay = true\n      this.loading = true\n\n      this.fhir = {\n        resourceType: this.field,\n        meta: {\n          profile: [ this.profile ]\n        }\n      }\n      try {\n        await this.processChildren( this.field, this.fhir, this.$children )\n      } catch( err ) {\n        this.advancedValid = false\n        console.log(err)\n      }\n      if ( !this.advancedValid ) {\n        this.overlay = false\n        this.loading = false\n        this.$store.commit('setMessage', { type: 'error', text: 'There were errors on the form.' })\n        return\n      }\n      let url = \"/fhir/\"+this.field\n      let opts = {\n        method: \"POST\",\n        url,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n      if ( this.fhirId ) {\n        this.fhir.id = this.fhirId\n        url += \"/\" + this.fhirId\n        opts.method = \"PUT\"\n        opts.url = url\n      }\n      opts.data = this.fhir\n      axios( opts ).then(response => {\n        let data = response.data\n        this.overlay = false\n        this.loading = false\n        if ( this.fhirId ) {\n          this.$router.go(0)\n        } else {\n          this.$router.push({ name:\"ResourceView\", params: {page: this.page, id: data.id } })\n        }\n      } )\n    }\n  },\n  beforeDestroy() {\n    this.$store.state.searchAction = \"\"\n    this.$store.state.requestResourceUpdateData = {\n      requestType: '',\n      requestUpdatingResource: ''\n    }\n  }\n}\n\n\n\n</script>\n"],"sourceRoot":"src/components/ihris"}]}