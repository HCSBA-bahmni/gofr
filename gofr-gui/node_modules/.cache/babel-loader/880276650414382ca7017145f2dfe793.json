{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/Configure.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/Configure.vue","mtime":1619257194369},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Configure.vue"],"names":[],"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","sourcesContent":["<template>\n  <v-container>\n    <v-dialog\n      persistent\n      v-model=\"autoDisableSingleDatasourceDialog\"\n      max-width=\"500px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"error\"\n          dark\n        >\n          <v-toolbar-title>\n            Disabling Single Data Source Limit\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-btn\n            icon\n            dark\n            @click.native=\"autoDisableSingleDatasource('cancel')\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-card-text>\n          Disabling limiting reconciliation to be done against one choosen data source will also disable the single data source limit, click OK to proceed\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"primary\"\n            @click.native=\"autoDisableSingleDatasource('cancel')\"\n          >Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"error\"\n            @click.native=\"autoDisableSingleDatasource('ok')\"\n          >Ok</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      v-model=\"defineSuperuserRole\"\n      width=\"620px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            DHIS2 superuser role that can be an administrator of GOFR\n          </v-toolbar-title>\n        </v-toolbar>\n        <v-card-text>\n          <v-select\n            @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n            label=\"Superuser Role Name\"\n            item-text='displayName'\n            item-value='id'\n            :loading=\"loadingDhis2Roles\"\n            required\n            :items=\"dhis2Roles\"\n            v-model=\"$store.state.config.generalConfig.externalAuth.adminRole\"\n          ></v-select>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"primary\"\n            :disabled='!$store.state.config.generalConfig.externalAuth.adminRole || dhis2Roles.length === 0'\n            @click=\"saveConfiguration('generalConfig', 'authDisabled')\"\n          >\n            <v-icon left>mdi-content-save</v-icon>\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog\n      persistent\n      v-model=\"selectDatasourceDialog\"\n      width=\"800px\"\n    >\n      <v-card>\n        <v-toolbar\n          color=\"primary\"\n          dark\n        >\n          <v-toolbar-title>\n            Select datasource to fix source 2\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-text-field\n            v-model=\"searchDatasource\"\n            append-icon=\"search\"\n            label=\"Search\"\n            single-line\n            hide-details\n          ></v-text-field>\n          <v-btn\n            icon\n            dark\n            @click.native=\"closeDatasourceDialog\"\n          >\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-toolbar>\n        This lists only those datasets that have been shared to all users\n        <v-card-text>\n          <v-data-table\n            :headers=\"dataSourceHeaders\"\n            :items=\"sharedToAllDatasets\"\n            dark\n            class=\"elevation-1\"\n            :search=\"searchDatasource\"\n          >\n            <v-progress-linear\n              slot=\"progress\"\n              color=\"blue\"\n              indeterminate\n            ></v-progress-linear>\n            <template\n              v-slot:item=\"{ item }\"\n            >\n              <tr>\n                <v-radio-group\n                  v-model='fixSource2To'\n                  style=\"height: 5px\"\n                >\n                  <td>\n                    <v-radio\n                      :value=\"item._id\"\n                      color=\"blue\"\n                    ></v-radio>\n                  </td>\n                </v-radio-group>\n                <td>{{item.name}}</td>\n                <td>{{item.userID.userName}}</td>\n                <td>\n                  {{item.createdTime}}\n                </td>\n              </tr>\n            </template>\n          </v-data-table>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn\n            color=\"error\"\n            @click=\"closeDatasourceDialog\"\n          >\n            <v-icon left>mdi-cancel</v-icon>\n            Cancel\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"primary\"\n            :disabled='!fixSource2To || sharedToAllDatasets.length === 0'\n            @click=\"savefixSource2To\"\n          >\n            <v-icon left>mdi-content-save</v-icon>\n            Save\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-card>\n      <v-card-title primary-title>\n        <b>System Configurations</b>\n      </v-card-title>\n      <v-card-text>\n        <v-card>\n          <v-card-title primary-title>\n            User Configurations\n          </v-card-title>\n          <v-card-text>\n            <v-layout column>\n              <v-flex>\n                <v-switch\n                  @change=\"saveConfiguration('userConfig', 'useCSVHeader')\"\n                  color=\"primary\"\n                  label=\"Apply user defined headers when reconciling\"\n                  v-model=\"$store.state.config.userConfig.reconciliation.useCSVHeader\"\n                >\n                </v-switch>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n        <v-divider></v-divider>\n        <v-divider></v-divider>\n        <v-divider></v-divider>\n        <v-card v-if='$store.state.auth.role == \"Admin\"'>\n          <v-card-title>\n            Admin Configurations\n          </v-card-title>\n          <v-card-text>\n            <v-layout column>\n              <v-flex>\n                <v-switch\n                  @change=\"saveConfiguration('generalConfig', 'parentConstraint')\"\n                  color=\"primary\"\n                  label=\"Perform match based on parent constraint\"\n                  v-model=\"$store.state.config.generalConfig.reconciliation.parentConstraint.enabled\"\n                >\n                </v-switch>\n                <v-card\n                  v-if=\"!$store.state.config.generalConfig.reconciliation.parentConstraint.enabled\"\n                  color=\"grey lighten-3\"\n                  style=\"margin-left:100px\"\n                >\n                  <v-checkbox\n                    @change=\"saveConfiguration('generalConfig', 'parConstrIdAuto')\"\n                    color=\"primary\"\n                    label=\"Automatch By ID\"\n                    v-model=\"$store.state.config.generalConfig.reconciliation.parentConstraint.idAutoMatch\"\n                    disabled\n                  ></v-checkbox>\n                  <v-checkbox\n                    @change=\"saveConfiguration('generalConfig', 'parConstrNameAuto')\"\n                    color=\"primary\"\n                    label=\"Automatch By Name (when parents differ)\"\n                    v-model=\"$store.state.config.generalConfig.reconciliation.parentConstraint.nameAutoMatch\"\n                  ></v-checkbox>\n                </v-card>\n                <v-card>\n                  <v-card-title primary-title>\n                    Choose ways datasets can be added\n                  </v-card-title>\n                  <v-card-text>\n                    <v-checkbox\n                      label=\"CSV Upload\"\n                      v-model=\"$store.state.config.generalConfig.datasetsAdditionWays\"\n                      value=\"CSV Upload\"\n                      @change=\"checkDatasetsAdditionWays('upload')\"\n                    ></v-checkbox>\n                    <v-checkbox\n                      label=\"Remote Servers Sync\"\n                      v-model=\"$store.state.config.generalConfig.datasetsAdditionWays\"\n                      value=\"Remote Servers Sync\"\n                      @change=\"checkDatasetsAdditionWays('remote')\"\n                    ></v-checkbox>\n                  </v-card-text>\n                </v-card>\n                <v-switch\n                  @change=\"saveConfiguration('generalConfig', 'allowShareToAllForNonAdmin')\"\n                  color=\"primary\"\n                  label=\"Allow non admin users to share datasets will all users\"\n                  v-model=\"$store.state.config.generalConfig.allowShareToAllForNonAdmin\"\n                >\n                </v-switch>\n                <v-tooltip top>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-switch\n                      @change=\"displayDatasourceDialog\"\n                      color=\"primary\"\n                      label=\"Select a data source to serve as Source 2 for all reconciliation\"\n                      v-model=\"$store.state.config.generalConfig.reconciliation.fixSource2\"\n                      v-on=\"on\"\n                    />\n                  </template>\n                  <span>This will limit users to perform reconciliations against the chosen data source</span>\n                </v-tooltip>\n                <template v-slot:activator=\"{ on }\">\n                  <template v-if='$store.state.config.generalConfig.reconciliation.fixSource2'>\n                    Source2 Limited To: <v-chip>{{fixedSource2To}}</v-chip>\n                      <v-tooltip top>\n                        <v-btn\n                          fab\n                          dark\n                          color=\"primary\"\n                          small\n                          @click=\"displayDatasourceDialog\"\n                          v-on=\"on\"\n                        >\n                          <v-icon dark>mdi-format-list-bulleted</v-icon>\n                        </v-btn>\n                        <span>Change dataset</span>\n                      </v-tooltip>\n                  </template>\n                </template>\n                <v-switch\n                  @change=\"singleDatasource\"\n                  color=\"primary\"\n                  label=\"Single data source per user\"\n                  v-model=\"$store.state.config.generalConfig.reconciliation.singleDataSource\"\n                >\n                </v-switch>\n                <v-switch\n                  v-if=\"$store.state.dhis.user.orgId\"\n                  @change=\"saveConfiguration('generalConfig', 'singlePair')\"\n                  color=\"primary\"\n                  label=\"Single data source pair per org unit\"\n                  v-model=\"$store.state.config.generalConfig.reconciliation.singlePair\"\n                >\n                </v-switch>\n              </v-flex>\n              <v-flex>\n                <v-card>\n                  <v-card-title primary-title>\n                    GOFR Authentication\n                  </v-card-title>\n                  <v-card-text>\n                    <v-switch\n                      @change=\"disableGOFRAuth\"\n                      color=\"primary\"\n                      label=\"Disable Authentication\"\n                      v-model=\"$store.state.config.generalConfig.authDisabled\"\n                    >\n                    </v-switch>\n                    <v-card\n                      v-if=\"$store.state.config.generalConfig.authDisabled\"\n                      color=\"grey lighten-3\"\n                      style=\"margin-left:100px\"\n                    >\n                      External Authentication Method\n                      <v-radio-group\n                        v-model=\"$store.state.config.generalConfig.authMethod\"\n                        @change=\"saveConfiguration('generalConfig', 'useDhis2Auth')\"\n                      >\n                        <v-radio\n                          label=\"dhis2\"\n                          value=\"dhis2\"\n                          disabled\n                        ></v-radio>\n                        <v-radio\n                          label=\"iHRIS\"\n                          value=\"iHRIS\"\n                          disabled\n                        ></v-radio>\n                      </v-radio-group>\n                      <v-select\n                        style=\"width: 350px\"\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        label=\"Superuser Role Name\"\n                        item-text='displayName'\n                        item-value='id'\n                        :loading=\"loadingDhis2Roles\"\n                        required\n                        :items=\"dhis2Roles\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.adminRole\"\n                      ></v-select>\n                      <v-checkbox\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        v-if=\"$store.state.config.generalConfig.authMethod\"\n                        label=\"Pull org units\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                      >\n                      </v-checkbox>\n                      <v-checkbox\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Share orgs with other users\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.shareOrgUnits\"\n                      >\n                      </v-checkbox>\n                      <v-checkbox\n                        @change=\"saveConfiguration('generalConfig', 'externalAuth')\"\n                        v-if=\"\n                      $store.state.config.generalConfig.externalAuth.shareOrgUnits &&\n                      $store.state.config.generalConfig.externalAuth.pullOrgUnits\n                    \"\n                        label=\"Limit orgs sharing by user orgid\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.shareByOrgId\"\n                      >\n                      </v-checkbox>\n                      <v-text-field\n                        style=\"width: 350px\"\n                        outline\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Dataset Name\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.datasetName\"\n                        @blur=\"ensureNameUnique\"\n                        @input=\"ensureNameUnique\"\n                        :error-messages=\"datasetNameErrors\"\n                        required\n                      ></v-text-field>\n                      <v-text-field\n                        style=\"width: 350px\"\n                        outline\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Username\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.userName\"\n                        required\n                      ></v-text-field>\n                      <v-text-field\n                        style=\"width: 350px\"\n                        outline\n                        v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                        label=\"Password\"\n                        v-model=\"$store.state.config.generalConfig.externalAuth.password\"\n                        type=\"password\"\n                        required\n                      ></v-text-field>\n                      <v-flex xs3>\n                        <v-btn\n                          color=\"primary\"\n                          :disabled='datasetNameErrors.length > 0 || !$store.state.config.generalConfig.externalAuth.datasetName'\n                          small\n                          round\n                          v-if=\"$store.state.config.generalConfig.externalAuth.pullOrgUnits\"\n                          @click=\"pullOrgUnits\"\n                        >start pulling</v-btn>\n                      </v-flex>\n                    </v-card>\n                  </v-card-text>\n                </v-card>\n              </v-flex>\n              <v-divider></v-divider>\n              <v-flex>\n                <v-card>\n                  <v-card-title primary-title>\n                    Self Registration\n                  </v-card-title>\n                  <v-card-text>\n                    <v-switch\n                      @change=\"saveConfiguration('generalConfig', 'selfRegistration')\"\n                      color=\"primary\"\n                      label=\"Enable self registration\"\n                      v-model=\"$store.state.config.generalConfig.selfRegistration.enabled\"\n                    >\n                    </v-switch>\n                    <v-layout\n                      row\n                      wrap\n                      v-if='$store.state.config.generalConfig.selfRegistration.enabled'\n                    >\n                      <v-spacer></v-spacer>\n                      <v-flex xs3>\n                        <v-treeview :items=\"signupFields\"></v-treeview>\n                      </v-flex>\n                      <v-spacer></v-spacer>\n                      <v-flex xs8>\n                        <v-btn\n                          small\n                          round\n                          @click='moreFields = !moreFields'\n                          color=\"primary\"\n                        >Add More Fields</v-btn>\n                        <v-text-field\n                          v-if='moreFields'\n                          v-model=\"fieldLabel\"\n                          label=\"Field Label\"\n                        ></v-text-field>\n                        <v-text-field\n                          v-if='moreFields'\n                          v-model=\"fieldName\"\n                          label=\"Unique Name\"\n                        ></v-text-field>\n                        <v-select\n                          v-if='moreFields'\n                          :items=\"requiredText\"\n                          v-model=\"required\"\n                          label=\"Required\"\n                        ></v-select>\n                        <v-btn\n                          color=\"info\"\n                          small\n                          v-if='moreFields'\n                          @click='addMoreFields'\n                        >\n                          <v-icon left>mdi-content-save</v-icon> Save\n                        </v-btn>\n                        <v-btn\n                          color=\"error\"\n                          small\n                          v-if='moreFields'\n                          @click='moreFields = false'\n                        >\n                          <v-icon left>mdi-close</v-icon> Cancel\n                        </v-btn>\n                      </v-flex>\n                    </v-layout>\n                    <v-switch\n                      @change=\"saveConfiguration('generalConfig', 'selfRegistration')\"\n                      color=\"primary\"\n                      label=\"Requires Admin Approval Of Self Registration\"\n                      v-model=\"$store.state.config.generalConfig.selfRegistration.requiresApproval\"\n                    >\n                    </v-switch>\n                  </v-card-text>\n                </v-card>\n              </v-flex>\n              <v-divider></v-divider>\n              <v-flex xs1>\n                <v-card>\n                  <v-card-title primary-title>\n                    Cron Jobs\n                  </v-card-title>\n                  <v-card-text>\n                    Autosync Below Remote Datasets\n                    <v-text-field\n                      style=\"width: 350px\"\n                      outline\n                      @blur=\"saveConfiguration('generalConfig', 'datasetsAutosyncTime')\"\n                      name=\"cron_time\"\n                      label=\"Cron Time\"\n                      v-model=\"$store.state.config.generalConfig.datasetsAutosyncTime\"\n                    ></v-text-field>\n                    <v-data-table\n                      :headers=\"cronDataSourceHeaders\"\n                      :items=\"remoteDatasets\"\n                      hide-default-footer\n                      class=\"elevation-1\"\n                      pagination.sync=\"pagination\"\n                    >\n                      <template\n                        v-slot:item=\"{ item }\"\n                      >\n                        <tr>\n                          <td>{{item.name}}</td>\n                          <td>{{item.userID.userName}}</td>\n                          <td>\n                            {{item.createdTime}}\n                          </td>\n                          <td>\n                            <v-switch\n                              @change=\"controlDatasetsCronjobs(item)\"\n                              color=\"primary\"\n                              v-model=\"datasetsAutosyncState[item._id]\"\n                            >\n                            </v-switch>\n                          </td>\n                        </tr>\n                      </template>\n                    </v-data-table>\n                  </v-card-text>\n                </v-card>\n              </v-flex>\n              <v-flex xs1>\n                <v-card color=\"grey lighten-3\">\n                  <v-card-text>\n                    SMTP Configuration For Email Notifications\n                  </v-card-text>\n                  <v-card-actions>\n                    <v-layout column>\n                      <v-flex>\n                        <v-text-field\n                          label=\"SMTP Host\"\n                          v-model=\"smtp.host\"\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"SMTP Port\"\n                          v-model=\"smtp.port\"\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"SMTP Username\"\n                          v-model=\"smtp.username\"\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          type=\"password\"\n                          label=\"SMTP Password\"\n                          v-model=\"smtp.password\"\n                          autocomplete='new-password'\n                          filled\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-switch\n                          color=\"primary\"\n                          label=\"SMTP Secured\"\n                          v-model=\"smtp.secured\"\n                        >\n                        </v-switch>\n                      </v-flex>\n                      <v-flex>\n                        <v-layout\n                          row\n                          wrap\n                        >\n                          <v-spacer></v-spacer>\n                          <v-flex xs1>\n                            <v-btn\n                              color=\"primary\"\n                              @click=\"saveSMTP\"\n                            >\n                              <v-icon>mdi-content-save</v-icon>Save\n                            </v-btn>\n                          </v-flex>\n                        </v-layout>\n                      </v-flex>\n                    </v-layout>\n                  </v-card-actions>\n                </v-card>\n              </v-flex>\n              <v-flex xs1>\n                <v-switch\n                  @change=\"saveConfiguration('generalConfig', 'recoProgressNotification')\"\n                  color=\"primary\"\n                  label=\"Enable Endpoint Notification when reconciliation is done\"\n                  v-model=\"$store.state.config.generalConfig.recoProgressNotification.enabled\"\n                >\n                </v-switch>\n                <v-card\n                  color=\"grey lighten-3\"\n                  v-if='$store.state.config.generalConfig.recoProgressNotification.enabled'\n                  style=\"margin-left:100px\"\n                >\n                  <v-card-text>\n                    End point to send notification when reconciliation is done\n                  </v-card-text>\n                  <v-card-actions>\n                    <v-layout column>\n                      <v-flex>\n                        <v-text-field\n                          label=\"End point URL\"\n                          v-model=\"notification_endpoint\"\n                          box\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"End point Username\"\n                          v-model=\"notification_username\"\n                          box\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-text-field\n                          label=\"End point Password\"\n                          v-model=\"notification_password\"\n                          box\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex>\n                        <v-layout\n                          row\n                          wrap\n                        >\n                          <v-spacer></v-spacer>\n                          <v-flex xs1>\n                            <v-btn\n                              color=\"primary\"\n                              @click=\"recoProgressNotificationChanged\"\n                            >\n                              <v-icon>mdi-content-save</v-icon>Save\n                            </v-btn>\n                          </v-flex>\n                        </v-layout>\n                      </v-flex>\n                    </v-layout>\n                  </v-card-actions>\n                </v-card>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n      </v-card-text>\n    </v-card>\n    <appRemoteSync\n      syncType=\"dhisSync\"\n      :serverName=\"$store.state.config.generalConfig.externalAuth.datasetName\"\n      :userID=\"$store.state.auth.userID\"\n      :sourceOwner=\"$store.state.auth.userID\"\n      mode=\"full\"\n    >\n    </appRemoteSync>\n  </v-container>\n</template>\n<script>\nimport axios from 'axios'\nimport RemoteSync from './DataSources/RemoteSync'\nimport { eventBus } from '@/main'\nimport VueCookies from 'vue-cookies'\nimport { required } from 'vuelidate/lib/validators'\nimport { generalMixin } from '@/mixins/generalMixin'\nexport default {\n  mixins: [generalMixin],\n  validations: {\n    facility: {\n      required: required\n    },\n    code: {\n      required: required\n    },\n    uploadName: {\n      required: required\n    }\n  },\n  data () {\n    return {\n      smtp: {\n        host: '',\n        port: '',\n        username: '',\n        password: '',\n        secured: true\n      },\n      autoDisableSingleDatasourceDialog: false,\n      selectDatasourceDialog: false,\n      fixSource2To: '',\n      searchDatasource: '',\n      dataSourceHeaders: [\n        { sortable: false },\n        { text: 'Source Name', align: 'left', value: 'name' },\n        { text: 'Owner', value: 'owner', sortable: false },\n        { text: 'Created Time', value: 'createdTime' }\n      ],\n      cronDataSourceHeaders: [\n        { text: 'Source Name', align: 'left', value: 'name' },\n        { text: 'Owner', value: 'owner', sortable: false },\n        { text: 'Created Time', value: 'createdTime' },\n        { text: 'Enabled', value: 'enabled' }\n      ],\n      datasetsAutosyncState: {},\n      useCSVHeader: false,\n      moreFields: false,\n      fieldLabel: '',\n      fieldName: '',\n      required: 'No',\n      requiredText: ['Yes', 'No'],\n      signupFields: [],\n      notification_endpoint: '',\n      notification_username: '',\n      notification_password: '',\n      dhis2Roles: [],\n      loadingDhis2Roles: false,\n      datasetNameErrors: [],\n      defineSuperuserRole: false\n    }\n  },\n  methods: {\n    controlDatasetsCronjobs (dataset) {\n      let formData = new FormData()\n      formData.append('id', dataset._id)\n      formData.append('enabled', this.datasetsAutosyncState[dataset._id])\n      axios.post('/updateDatasetAutosync', formData)\n    },\n    checkDatasetsAdditionWays (way) {\n      if (this.$store.state.config.generalConfig.datasetsAdditionWays.length === 0) {\n        this.$store.state.errorTitle = 'Cant disable both ways'\n        this.$store.state.errorDescription = 'There must be atleast one way of adding a dataset'\n        this.$store.state.dialogError = true\n        let additionWay\n        if (way === 'remote') {\n          additionWay = 'Remote Servers Sync'\n        } else if (way === 'upload') {\n          additionWay = 'CSV Upload'\n        }\n        this.$store.state.config.generalConfig.datasetsAdditionWays.push(additionWay)\n      } else {\n        this.saveConfiguration('generalConfig', 'datasetsAdditionWays')\n      }\n    },\n    autoDisableSingleDatasource (confirmation) {\n      if (confirmation === 'ok') {\n        this.$store.state.config.generalConfig.reconciliation.singleDataSource = false\n        this.saveConfiguration('generalConfig', 'fixSource2')\n        this.saveConfiguration('generalConfig', 'singleDataSource')\n      } else if (confirmation === 'cancel') {\n        this.$store.state.config.generalConfig.reconciliation.fixSource2 = true\n      }\n      this.autoDisableSingleDatasourceDialog = false\n    },\n    singleDatasource () {\n      if (\n        this.$store.state.config.generalConfig.reconciliation.singleDataSource\n      ) {\n        if (\n          !this.$store.state.config.generalConfig.reconciliation.fixSource2To ||\n          !this.$store.state.config.generalConfig.reconciliation.fixSource2\n        ) {\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorColor = 'error'\n          this.$store.state.errorDescription = 'This feature can only be enabled if there is a defined datasource to serve as Source 2 for all reconciliation'\n          setTimeout(() => {\n            this.$store.state.config.generalConfig.reconciliation.singleDataSource = false\n          })\n        } else {\n          this.saveConfiguration('generalConfig', 'singleDataSource')\n        }\n      } else {\n        this.saveConfiguration('generalConfig', 'singleDataSource')\n      }\n    },\n    displayDatasourceDialog () {\n      if (\n        this.$store.state.config.generalConfig.reconciliation.fixSource2 ===\n        true\n      ) {\n        this.fixSource2To = this.$store.state.config.generalConfig.reconciliation.fixSource2To\n        this.selectDatasourceDialog = true\n        this.saveConfiguration('generalConfig', 'fixSource2')\n      } else {\n        if (this.$store.state.config.generalConfig.reconciliation.singleDataSource) {\n          this.autoDisableSingleDatasourceDialog = true\n        } else {\n          this.saveConfiguration('generalConfig', 'fixSource2')\n        }\n      }\n    },\n    closeDatasourceDialog () {\n      this.selectDatasourceDialog = false\n      if (!this.$store.state.config.generalConfig.reconciliation.fixSource2To) {\n        this.$store.state.config.generalConfig.reconciliation.fixSource2 = false\n        this.saveConfiguration('generalConfig', 'fixSource2')\n      }\n    },\n    savefixSource2To () {\n      this.$store.state.config.generalConfig.reconciliation.fixSource2To = this.fixSource2To\n      this.saveConfiguration('generalConfig', 'fixSource2To')\n      this.selectDatasourceDialog = false\n    },\n    disableGOFRAuth () {\n      if (!this.$store.state.config.generalConfig.authDisabled) {\n        this.saveConfiguration('generalConfig', 'authDisabled')\n      } else if (this.$store.state.config.generalConfig.authDisabled) {\n        let isSet = this.setDHIS2Credentials()\n        if (!isSet) {\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorColor = 'error'\n          this.$store.state.errorDescription = 'App doesnt appear to be running inside DHIS2, cant disable authentication'\n          setTimeout(() => {\n            this.$store.state.config.generalConfig.authDisabled = false\n          })\n          return\n        }\n        this.loadingDhis2Roles = true\n        this.getDHIS2Roles(roles => {\n          this.loadingDhis2Roles = false\n          this.dhis2Roles = [...roles.data.userRoles]\n        })\n        this.defineSuperuserRole = true\n      }\n    },\n    recoProgressNotificationChanged () {\n      if (!this.$store.state.config.generalConfig.hasOwnProperty('recoProgressNotification')) {\n        this.$store.state.config.generalConfig.recoProgressNotification = {}\n      }\n      this.$store.state.config.generalConfig.recoProgressNotification.url = this.notification_endpoint\n      this.$store.state.config.generalConfig.recoProgressNotification.username = this.notification_username\n      this.$store.state.config.generalConfig.recoProgressNotification.password = this.notification_password\n      this.saveConfiguration('generalConfig')\n    },\n    saveSMTP () {\n      let formData = new FormData()\n      this.$store.state.progressTitle = 'Saving SMTP'\n      this.$store.state.dynamicProgress = true\n      formData.append('host', this.smtp.host)\n      formData.append('port', this.smtp.port)\n      formData.append('username', this.smtp.username)\n      formData.append('password', this.smtp.password)\n      formData.append('secured', this.smtp.secured)\n      axios.post('/saveSMTP', formData, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(() => {\n        this.$store.state.dynamicProgress = false\n        this.$store.state.dialogError = true\n        this.$store.state.errorColor = 'primary'\n        this.$store.state.errorTitle = 'Info'\n        this.$store.state.errorDescription = 'SMTP saved successfully'\n      }).catch((err) => {\n        console.log(err)\n        this.$store.state.dynamicProgress = false\n        this.$store.state.dialogError = true\n        this.$store.state.errorColor = 'error'\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'SMTP failed to be saved'\n      })\n    },\n    addMoreFields () {\n      this.$store.state.progressTitle = 'Saving field'\n      this.$store.state.dynamicProgress = true\n      let exist = this.signupFields[0].children.find(child => {\n        return child.id === this.fieldName\n      })\n      if (!exist) {\n        let formData = new FormData()\n        let required\n        if (this.required === 'Yes') {\n          required = true\n        } else {\n          required = false\n        }\n        formData.append('fieldName', this.fieldName)\n        formData.append('fieldLabel', this.fieldLabel)\n        formData.append('fieldRequired', required)\n        formData.append('form', 'signup')\n        axios\n          .post('/addFormField', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          })\n          .then(() => {\n            this.$store.state.dynamicProgress = false\n            this.$store.state.dialogError = true\n            this.$store.state.errorTitle = 'Info'\n            this.$store.state.errorDescription = 'Field added successfully'\n\n            this.$store.state.signupFields[this.fieldName] = {\n              type: 'String',\n              display: this.fieldLabel\n            }\n            this.$store.state.customSignupFields[this.fieldName] = {\n              type: 'String',\n              display: this.fieldLabel\n            }\n            VueCookies.set(\n              'signupFields',\n              this.$store.state.signupFields,\n              'infinity'\n            )\n            VueCookies.set(\n              'customSignupFields',\n              this.$store.state.customSignupFields,\n              'infinity'\n            )\n            this.signupFields[0].children.push({\n              id: this.fieldName,\n              name: this.fieldLabel\n            })\n            this.fieldName = ''\n            this.fieldLabel = ''\n            this.required = 'No'\n          })\n      } else {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = 'Field name must be unique'\n      }\n    },\n    pullOrgUnits () {\n      this.saveConfiguration('generalConfig', 'externalAuth')\n      let formData = new FormData()\n      formData.append('host', this.$store.state.dhis.host)\n      formData.append('sourceType', 'DHIS2')\n      formData.append('source', 'syncServer')\n      formData.append(\n        'shareToAll',\n        this.$store.state.config.generalConfig.externalAuth.shareOrgUnits\n      )\n      formData.append(\n        'limitByUserLocation',\n        this.$store.state.config.generalConfig.externalAuth.shareByOrgId\n      )\n      formData.append(\n        'username',\n        this.$store.state.config.generalConfig.externalAuth.userName\n      )\n      formData.append(\n        'password',\n        this.$store.state.config.generalConfig.externalAuth.password\n      )\n      formData.append(\n        'name',\n        this.$store.state.config.generalConfig.externalAuth.datasetName\n      )\n      formData.append('userID', this.$store.state.auth.userID)\n\n      axios\n        .post('/addDataSource', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        .then(() => {\n          eventBus.$emit('runRemoteSync')\n        })\n    },\n    getDHIS2Roles (callback) {\n      let auth = this.$store.state.dhis.dev.auth\n      if (auth.username === '') {\n        auth = ''\n      }\n      axios\n        .get(this.$store.state.dhis.host + 'api/userRoles', { auth })\n        .then(roles => {\n          callback(roles)\n        })\n    },\n    ensureNameUnique () {\n      this.datasetNameErrors = []\n      if (\n        this.$store.state.config.generalConfig.externalAuth.datasetName === ''\n      ) {\n        return this.datasetNameErrors.push('Dataset name is required')\n      }\n      for (let dtSrc of this.$store.state.dataSources) {\n        if (dtSrc.name === this.uploadName) {\n          this.datasetNameErrors.push('This Name Exists')\n          return false\n        }\n      }\n    }\n  },\n  created () {\n    axios.get('/getSMTP').then((response) => {\n      if (response && response.data) {\n        this.smtp.host = response.data.host\n        this.smtp.port = response.data.port\n        this.smtp.username = response.data.username\n        this.smtp.password = response.data.password\n        this.smtp.secured = response.data.secured\n      }\n    }).catch((err) => {\n      console.log(err)\n      this.$store.state.dialogError = true\n      this.$store.state.errorColor = 'error'\n      this.$store.state.errorTitle = 'Error'\n      this.$store.state.errorDescription = 'An error occured while getting SMTP config'\n    })\n    if (\n      this.$store.state.config.generalConfig.authDisabled &&\n      this.$store.state.config.generalConfig.authMethod === 'dhis2'\n    ) {\n      this.loadingDhis2Roles = true\n      this.getDHIS2Roles(roles => {\n        this.loadingDhis2Roles = false\n        this.dhis2Roles = [...roles.data.userRoles]\n      })\n    }\n    this.signupFields.push({\n      id: 'signupFields',\n      name: 'Self Registration Fields',\n      children: []\n    })\n    for (let field in this.$store.state.signupFields) {\n      this.signupFields[0].children.push({\n        id: field,\n        name: field\n      })\n    }\n    if (\n      this.$store.state.config.generalConfig.hasOwnProperty(\n        'recoProgressNotification'\n      )\n    ) {\n      this.notification_endpoint = this.$store.state.config.generalConfig.recoProgressNotification.url\n      this.notification_username = this.$store.state.config.generalConfig.recoProgressNotification.username\n      this.notification_password = this.$store.state.config.generalConfig.recoProgressNotification.password\n    }\n\n    for (let sources of this.$store.state.dataSources) {\n      if (sources.source === 'syncServer') {\n        if (sources.enableAutosync) {\n          this.datasetsAutosyncState[sources._id] = true\n        } else {\n          this.datasetsAutosyncState[sources._id] = false\n        }\n      }\n    }\n  },\n  computed: {\n    fixedSource2To () {\n      let dtSrc = ''\n      for (let source of this.$store.state.dataSources) {\n        if (\n          source._id ===\n          this.$store.state.config.generalConfig.reconciliation.fixSource2To\n        ) {\n          dtSrc = source\n        }\n      }\n      return dtSrc.name\n    },\n    sharedToAllDatasets () {\n      let servers = []\n      for (let sources of this.$store.state.dataSources) {\n        if (sources.shareToAll.activated) {\n          servers.push(sources)\n        } else {\n          servers.push(sources)\n        }\n      }\n      return servers\n    },\n    remoteDatasets () {\n      let servers = []\n      for (let sources of this.$store.state.dataSources) {\n        if (sources.source === 'syncServer') {\n          servers.push(sources)\n        }\n      }\n      return servers\n    }\n  },\n  beforeCreate () {\n    if (!this.$store.state.config.generalConfig.hasOwnProperty('authMethod')) {\n      this.$set(this.$store.state.config.generalConfig, 'authMethod', 'dhis2')\n    }\n    if (\n      !this.$store.state.config.generalConfig.hasOwnProperty('externalAuth')\n    ) {\n      let externalAuth = {\n        pullOrgUnits: true,\n        shareOrgUnits: false,\n        shareByOrgId: false,\n        datasetName: '',\n        adminRole: ''\n      }\n      this.$set(\n        this.$store.state.config.generalConfig,\n        'externalAuth',\n        externalAuth\n      )\n    }\n  },\n  components: {\n    appRemoteSync: RemoteSync\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}