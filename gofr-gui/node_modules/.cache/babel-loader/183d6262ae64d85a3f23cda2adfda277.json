{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/fhir/fhir-extension.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/fhir/fhir-extension.vue","mtime":1619771041652},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiZmhpci1leHRlbnNpb24iLAogIHByb3BzOiBbImZpZWxkIiwgInNsaWNlTmFtZSIsICJtaW4iLCAibWF4IiwgImJhc2UtbWluIiwgImJhc2UtbWF4IiwgInByb2ZpbGUiLCAic2xvdFByb3BzIiwgInBhdGgiLCAiZWRpdCIsICJjb25zdHJhaW50cyJdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb3VyY2U6IHsKICAgICAgICBwYXRoOiAiIiwKICAgICAgICBkYXRhOiBbXQogICAgICB9LAogICAgICBlcnJvcnM6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2V0dXBEYXRhKCk7CiAgfSwKICB3YXRjaDogewogICAgc2xvdFByb3BzOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7CiAgICAgICAgLy9jb25zb2xlLmxvZygiV0FUQ0ggRVhURU5TSU9OIix0aGlzLnBhdGgsdGhpcy5zbG90UHJvcHMpCiAgICAgICAgdGhpcy5zZXR1cERhdGEoKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2V0dXBEYXRhOiBmdW5jdGlvbiBzZXR1cERhdGEoKSB7CiAgICAgIGlmICh0aGlzLnNsb3RQcm9wcyAmJiB0aGlzLnNsb3RQcm9wcy5zb3VyY2UpIHsKICAgICAgICB0aGlzLnNvdXJjZSA9IHsKICAgICAgICAgIHBhdGg6IHRoaXMuc2xvdFByb3BzLnNvdXJjZS5wYXRoICsgIi4iICsgdGhpcy5maWVsZCwKICAgICAgICAgIGRhdGE6IHt9CiAgICAgICAgfTsKCiAgICAgICAgaWYgKHRoaXMuc2xvdFByb3BzLnNvdXJjZS5mcm9tQXJyYXkpIHsKICAgICAgICAgIHRoaXMuc291cmNlLmRhdGEgPSB0aGlzLnNsb3RQcm9wcy5zb3VyY2UuZGF0YTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIHVybDsKCiAgICAgICAgICBpZiAodGhpcy5wcm9maWxlKSB7CiAgICAgICAgICAgIHVybCA9IHRoaXMucHJvZmlsZTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHVybCA9IHRoaXMuc2xpY2VOYW1lOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBleHByZXNzaW9uID0gdGhpcy5maWVsZC5yZXBsYWNlKC8oW146XSspOiguKykvLCAiJDEud2hlcmUodXJsPSciICsgdXJsICsgIicpIik7CiAgICAgICAgICB0aGlzLnNvdXJjZS5kYXRhID0gdGhpcy4kZmhpcnBhdGguZXZhbHVhdGUodGhpcy5zbG90UHJvcHMuc291cmNlLmRhdGEsIGV4cHJlc3Npb24pOwogICAgICAgIH0gLy9jb25zb2xlLmxvZyh0aGlzLnNvdXJjZSkKCiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["fhir-extension.vue"],"names":[],"mappings":";;;;;;;;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,aAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AAAA,QAAA,IAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,SAAA;AACA,GAXA;AAYA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,OADA,qBACA;AACA;AACA,aAAA,SAAA;AACA,OAJA;AAKA,MAAA,IAAA,EAAA;AALA;AADA,GAZA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,SAAA,IAAA,KAAA,SAAA,CAAA,MAAA,EAAA;AACA,aAAA,MAAA,GAAA;AAAA,UAAA,IAAA,EAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,GAAA,GAAA,GAAA,KAAA,KAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;;AACA,YAAA,KAAA,SAAA,CAAA,MAAA,CAAA,SAAA,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA;AACA,SAFA,MAEA;AACA,cAAA,GAAA;;AACA,cAAA,KAAA,OAAA,EAAA;AACA,YAAA,GAAA,GAAA,KAAA,OAAA;AACA,WAFA,MAEA;AACA,YAAA,GAAA,GAAA,KAAA,SAAA;AACA;;AACA,cAAA,UAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,cAAA,EAAA,mBAAA,GAAA,GAAA,IAAA,CAAA;AACA,eAAA,MAAA,CAAA,IAAA,GAAA,KAAA,SAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,EAAA,UAAA,CAAA;AACA,SAbA,CAcA;;AACA;AACA;AAlBA;AArBA,CAAA","sourcesContent":["<template>\n  <div>\n    <slot :source=\"source\"></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"fhir-extension\",\n  props: [\"field\",\"sliceName\",\"min\",\"max\",\"base-min\",\"base-max\",\"profile\",\"slotProps\",\"path\", \"edit\",\"constraints\"],\n  data: function() {\n    return {\n      source: { path: \"\", data: [] },\n      errors: []\n    }\n  },\n  created: function() {\n    this.setupData()\n  },\n  watch: {\n    slotProps: {\n      handler() {\n        //console.log(\"WATCH EXTENSION\",this.path,this.slotProps)\n        this.setupData()\n      },\n      deep: true\n    }\n  },\n  methods: {\n    setupData: function() {\n      if ( this.slotProps && this.slotProps.source ) {\n        this.source = { path: this.slotProps.source.path+\".\"+this.field, data: {} }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n        } else {\n          let url\n          if ( this.profile ) {\n            url = this.profile\n          } else {\n            url = this.sliceName\n          }\n          let expression = this.field.replace(/([^:]+):(.+)/, \"$1.where(url='\"+url+\"')\")\n          this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, expression )\n        }\n        //console.log(this.source)\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/fhir"}]}