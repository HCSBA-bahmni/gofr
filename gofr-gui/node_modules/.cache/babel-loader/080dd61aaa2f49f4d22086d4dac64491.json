{"remainingRequest":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/facility-recon-gui/src/components/fhir/fhir-reference.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/facility-recon-gui/src/components/fhir/fhir-reference.vue","mtime":1619258093079},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["fhir-reference.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <ihris-element :edit=\"edit\" :loading=\"loading\">\n    <template #form>\n      <v-menu \n        v-if=\"displayType == 'tree'\"\n        ref=\"menu\"\n        v-model=\"menu\"\n        :close-on-content-click=\"false\"\n        transition=\"scale-transition\"\n        offset-y\n        min-width=\"290px\"\n        max-height=\"500px\"\n        >\n        <template v-slot:activator=\"{ on }\">\n          <v-text-field\n            v-model=\"displayValue\"\n            :label=\"display\"\n            readonly\n            v-on=\"on\"\n            outlined\n            hide-details=\"auto\"\n            :rules=\"rules\"\n            :error-messages=\"errors\"\n            :loading=\"loading\"\n            dense>\n            <template #label>{{display}} <span v-if=\"required\" class=\"red--text font-weight-bold\">*</span></template>\n          </v-text-field>\n        </template>\n        <v-card v-if=\"!((disabled) || (preset && $route.name === 'resource_add'))\">\n          <v-treeview\n            :active.sync=\"active\"\n            :items=\"items\"\n            :load-children=\"fetchChildren\"\n            :open.sync=\"open\"\n            item-disabled=\"locked\"\n            activatable\n            :multiple-active=\"false\"\n            selection-type=\"independent\"\n            :loading=\"loading\"\n            ></v-treeview>\n        </v-card>\n      </v-menu>\n      <v-autocomplete\n        v-else\n        v-model=\"select\"\n        :loading=\"loading\"\n        :items=\"items\"\n        :search-input.sync=\"search\"\n        cache-items\n        flat\n        hide-no-data\n        hide-details\n        :label=\"display\"\n        outlined\n        dense\n        placeholder=\"Start typing for selection\"\n        :rules=\"rules\"\n        :disabled=\"(disabled) || (preset && $route.name === 'resource_add')\"\n        :error-messages=\"errors\"\n        @change=\"errors = []\"\n      >\n        <template #label>{{display}} <span v-if=\"required\" class=\"red--text font-weight-bold\">*</span></template>\n      </v-autocomplete>\n    </template>\n    <template #header>\n      {{display}}\n    </template>\n    <template #value>\n      {{displayValue}}\n    </template>\n  </ihris-element>\n</template>\n\n<script>\nimport IhrisElement from \"../ihris/ihris-element.vue\"\n\nconst querystring = require('querystring')\nconst fhirurl = \"http://hl7.org/fhir/StructureDefinition/\"\nexport default {\n  name: \"fhir-reference\",\n  props: [\"field\",\"label\",\"sliceName\",\"targetProfile\",\"targetResource\",\"min\",\"max\",\"base-min\",\"base-max\",\n    \"slotProps\",\"path\",\"sub-fields\",\"edit\",\"readOnlyIfSet\",\"constraints\", \"displayType\", \"initialValue\", \"overrideValue\"],\n  components: {\n    IhrisElement\n  },\n  data: function() {\n    return {\n      source: { path: \"\", data: {} },\n      value: { reference: \"\" },\n      qField: \"valueReference\",\n      loading: false,\n      search: \"\",\n      menu: false,\n      items: [],\n      select: \"\",\n      resource: \"\",\n      awaitingSearch: false,\n      displayValue: \"\",\n      preset: false,\n      disabled: false,\n      errors: [],\n      lockWatch: false,\n      active: [],\n      open: [],\n      treeLookup: {},\n      allAllowed: true\n    }\n  },\n  created: function() {\n    this.setupData()\n  },\n  watch: {\n    slotProps: {\n      handler() {\n        //console.log(\"WATCH REFERENCE\",this.path,this.slotProps)\n        if ( !this.lockWatch ) {\n          this.setupData()\n        }\n      },\n      deep: true\n    },\n    search: function (val) {\n      if ( !this.awaitingSearch) {\n        setTimeout( () => {\n          val && val.length > 1 && this.querySelections( this.search )\n          this.awaitingSearch = false\n        }, 500 )\n      }\n      this.awaitingSearch = true\n    },\n    select: function(val) {\n      this.value.reference = val\n      this.getDisplay()\n    },\n    active: function() {\n      if ( this.active.length ) {\n        this.select = this.active[0]\n        this.displayValue = this.treeLookup[ this.select ]\n      } else {\n        this.select = undefined\n        this.displayValue = \"\"\n      }\n      this.menu = false\n    }\n  },\n  methods: {\n    setupData: function() {\n      if ( this.targetProfile && this.targetResource ) {\n        if ( this.targetProfile.replace( fhirurl, \"\" ) === this.targetResource ) {\n          this.allAllowed = true\n        } else {\n          this.allAllowed = false\n        }\n        this.resource = this.targetResource\n      }\n      if ( this.displayType === \"tree\" ) {\n        this.setupTreeItems()\n      }\n      if ( this.slotProps && this.slotProps.source ) {\n        this.source = { path: this.slotProps.source.path+\".\"+this.field, data: {} }\n        if ( this.slotProps.source.fromArray ) {\n          this.source.data = this.slotProps.source.data\n        } else {\n          let expression = this.$fhirutils.pathFieldExpression( this.field )\n          let results = this.$fhirpath.evaluate( this.slotProps.source.data, expression )\n          this.source.data = results[0]\n        }\n        if( this.source.data ) {\n          this.preset = true\n          this.select = this.source.data.reference\n          this.lockWatch = true\n        }\n      }\n      this.disabled = this.readOnlyIfSet && this.preset\n    },\n    setupTreeItems: function() {\n      let treetop = this.initialValue\n      if ( this.overrideValue ) {\n        treetop = this.overrideValue\n      }\n      this.loading = true\n      let params = {}\n      if ( treetop ) {\n        params = { \"partof\": treetop }\n      } else {\n        params = { \"partof:missing\": true }\n      }\n      params._count = 500\n      let url = \"/fhir/\"+this.resource+\"?\"+querystring.stringify( params )\n      this.items = []\n      this.addItems( url, this.items )\n\n    },\n    checkChildren: function(item) {\n      let params = { \"partof\": item.id, \"_summary\": \"count\" }\n      let url = \"/fhir/\"+this.resource+\"?\"+querystring.stringify( params )\n      return new Promise( resolve => {\n        fetch( url ).then( response => {\n          if ( response.ok ) {\n            response.json().then( data => {\n              if ( data.total && data.total > 0 ) {\n                item.children = []\n              }\n              resolve()\n            } ).catch( err => {\n              console.log(\"failed to check children for\",url,err)\n              resolve()\n            } )\n          } else {\n            console.log(\"failed to check children for\",url,response.status)\n            resolve()\n          }\n        } ).catch( err => {\n          console.log(\"failed to check children for\",url,err)\n          resolve()\n        } )\n      } )\n    },\n    addItems: function(url, items) {\n      fetch( url ).then( response => {\n        if ( response.ok ) {\n          response.json().then( async data => {\n            if ( data.entry && data.entry.length > 0 ) {\n              for( let entry of data.entry ) {\n                let locked = this.allAllowed ? false : !entry.resource.meta.profile.includes( this.targetProfile )\n                let item = { \n                  id: entry.resource.resourceType+\"/\"+entry.resource.id,\n                  name: entry.resource.name,\n                  locked: locked\n                }\n                await this.checkChildren( item )\n                this.treeLookup[ item.id ] = item.name\n                items.push( item )\n              }\n            }\n            if ( data.link ) {\n              let next = data.link.find( link => link.relation === \"next\" )\n              if ( next ) {\n                this.addItems( next.url, items )\n              } else {\n                this.loading = false\n              }\n            } else {\n              this.loading = false\n            }\n          } ).catch( err => {\n            console.log(\"Failed to add items for\",url,err)\n            this.loading = false\n          } )\n        } else {\n          console.log(\"Failed to add items for\",url,response.status)\n          this.loading = false\n        }\n      } ).catch( err => {\n        console.log(\"Failed to add items for\",url,err)\n        this.loading = false\n      } )\n    },\n    fetchChildren: function(item) {\n      let params = {}\n      params = { \"partof\": item.id, _count: 500 }\n      let url = \"/fhir/\"+this.resource+\"?\"+querystring.stringify( params )\n      this.loading = true\n      this.addItems( url, item.children )\n      return new Promise( resolve => {\n        let count = 0\n        const checkLoading = () => {\n          if ( !this.loading || count++ > 100) {\n            resolve()\n          } else {\n            setTimeout( checkLoading, 200 )\n          }\n        }\n        checkLoading()\n      } )\n    },\n    querySelections: function( val ) {\n      this.loading = true\n      let params = { \"name:contains\": val }\n      if ( !this.targetProfile.endsWith( this.resource ) ) {\n        params._profile = this.targetProfile\n      }\n      let url = \"/fhir/\"+this.resource+\"?\"+querystring.stringify( params )\n      fetch( url ).then( response => {\n        if ( response.ok ) {\n          response.json().then( async (data) => {\n            this.items = []\n            if ( data.entry && data.entry.length ) {\n              for( let entry of data.entry ) {\n                let ref = entry.resource.resourceType+\"/\"+entry.resource.id\n                let item = { value: ref }\n                item.text = await this.$fhirutils.resourceLookup( ref )\n                this.items.push( item )\n              }\n            }\n            this.loading = false\n          } )\n        } else {\n          console.log(\"Failed to retrieve\",this.resource)\n          this.loading = false\n        }\n      } )\n    },\n    getDisplay: function() {\n      if ( (!this.edit || this.preset) && this.value && this.value.reference ) {\n        this.loading = true\n        this.$fhirutils.resourceLookup( this.value.reference ).then( display => {\n          this.displayValue = display\n          if ( this.displayType !== \"tree\" ) {\n            this.items.push( {text: display, value: this.value.reference} )\n          }\n          this.loading = false\n        } )\n      }\n    }\n  },\n  computed: {\n    index: function() {\n      if ( this.slotProps ) return this.slotProps.input\n      else return undefined\n    },\n    display: function() {\n      if ( this.slotProps && this.slotProps.input) return this.slotProps.input.label\n      else return this.label\n    },\n    required: function() {\n      return (this.index || 0) < this.min\n    },\n    rules: function() {\n      if ( this.required ) {\n        return [ v => !!v || this.display+\" is required\" ]\n      } else {\n        return []\n      }\n    }\n  }\n\n}\n</script>\n"],"sourceRoot":"src/components/fhir"}]}