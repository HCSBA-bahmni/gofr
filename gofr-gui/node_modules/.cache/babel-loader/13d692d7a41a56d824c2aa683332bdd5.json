{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/ihris/ihris-codesystem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/ihris/ihris-codesystem.vue","mtime":1621492225390},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-codesystem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container class=\"my-3\">\n\n    <slot :source=\"source\"></slot>\n    <v-overlay :value=\"overlay\">\n      <v-progress-circular\n        size=\"50\"\n        color=\"primary\"\n        indeterminate\n        ></v-progress-circular>\n    </v-overlay>\n\n    <v-navigation-drawer\n      app\n      right\n      permanent\n      clipped\n      class=\"primary darken-1 white--text\"\n      style=\"z-index: 3;\"\n      >\n      <v-list class=\"white--text\">\n        <v-list-item>\n          <v-btn v-if=\"!edit\" dark class=\"secondary\" @click=\"$emit('set-edit', !edit)\">\n          <v-icon light>mdi-pencil</v-icon>\n          <span>Edit</span>\n          </v-btn>\n          <v-btn v-else dark class=\"secondary\" @click=\"fhirId ? $router.go(0) : $router.go(-1)\">\n          <v-icon light>mdi-pencil-off</v-icon>\n          <span>Cancel</span>\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn dark class=\"success darken-1\" @click=\"processFHIR()\" v-if=\"edit\">\n          <v-icon light>mdi-content-save</v-icon>\n          <span>Save</span>\n          </v-btn>\n        </v-list-item>\n        <v-divider color=\"white\"></v-divider>\n        <v-subheader class=\"white--text\"><h2>Sections</h2></v-subheader>\n        <v-list-item v-for=\"section in sectionMenu\" :href=\"'#section-'+section.name\" :key=\"section.name\">\n          <v-list-item-content class=\"white--text\" v-if=\"!edit || !section.secondary\">\n            <v-list-item-title class=\"text-uppercase\"><h4>{{ section.title }}</h4></v-list-item-title>\n            <v-list-item-subtitle class=\"white--text\">{{ section.desc }}</v-list-item-subtitle>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n\n    </v-navigation-drawer>\n  </v-container>\n\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: \"ihris-codesystem\",\n  props: [\"title\",\"field\",\"fhir-id\",\"page\",\"profile\",\"section-menu\",\"edit\" ],\n  data: function() {\n    return {\n      fhir: {},\n      source: { data: {}, path: \"\" },\n      loading: false,\n      overlay: false,\n      isEdit: false\n    }\n  },\n  created: function() {\n    if ( this.fhirId ) {\n      this.loading = true\n      //console.log(\"getting\",this.field,this.fhirId)\n      let codeSystemId = this.profile.substring( this.profile.lastIndexOf(\"/\")+1 )\n      axios.get( \"/fhir/\"+this.field+\"/\"+codeSystemId ).then(response => {\n        let data = response.data\n        let types = {}\n        if ( data.property ) {\n          for ( let prop of data.property ) {\n            types[prop.code] = \"value\"+prop.type.charAt(0).toUpperCase() + prop.type.slice(1)\n          }\n        }\n        let formatted = data.concept.find( concept => concept.code === this.fhirId )\n        //this.$store.commit('setCurrentResource', data)\n        /*\n      let formatted = { code: this.fhirId }\n      try {\n        formatted.display = data.parameter.find( param => param.name === \"display\" ).valueString\n      } catch (err) { //do nothing\n      }\n      try {\n        formatted.definition = data.parameter.find( param => param.name === \"definition\" ).valueString\n      } catch (err) { //do nothing\n      }\n      try {\n        let properties = data.parameter.filter( param => param.name === \"property\" )\n        for( let property of properties ) {\n          try {\n            let code = property.part.find( part => part.name === \"code\" ).valueCode\n            let value = property.part.find( part => part.name === \"value\" )\n            for( let key of Object.keys( value ) ) {\n              if ( key === \"name\" ) continue\n              if ( key === \"valueCoding\" ) {\n                formatted[code] = [ value[key] ]\n              } else {\n                formatted[code] = value[key]\n              }\n            }\n          } catch (err) {\n            continue\n          }\n        }\n      } catch (err) { //do nothing\n      }\n          */\n        if ( formatted && formatted.property ) {\n          for( let property of formatted.property ) {\n            formatted[property.code] = property[ types[ property.code ] ]\n          }\n          delete formatted.property\n        }\n\n        this.source = { data: formatted, path: this.field }\n        this.loading = false\n      }).catch(err=> {\n        this.loading = false\n        console.log(this.field,this.fhirId,err)\n      })\n    }\n  },\n  computed: {\n    hasFhirId: function() {\n      if ( this.fhirId == '' ) {\n        console.log(\"blank\")\n        return false\n      } else if ( !this.fhirId ) {\n        console.log(\"fhirid is falsy\")\n        return false\n      } else {\n        console.log(\"fhirid else\")\n        return true\n      }\n    }\n    /*\n    source: function() {\n      return this.$store.state.fhir\n    }\n    */\n  },\n  methods: {\n    processFHIR: function() {\n      this.overlay = true\n      this.loading = true\n      //console.log(this.field)\n      this.fhir = { }\n      //console.log(this)\n      processChildren( this.field, this.fhir, this.$children )\n      let codeSystemId = this.profile.substring( this.profile.lastIndexOf(\"/\")+1 )\n      let url = \"/fhir/\"+this.field+\"/\"+codeSystemId\n      let opts = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/fhir+json\"\n        },\n        redirect: 'manual',\n      }\n      url += \"/\" + this.fhir.code\n      const keep = [ \"code\", \"display\", \"definition\", \"property\" ]\n      for( let key of Object.keys( this.fhir ) ) {\n        if ( !keep.includes( key ) ) {\n          delete this.fhir[key]\n        }\n      }\n      opts.body = JSON.stringify(this.fhir)\n      console.log(\"SAVE\",url,this.fhir)\n      axios.get( url, opts ).then(() => {\n        //console.log(response)\n        //console.log(response.headers)\n        this.overlay = false\n        this.loading = false\n        if ( this.fhirId ) {\n          this.$router.go(0)\n        } else {\n          this.$router.push({ name:\"ResourceView\", params: {page: this.page, id: this.fhir.code } })\n        }\n      } ).catch(err => {\n        console.log(\"FAILED TO SAVE\",url,err)\n      } )\n      //console.log(this.fhir)\n\n      /*\n      console.log(this.$scopedSlots.default())\n      processSlots( this.field, this.$scopedSlots.default() )\n      */\n    }\n  }\n}\n\nconst toCamel = (kebab) => {\n  // replace fhir with value\n  let value = \"value\" + kebab.substring(4)\n  return value.replace( /(-[a-z])/ig, ($1) => {\n    return $1.toUpperCase().replace('-', '')\n  } )\n}\n\nconst processChildren = function( parent, obj, children ) {\n  //console.log(\"called on \"+parent)\n\n  children.forEach( child => {\n\n    let fullField = parent\n\n    let next = obj\n\n    if ( child.field && !child.fieldType /* ignore arrays */ ) {\n      //console.log(\"working on \"+parent+\" . \"+child.field)\n      let field\n      if ( child.sliceName ) {\n        if ( child.field.startsWith(\"value[x]\") ) {\n          field = child.field.substring(9)\n          fullField += \".\" + field\n        } else {\n          field = child.field.replace(\":\"+child.sliceName, \"\")\n          fullField += \".\" + field\n        }\n      } else {\n        field = child.field\n        fullField += \".\"+field\n      }\n      if ( child.max !== \"1\" || child.baseMax !== \"1\" ) {\n        if ( !obj.hasOwnProperty(field) ) {\n          next[field] = []\n        }\n      } else {\n        next[field] = {}\n      }\n      //console.log(fullField)\n        //console.log(child.max, child.baseMax)\n      //console.log(child)\n      /* No arrays for codesystem so replacing this code\n      if ( child.hasOwnProperty(\"value\") ) {\n        //console.log( fullField +\"=\"+ child.value )\n        if ( Array.isArray( next[field] ) ) {\n          next[field].push( child.value )\n        } else {\n          next[field] = child.value\n        }\n        next = next[field]\n      } else {\n        if ( Array.isArray( next[field] ) ) {\n          let sub = {}\n          if ( child.profile ) {\n            sub.url = child.profile\n          } else if ( field === \"extension\" && child.sliceName ) {\n            sub.url = child.sliceName\n          }\n          next[field].push( sub )\n          next = sub\n        } else {\n          next = next[field]\n        }\n      }\n      */\n      if ( child.hasOwnProperty(\"value\") ) {\n        //console.log( fullField +\"=\"+ child.value )\n        if ( child.path.startsWith(\"CodeSystem.property.\") ) {\n          if ( !next.property ) {\n            next.property = []\n          }\n          let prop = { code: field }\n          let type = toCamel( child.$vnode.componentOptions.tag )\n          if ( child.value && ( child.value.hasOwnProperty(\"system\") ? (child.value.code || child.value.value) : true ) ) {\n            prop[type] = child.value\n            next.property.push( prop )\n          }\n        } else {\n          next[field] = child.value\n        }\n      }\n      next = next[field]\n    }\n\n    if ( child.$children ) {\n      processChildren( fullField, next, child.$children )\n    }\n\n  } )\n\n}\n\n\n</script>\n"],"sourceRoot":"src/components/ihris"}]}