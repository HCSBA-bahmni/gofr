{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/DataSources/RemoteSync.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/DataSources/RemoteSync.vue","mtime":1619257194373},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgZXZlbnRCdXMgfSBmcm9tICcuLi8uLi9tYWluJzsKaW1wb3J0IFN5bmNQcm9ncmVzcyBmcm9tICcuL1N5bmNQcm9ncmVzcyc7CnZhciBiYWNrZW5kU2VydmVyID0gcHJvY2Vzcy5lbnYuQkFDS0VORF9TRVJWRVI7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydzeW5jVHlwZScsICdzZXJ2ZXJOYW1lJywgJ3VzZXJJRCcsICdzb3VyY2VPd25lcicsICdtb2RlJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN5bmNQcm9nckluZGV0ZXI6IGZhbHNlLAogICAgICBzeW5jU3RhdHVzOiAnV2FpdGluZyBmb3Igc3luYyBzdGF0dXMnLAogICAgICBzeW5jUGVyY2VudDogbnVsbCwKICAgICAgc3luY1Byb2dyUGVyY2VudDogZmFsc2UsCiAgICAgIHN5bmNQcm9ncmVzc1RpbWVyOiAnJywKICAgICAgc3luY1J1bm5pbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc3luYzogZnVuY3Rpb24gc3luYygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBtb2RlID0gdGhpcy5tb2RlOwoKICAgICAgaWYgKCFtb2RlKSB7CiAgICAgICAgbW9kZSA9ICdmdWxsJzsKICAgICAgfQoKICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIHZhciBjbGllbnRJZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmNsaWVudElkOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ25hbWUnLCB0aGlzLnNlcnZlck5hbWUpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3VzZXJJRCcsIHRoaXMudXNlcklEKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCdzb3VyY2VPd25lcicsIHRoaXMuc291cmNlT3duZXIpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2NsaWVudElkJywgY2xpZW50SWQpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ21vZGUnLCBtb2RlKTsKICAgICAgdGhpcy5zeW5jUnVubmluZyA9IHRydWU7CiAgICAgIHRoaXMuc3luY1Byb2dySW5kZXRlciA9IHRydWU7CiAgICAgIGF4aW9zLnBvc3QoYmFja2VuZFNlcnZlciArICcvJyArIHRoaXMuc3luY1R5cGUgKyAnLycsIGZvcm1EYXRhLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuc3luY1Byb2dyZXNzVGltZXIgPSBzZXRJbnRlcnZhbChfdGhpcy5jaGVja1N5bmNQcm9ncmVzcywgMTAwMCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBfdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nRXJyb3IgPSB0cnVlOwogICAgICAgIF90aGlzLiRzdG9yZS5zdGF0ZS5lcnJvclRpdGxlID0gJ0Vycm9yJzsKICAgICAgICBfdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JEZXNjcmlwdGlvbiA9IGVyci5yZXNwb25zZS5kYXRhLmVycm9yICsgJy4gY3Jvc3MgY2hlY2sgaG9zdCx1c2VyIGFuZCBwYXNzd29yZCc7CiAgICAgICAgY2xlYXJJbnRlcnZhbChfdGhpcy5zeW5jUHJvZ3Jlc3NUaW1lcik7CiAgICAgICAgY29uc29sZS5sb2coZXJyLnJlc3BvbnNlLmRhdGEuZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBjaGVja1N5bmNQcm9ncmVzczogZnVuY3Rpb24gY2hlY2tTeW5jUHJvZ3Jlc3MoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGNsaWVudElkID0gdGhpcy4kc3RvcmUuc3RhdGUuY2xpZW50SWQ7CiAgICAgIHZhciBzeW5jUHJvZ3Jlc3NUeXBlOwoKICAgICAgaWYgKHRoaXMuc3luY1R5cGUgPT09ICdkaGlzU3luYycpIHsKICAgICAgICBzeW5jUHJvZ3Jlc3NUeXBlID0gJ2RoaXNTeW5jUmVxdWVzdCc7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5zeW5jVHlwZSA9PT0gJ2ZoaXJTeW5jJykgewogICAgICAgIHN5bmNQcm9ncmVzc1R5cGUgPSAnZmhpclN5bmNSZXF1ZXN0JzsKICAgICAgfQoKICAgICAgYXhpb3MuZ2V0KGJhY2tlbmRTZXJ2ZXIgKyAnL3Byb2dyZXNzLycgKyBzeW5jUHJvZ3Jlc3NUeXBlICsgJy8nICsgY2xpZW50SWQpLnRoZW4oZnVuY3Rpb24gKHN5bmNQcm9ncmVzcykgewogICAgICAgIGlmIChzeW5jUHJvZ3Jlc3MuZGF0YSA9PT0gbnVsbCB8fCBzeW5jUHJvZ3Jlc3MuZGF0YSA9PT0gdW5kZWZpbmVkIHx8IHN5bmNQcm9ncmVzcy5kYXRhID09PSBmYWxzZSkgewogICAgICAgICAgX3RoaXMyLiRzdG9yZS5zdGF0ZS51cGxvYWRSdW5uaW5nID0gZmFsc2U7CiAgICAgICAgICBfdGhpczIuc3luY1Byb2dySW5kZXRlciA9IGZhbHNlOwogICAgICAgICAgX3RoaXMyLnN5bmNQcm9nclBlcmNlbnQgPSBmYWxzZTsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoX3RoaXMyLnN5bmNQcm9ncmVzc1RpbWVyKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9IGVsc2UgaWYgKHN5bmNQcm9ncmVzcy5kYXRhLmVycm9yICE9PSBudWxsKSB7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLnN0YXRlLnVwbG9hZFJ1bm5pbmcgPSBmYWxzZTsKICAgICAgICAgIF90aGlzMi5zeW5jUHJvZ3JJbmRldGVyID0gZmFsc2U7CiAgICAgICAgICBfdGhpczIuc3luY1Byb2dyUGVyY2VudCA9IGZhbHNlOwogICAgICAgICAgX3RoaXMyLiRzdG9yZS5zdGF0ZS5kaWFsb2dFcnJvciA9IHRydWU7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLnN0YXRlLmVycm9yVGl0bGUgPSAnRXJyb3InOwogICAgICAgICAgX3RoaXMyLiRzdG9yZS5zdGF0ZS5lcnJvckRlc2NyaXB0aW9uID0gc3luY1Byb2dyZXNzLmRhdGEuZXJyb3I7CiAgICAgICAgICBjbGVhckludGVydmFsKF90aGlzMi5zeW5jUHJvZ3Jlc3NUaW1lcik7CiAgICAgICAgICBjb25zb2xlLmxvZyhzeW5jUHJvZ3Jlc3MuZGF0YS5lcnJvcik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSBlbHNlIGlmIChzeW5jUHJvZ3Jlc3MuZGF0YS5zdGF0dXMgPT09IG51bGwpIHsKICAgICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUudXBsb2FkUnVubmluZyA9IGZhbHNlOwogICAgICAgICAgX3RoaXMyLnN5bmNQcm9nckluZGV0ZXIgPSBmYWxzZTsKICAgICAgICAgIF90aGlzMi5zeW5jUHJvZ3JQZXJjZW50ID0gZmFsc2U7CiAgICAgICAgICBjbGVhckludGVydmFsKF90aGlzMi5zeW5jUHJvZ3Jlc3NUaW1lcik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBfdGhpczIuc3luY1N0YXR1cyA9IHN5bmNQcm9ncmVzcy5kYXRhLnN0YXR1czsKCiAgICAgICAgaWYgKHN5bmNQcm9ncmVzcy5kYXRhLnBlcmNlbnQpIHsKICAgICAgICAgIGlmICghX3RoaXMyLnN5bmNQcm9nclBlcmNlbnQpIHsKICAgICAgICAgICAgX3RoaXMyLnN5bmNQcm9nckluZGV0ZXIgPSBmYWxzZTsKICAgICAgICAgICAgX3RoaXMyLnN5bmNQcm9nclBlcmNlbnQgPSB0cnVlOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzMi5zeW5jUGVyY2VudCA9IHN5bmNQcm9ncmVzcy5kYXRhLnBlcmNlbnQ7CiAgICAgICAgfQoKICAgICAgICBpZiAoc3luY1Byb2dyZXNzLmRhdGEuc3RhdHVzID09PSAnRG9uZScpIHsKICAgICAgICAgIF90aGlzMi5zeW5jU3RhdHVzID0gJ1dhaXRpbmcgZm9yIHN5bmMgc3RhdHVzJzsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoX3RoaXMyLnN5bmNQcm9ncmVzc1RpbWVyKTsKICAgICAgICAgIF90aGlzMi5zeW5jUHJvZ3JQZXJjZW50ID0gZmFsc2U7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLnN0YXRlLnVwbG9hZFJ1bm5pbmcgPSBmYWxzZTsKICAgICAgICAgIGV2ZW50QnVzLiRlbWl0KCdnZXREYXRhU291cmNlcycpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUuZGlhbG9nRXJyb3IgPSB0cnVlOwogICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUuZXJyb3JUaXRsZSA9ICdFcnJvcic7CiAgICAgICAgY29uc29sZS5sb2coZXJyLnJlc3BvbnNlLmRhdGEuZXJyb3IgKyAnLiBjcm9zcyBjaGVjayBob3N0LHVzZXIgYW5kIHBhc3N3b3JkJyk7CiAgICAgICAgX3RoaXMyLiRzdG9yZS5zdGF0ZS5lcnJvckRlc2NyaXB0aW9uID0gZXJyLnJlc3BvbnNlLmRhdGEuZXJyb3IgKyAnLiBjcm9zcyBjaGVjayBob3N0LHVzZXIgYW5kIHBhc3N3b3JkJzsKICAgICAgICBjbGVhckludGVydmFsKF90aGlzMi5zeW5jUHJvZ3Jlc3NUaW1lcik7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGV2ZW50QnVzLiRvbigncnVuUmVtb3RlU3luYycsIHRoaXMuc3luYyk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgZXZlbnRCdXMuJG9mZigncnVuUmVtb3RlU3luYycsIHRoaXMuc3luYyk7CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAnYXBwU3luY1Byb2dyZXNzJzogU3luY1Byb2dyZXNzCiAgfQp9Ow=="},{"version":3,"sources":["RemoteSync.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,YAAA;AACA,OAAA,YAAA,MAAA,gBAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,GAAA,CAAA,cAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,yBAFA;AAGA,MAAA,WAAA,EAAA,IAHA;AAIA,MAAA,gBAAA,EAAA,KAJA;AAKA,MAAA,iBAAA,EAAA,EALA;AAMA,MAAA,WAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;;AACA,UAAA,CAAA,IAAA,EAAA;AACA,QAAA,IAAA,GAAA,MAAA;AACA;;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,UAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA,WAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,UAAA,EAAA,QAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,IAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,aAAA,GAAA,GAAA,GAAA,KAAA,QAAA,GAAA,GAAA,EAAA,QAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA;AADA;AADA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,KAAA,CAAA,iBAAA,GAAA,WAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,IAAA,CAAA;AACA,OANA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,UAAA,GAAA,OAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,GAAA,sCAAA;AACA,QAAA,aAAA,CAAA,KAAA,CAAA,iBAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,OAZA;AAaA,KA5BA;AA6BA,IAAA,iBA7BA,+BA6BA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,UAAA,gBAAA;;AACA,UAAA,KAAA,QAAA,KAAA,UAAA,EAAA;AACA,QAAA,gBAAA,GAAA,iBAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,KAAA,UAAA,EAAA;AACA,QAAA,gBAAA,GAAA,iBAAA;AACA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,aAAA,GAAA,YAAA,GAAA,gBAAA,GAAA,GAAA,GAAA,QAAA,EAAA,IAAA,CAAA,UAAA,YAAA,EAAA;AACA,YAAA,YAAA,CAAA,IAAA,KAAA,IAAA,IAAA,YAAA,CAAA,IAAA,KAAA,SAAA,IAAA,YAAA,CAAA,IAAA,KAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,UAAA,aAAA,CAAA,MAAA,CAAA,iBAAA,CAAA;AACA;AACA,SANA,MAMA,IAAA,YAAA,CAAA,IAAA,CAAA,KAAA,KAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,UAAA,GAAA,OAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,YAAA,CAAA,IAAA,CAAA,KAAA;AACA,UAAA,aAAA,CAAA,MAAA,CAAA,iBAAA,CAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,YAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,SAVA,MAUA,IAAA,YAAA,CAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,UAAA,aAAA,CAAA,MAAA,CAAA,iBAAA,CAAA;AACA;AACA;;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,YAAA,CAAA,IAAA,CAAA,MAAA;;AACA,YAAA,YAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,cAAA,CAAA,MAAA,CAAA,gBAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,YAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA;;AACA,UAAA,MAAA,CAAA,WAAA,GAAA,YAAA,CAAA,IAAA,CAAA,OAAA;AACA;;AACA,YAAA,YAAA,CAAA,IAAA,CAAA,MAAA,KAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,UAAA,GAAA,yBAAA;AACA,UAAA,aAAA,CAAA,MAAA,CAAA,iBAAA,CAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,GAAA,KAAA;AACA,UAAA,QAAA,CAAA,KAAA,CAAA,gBAAA;AACA;AACA,OAvCA,EAuCA,KAvCA,CAuCA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,UAAA,GAAA,OAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,GAAA,sCAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,KAAA,GAAA,sCAAA;AACA,QAAA,aAAA,CAAA,MAAA,CAAA,iBAAA,CAAA;AACA,OA7CA;AA8CA;AAnFA,GAZA;AAiGA,EAAA,OAjGA,qBAiGA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,eAAA,EAAA,KAAA,IAAA;AACA,GAnGA;AAoGA,EAAA,aApGA,2BAoGA;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,eAAA,EAAA,KAAA,IAAA;AACA,GAtGA;AAuGA,EAAA,UAAA,EAAA;AACA,uBAAA;AADA;AAvGA,CAAA","sourcesContent":["<template>\n  <v-container>\n    <app-syncProgress\n      :syncProgrIndeter='syncProgrIndeter'\n      :syncStatus='syncStatus'\n      :syncProgrPercent='syncProgrPercent'\n      :syncPercent='syncPercent'\n    >\n    </app-syncProgress>\n  </v-container>\n</template>\n<script>\nimport axios from 'axios'\nimport { eventBus } from '../../main'\nimport SyncProgress from './SyncProgress'\nconst backendServer = process.env.BACKEND_SERVER\nexport default {\n  props: ['syncType', 'serverName', 'userID', 'sourceOwner', 'mode'],\n  data () {\n    return {\n      syncProgrIndeter: false,\n      syncStatus: 'Waiting for sync status',\n      syncPercent: null,\n      syncProgrPercent: false,\n      syncProgressTimer: '',\n      syncRunning: false\n    }\n  },\n  methods: {\n    sync () {\n      let mode = this.mode\n      if (!mode) {\n        mode = 'full'\n      }\n      let formData = new FormData()\n      const clientId = this.$store.state.clientId\n      formData.append('name', this.serverName)\n      formData.append('userID', this.userID)\n      formData.append('sourceOwner', this.sourceOwner)\n      formData.append('clientId', clientId)\n      formData.append('mode', mode)\n      this.syncRunning = true\n      this.syncProgrIndeter = true\n      axios.post(backendServer + '/' + this.syncType + '/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(() => {\n        this.syncProgressTimer = setInterval(this.checkSyncProgress, 1000)\n      }).catch((err) => {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        this.$store.state.errorDescription = err.response.data.error + '. cross check host,user and password'\n        clearInterval(this.syncProgressTimer)\n        console.log(err.response.data.error)\n      })\n    },\n    checkSyncProgress () {\n      const clientId = this.$store.state.clientId\n      let syncProgressType\n      if (this.syncType === 'dhisSync') {\n        syncProgressType = 'dhisSyncRequest'\n      } else if (this.syncType === 'fhirSync') {\n        syncProgressType = 'fhirSyncRequest'\n      }\n      axios.get(backendServer + '/progress/' + syncProgressType + '/' + clientId).then((syncProgress) => {\n        if (syncProgress.data === null || syncProgress.data === undefined || syncProgress.data === false) {\n          this.$store.state.uploadRunning = false\n          this.syncProgrIndeter = false\n          this.syncProgrPercent = false\n          clearInterval(this.syncProgressTimer)\n          return\n        } else if (syncProgress.data.error !== null) {\n          this.$store.state.uploadRunning = false\n          this.syncProgrIndeter = false\n          this.syncProgrPercent = false\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorDescription = syncProgress.data.error\n          clearInterval(this.syncProgressTimer)\n          console.log(syncProgress.data.error)\n          return\n        } else if (syncProgress.data.status === null) {\n          this.$store.state.uploadRunning = false\n          this.syncProgrIndeter = false\n          this.syncProgrPercent = false\n          clearInterval(this.syncProgressTimer)\n          return\n        }\n        this.syncStatus = syncProgress.data.status\n        if (syncProgress.data.percent) {\n          if (!this.syncProgrPercent) {\n            this.syncProgrIndeter = false\n            this.syncProgrPercent = true\n          }\n          this.syncPercent = syncProgress.data.percent\n        }\n        if (syncProgress.data.status === 'Done') {\n          this.syncStatus = 'Waiting for sync status'\n          clearInterval(this.syncProgressTimer)\n          this.syncProgrPercent = false\n          this.$store.state.uploadRunning = false\n          eventBus.$emit('getDataSources')\n        }\n      }).catch((err) => {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        console.log(err.response.data.error + '. cross check host,user and password')\n        this.$store.state.errorDescription = err.response.data.error + '. cross check host,user and password'\n        clearInterval(this.syncProgressTimer)\n      })\n    }\n  },\n  created () {\n    eventBus.$on('runRemoteSync', this.sync)\n  },\n  beforeDestroy () {\n    eventBus.$off('runRemoteSync', this.sync)\n  },\n  components: {\n    'appSyncProgress': SyncProgress\n  }\n}\n</script>\n"],"sourceRoot":"src/components/DataSources"}]}