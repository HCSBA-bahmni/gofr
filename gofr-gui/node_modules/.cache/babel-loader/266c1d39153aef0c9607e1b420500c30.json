{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/App.vue","mtime":1621498979909},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-app-bar\n      color=\"primary\"\n      dark\n      app\n      clipped-left\n      clipped-right\n    >\n      <v-toolbar-title v-text=\"title\"></v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-toolbar-items v-if=\"$store.state.auth.token || $store.state.config.generalConfig.authDisabled\">\n        <v-btn\n          flat\n          :href=\"dhisLink\"\n          v-if='dhisLink'\n        >\n          <img src=\"./assets/dhis2.png\" />\n        </v-btn>\n        <appMenu></appMenu>\n      </v-toolbar-items>\n      <v-spacer></v-spacer>\n      <v-toolbar-items>\n\n      </v-toolbar-items>\n    </v-app-bar>\n    <v-main>\n      <v-dialog\n        v-model=\"$store.state.dynamicProgress\"\n        persistent\n        width=\"300\"\n      >\n        <v-card\n          color=\"primary\"\n          dark\n        >\n          <v-card-text>\n            {{$store.state.progressTitle}}\n            <v-progress-linear\n              indeterminate\n              color=\"white\"\n              class=\"mb-0\"\n            ></v-progress-linear>\n          </v-card-text>\n        </v-card>\n      </v-dialog>\n      <v-dialog\n        persistent\n        v-model=\"$store.state.dialogError\"\n        max-width=\"500px\"\n      >\n        <v-card>\n          <v-toolbar\n            :color=\"$store.state.errorColor\"\n            dark\n          >\n            <v-toolbar-title>\n              {{$store.state.errorTitle}}\n            </v-toolbar-title>\n            <v-spacer></v-spacer>\n            <v-btn\n              icon\n              dark\n              @click.native=\"$store.state.dialogError = false\"\n            >\n              <v-icon>mdi-close</v-icon>\n            </v-btn>\n          </v-toolbar>\n          <v-card-text>\n            {{$store.state.errorDescription}}\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n              color=\"primary\"\n              @click.native=\"closeDialogError\"\n            >Ok</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n      <v-dialog\n        v-model=\"$store.state.initializingApp\"\n        persistent\n        width=\"300\"\n      >\n        <v-card\n          color=\"primary\"\n          dark\n        >\n          <v-card-text>\n            {{ $t('App.initApp') }}\n            <v-progress-linear\n              indeterminate\n              color=\"white\"\n              class=\"mb-0\"\n            ></v-progress-linear>\n          </v-card-text>\n        </v-card>\n      </v-dialog>\n      <v-row>\n        <v-col>\n          <template v-if=\"Object.keys($store.state.activePair.source1).length > 0 && !$store.state.denyAccess\">\n            {{ $t('App.source') }} 1: <b>{{$store.state.activePair.source1.name}}</b>, &nbsp; &nbsp; {{ $t('App.source') }} 2: <b>{{$store.state.activePair.source2.name}}</b>,\n            &nbsp; &nbsp; Recon Status: <v-icon\n              small\n              v-if=\"$store.state.recoStatus === 'in-progress'\"\n            >mdi-lock-open-variant-outline</v-icon>\n            <v-icon\n              small\n              v-else\n            >mdi-lock-outline</v-icon> <b>{{$store.state.recoStatus}}</b>\n          </template>\n        </v-col>\n        <v-col cols=\"2\">\n          <v-select\n            :items=\"locales\"\n            v-model=\"locale\"\n          ></v-select>\n        </v-col>\n      </v-row>\n      <center>\n        <v-alert\n          :style=\"{width: $store.state.alert.width}\"\n          v-model=\"$store.state.alert.show\"\n          :type=\"$store.state.alert.type\"\n          :dismissible=\"$store.state.alert.dismisible\"\n          :transition=\"$store.state.alert.transition\"\n        >\n          {{$store.state.alert.msg}}\n        </v-alert>\n      </center>\n      <v-layout\n        row\n        wrap\n      >\n        <v-flex xs4>\n\n        </v-flex>\n        <v-spacer></v-spacer>\n        <v-flex xs1>\n\n        </v-flex>\n      </v-layout>\n      <router-view :key='$route.path'></router-view>\n    </v-main>\n    <v-footer\n      dark\n      color=\"primary\"\n      :fixed=\"fixed\"\n      app\n    >\n\n    </v-footer>\n  </v-app>\n</template>\n<script>\nimport axios from 'axios'\nimport Menu from '@/components/menu'\nimport { scoresMixin } from './mixins/scoresMixin'\nimport { generalMixin } from './mixins/generalMixin'\nimport { dataSourcePairMixin } from './components/DataSourcesPair/dataSourcePairMixin'\nimport { eventBus } from './main'\nimport { uuid } from 'vue-uuid'\nimport VueCookies from 'vue-cookies'\nimport {\n  tasksVerification\n} from './modules/tasksVerification'\n\nexport default {\n  mixins: [dataSourcePairMixin, scoresMixin, generalMixin],\n  props: ['generalConfig'],\n  data () {\n    return {\n      items: [\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me' },\n        { title: 'Click Me 2' }\n      ],\n      fixed: false,\n      title: this.$t('App.title'),\n      locale: 'en',\n      locales: [\n        { text: 'English', value: 'en' },\n        { text: 'French', value: 'fr' }\n      ],\n      activeDataSourcePair: {},\n      tasksVerification: tasksVerification\n    }\n  },\n  watch: {\n    locale (val) {\n      this.$i18n.locale = val\n    }\n  },\n  methods: {\n    closeDialogError () {\n      this.$store.state.errorColor = 'primary'\n      this.$store.state.dialogError = false\n    },\n    renderInitialPage () {\n      let source1 = this.$store.state.activePair.source1.name\n      let source2 = this.$store.state.activePair.source2.name\n      if (\n        (!source1 || !source2) &&\n        (this.$store.state.dataSources.length > 1 ||\n          this.$store.state.dataSourcePairs.length > 0)\n      ) {\n        this.$router.push({ name: 'DataSourcesPair' })\n        return\n      }\n      if (!source1 || !source2) {\n        this.$router.push({ name: 'AddDataSources' })\n        return\n      }\n      source1 = this.toTitleCase(source1)\n      source2 = this.toTitleCase(source2)\n\n      let sourcesOwner = this.getDatasourceOwner()\n      axios\n        .get(\n          '/uploadAvailable/' +\n          source1 +\n          '/' +\n          source2 +\n          '/' +\n          sourcesOwner.source1Owner +\n          '/' +\n          sourcesOwner.source2Owner\n        )\n        .then(results => {\n          this.$store.state.initializingApp = false\n          if (results.data.dataUploaded) {\n            this.$store.state.recalculateScores = true\n            this.$router.push({ name: 'FacilityReconScores' })\n          } else {\n            this.$router.push({ name: 'AddDataSources' })\n          }\n        })\n        .catch(err => {\n          console.log(err)\n          this.$router.push({ name: 'AddDataSources' })\n        })\n    },\n    getTotalLevels () {\n      let source1 = this.$store.state.activePair.source1.name\n      let source2 = this.$store.state.activePair.source2.name\n      if (!source1 || !source2) {\n        this.$store.state.totalSource1Levels = 5\n        this.$store.state.totalSource2Levels = 5\n        this.$store.state.initializingApp = false\n        this.renderInitialPage()\n        this.$store.state.recoLevel = 2\n        this.getRecoStatus()\n        return\n      }\n      source1 = this.toTitleCase(source1)\n      source2 = this.toTitleCase(source2)\n      let sourcesOwner = JSON.stringify(this.getDatasourceOwner())\n      let sourcesLimitOrgId = JSON.stringify(this.getLimitOrgIdOnActivePair())\n      axios\n        .get('/countLevels/' + source1 + '/' + source2 + '/' + sourcesOwner + '/' + sourcesLimitOrgId)\n        .then(levels => {\n          this.$store.state.levelMapping.source1 = levels.data.levelMapping.levelMapping1\n          this.$store.state.levelMapping.source2 = levels.data.levelMapping.levelMapping2\n          this.$store.state.totalSource1Levels = levels.data.totalSource1Levels\n          this.$store.state.totalSource2Levels = levels.data.totalSource2Levels\n          this.$store.state.recoLevel = 2\n          this.renderInitialPage()\n          this.getRecoStatus()\n        }).catch((err) => {\n          console.log(err)\n          this.$store.state.recoLevel = 2\n          this.renderInitialPage()\n          this.getRecoStatus()\n        })\n    },\n    getRecoStatus () {\n      if (\n        Object.keys(this.$store.state.activePair.source1).length === 0 ||\n        Object.keys(this.$store.state.activePair.source2).length === 0\n      ) {\n        return\n      }\n      let source1 = this.toTitleCase(this.$store.state.activePair.source1.name)\n      let source2 = this.toTitleCase(this.$store.state.activePair.source2.name)\n      let userID = this.$store.state.activePair.userID._id\n      axios\n        .get(\n          '/recoStatus/' +\n          source1 +\n          '/' +\n          source2 +\n          '/' +\n          userID\n        )\n        .then(status => {\n          if (status.data.status) {\n            this.$store.state.recoStatus = status.data.status\n          } else {\n            axios\n              .get(\n                '/markRecoUnDone/' +\n                source1 +\n                '/' +\n                source2 +\n                '/' +\n                userID\n              )\n              .then(status => {\n                if (status.data.status) {\n                  this.$store.state.recoStatus = status.data.status\n                }\n              })\n              .catch(err => {\n                console.log(err.response.data.error)\n              })\n          }\n        })\n        .catch(err => {\n          console.log(err.response.data.error)\n        })\n    },\n    getDataSources () {\n      this.$store.state.loadingServers = true\n      this.$store.state.dataSources = []\n      let userID = this.$store.state.auth.userID\n      let role = this.$store.state.auth.role\n      let orgId = this.$store.state.dhis.user.orgId\n      axios\n        .get('/getDataSources/' + userID + '/' + role + '/' + orgId)\n        .then(response => {\n          this.$store.state.loadingServers = false\n          this.$store.state.dataSources = response.data.servers\n          this.getDataSourcePair()\n        })\n        .catch(err => {\n          this.$store.state.loadingServers = false\n          console.log(JSON.stringify(err))\n        })\n    },\n    getUserConfig () {\n      let userID = this.$store.state.auth.userID\n      axios\n        .get('/getUserConfig/' + userID)\n        .then(config => {\n          if (config.data) {\n            this.$store.state.config.userConfig = { ...this.$store.state.config.userConfig, ...config.data }\n          }\n          this.getGeneralConfig(() => {\n            this.getDataSources()\n          })\n        })\n        .catch(() => {\n          this.getGeneralConfig(() => {\n            this.getDataSources()\n          })\n        })\n    },\n    getDataSourcePair () {\n      this.$store.state.activePair.source1 = {}\n      this.$store.state.activePair.source2 = {}\n      let userID = this.$store.state.auth.userID\n      if (!this.$store.state.initializingApp) {\n        this.$store.state.initializingApp = true\n      }\n      axios\n        .get('/getDataSourcePair/' + userID + '/' + this.$store.state.dhis.user.orgId)\n        .then(response => {\n          this.$store.state.dataSourcePairs = response.data\n          let activeSource = this.getActiveDataSourcePair()\n          if (Object.keys(activeSource).length > 0) {\n            this.$store.state.activePair.source1.id = activeSource.source1._id\n            this.$store.state.activePair.source1.name = activeSource.source1.name\n            this.$store.state.activePair.source1.userID = activeSource.source1.userID\n            this.$store.state.activePair.source2.id = activeSource.source2._id\n            this.$store.state.activePair.source2.name = activeSource.source2.name\n            this.$store.state.activePair.source2.userID = activeSource.source2.userID\n            this.$store.state.activePair._id = activeSource._id\n            this.$store.state.activePair.shared = activeSource.shared\n            this.$store.state.activePair.userID = activeSource.userID\n          }\n          this.autoActivateDatasourcePair((created) => {\n            if (!created) {\n              this.autoCreateDatasourcePair()\n            }\n          })\n          this.getTotalLevels()\n        })\n        .catch(err => {\n          console.log(JSON.stringify(err))\n          this.$store.state.dialogError = true\n          this.$store.state.errorTitle = 'Error'\n          this.$store.state.errorDescription = 'An error occured while getting data source pairs, reload the app to retry'\n          this.getTotalLevels()\n        })\n    },\n    autoCreateDatasourcePair () {\n      if (this.$store.state.config.generalConfig.reconciliation.singleDataSource) {\n        if (Object.keys(this.$store.state.activePair.source1).length > 0) {\n          return false\n        }\n        let fixedSource2To = this.$store.state.config.generalConfig.reconciliation.fixSource2To\n        let source1 = {}\n        let source2 = {}\n        let userID = this.$store.state.auth.userID\n        let orgId = this.$store.state.dhis.user.orgId\n        let datasources = []\n        for (let source of this.$store.state.dataSources) {\n          let sharedToMe = source.shared.users.find((user) => {\n            return user._id === userID\n          })\n          let itsMine = source.owner.id === userID\n          let sharedToAll = source.shareToAll.activated === true\n          let sameOrgId = false\n          if (source.owner.orgId && source.owner.orgId === orgId) {\n            sameOrgId = true\n          }\n          if (!itsMine && !sharedToMe && !sharedToAll && !sameOrgId) {\n            continue\n          }\n          if (source._id === fixedSource2To) {\n            source2 = source\n          } else {\n            source1 = source\n          }\n          datasources.push(source)\n        }\n        if (datasources.length > 2 || Object.keys(source1).length === 0 || Object.keys(source2).length === 0) {\n          return false\n        }\n        this.createDatasourcePair(source1, source2)\n      }\n    },\n    autoActivateDatasourcePair (callback) {\n      if (Object.keys(this.$store.state.activePair.source1).length > 0) {\n        let val = false\n        return callback(val)\n      }\n      if (this.$store.state.dataSourcePairs.length > 1 || this.$store.state.dataSourcePairs.length === 0) {\n        let val = false\n        return callback(val)\n      }\n      if (this.$store.state.dhis.user.orgId && this.$store.state.config.generalConfig.reconciliation.singlePair) {\n        this.$store.state.dataSourcePairs.status = 'active'\n        this.activeDataSourcePair = this.$store.state.dataSourcePairs[0]\n        let val = true\n        callback(val)\n        this.activatePair()\n      } else {\n        let val = false\n        callback(val)\n      }\n    }\n  },\n  computed: {\n    dhisLink () {\n      if (this.$store.state.dhis.user.orgId) {\n        return window.location.protocol + '//' + window.location.hostname\n      } else {\n        return false\n      }\n    }\n  },\n  components: {\n    'appMenu': Menu\n  },\n  created () {\n    this.$router.push({ name: 'AddDataSources' })\n    this.$store.state.config.generalConfig = this.generalConfig\n    if (VueCookies.get('token') && VueCookies.get('userID')) {\n      this.$store.state.auth.token = VueCookies.get('token')\n      this.$store.state.auth.userID = VueCookies.get('userID')\n      this.$store.state.auth.username = VueCookies.get('username')\n      this.$store.state.auth.role = VueCookies.get('role')\n      this.$store.state.auth.tasks = JSON.parse(VueCookies.get('tasks'))\n      this.$store.state.signupFields = VueCookies.get('signupFields')\n      this.$store.state.customSignupFields = VueCookies.get('customSignupFields')\n      if (!this.$store.state.config.generalConfig.authDisabled) {\n        axios.get('/isTokenActive/').then(() => {\n          // will come here only if the token is active\n          this.$store.state.clientId = uuid.v4()\n          this.$store.state.initializingApp = true\n          this.$store.state.denyAccess = false\n          this.getUserConfig()\n        })\n      } else {\n        this.$router.push('login')\n      }\n    }\n\n    eventBus.$on('refreshApp', () => {\n      this.getDataSources()\n    })\n    eventBus.$on('recalculateScores', () => {\n      this.$store.state.recalculateScores = true\n      this.$router.push({ name: 'FacilityReconScores' })\n    })\n    eventBus.$on('getDataSources', () => {\n      this.getDataSources()\n    })\n    eventBus.$on('getConfig', () => {\n      this.getUserConfig()\n    })\n    eventBus.$on('getGeneralConfig', () => {\n      this.getGeneralConfig()\n    })\n    eventBus.$on('getDataSourcePair', () => {\n      this.getDataSourcePair()\n    })\n  },\n  name: 'App'\n}\n</script>"],"sourceRoot":"src"}]}