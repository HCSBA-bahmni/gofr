{"remainingRequest":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/facility-recon-gui/src/components/disabledAuth/DHIS2Auth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/facility-recon-gui/src/components/disabledAuth/DHIS2Auth.vue","mtime":1619257194373},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IGV2ZW50QnVzIH0gZnJvbSAnQC9tYWluJzsKaW1wb3J0IHsgZ2VuZXJhbE1peGluIH0gZnJvbSAnQC9taXhpbnMvZ2VuZXJhbE1peGluJzsKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW2dlbmVyYWxNaXhpbl0sCiAgbWV0aG9kczogewogICAgZ2V0REhJUzJVc2VyRGF0YTogZnVuY3Rpb24gZ2V0REhJUzJVc2VyRGF0YShjYWxsYmFjaykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGF1dGggPSB0aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLmRldi5hdXRoOwoKICAgICAgaWYgKGF1dGgudXNlcm5hbWUgPT09ICcnKSB7CiAgICAgICAgYXV0aCA9ICcnOwogICAgICB9CgogICAgICBheGlvcy5nZXQodGhpcy4kc3RvcmUuc3RhdGUuZGhpcy5ob3N0ICsgJ2FwaS9tZScsIHsKICAgICAgICBhdXRoOiBhdXRoCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHVzZXJEYXRhKSB7CiAgICAgICAgdmFyIG9yZ1VuaXRzSURzID0gdXNlckRhdGEuZGF0YS5vcmdhbmlzYXRpb25Vbml0czsKCiAgICAgICAgaWYgKG9yZ1VuaXRzSURzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIF90aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLnVzZXIub3JnSWQgPSBvcmdVbml0c0lEcy5zaGlmdCgpLmlkOwogICAgICAgICAgYXhpb3MuZ2V0KF90aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLmhvc3QgKyAnYXBpL29yZ2FuaXNhdGlvblVuaXRzLycgKyBfdGhpcy4kc3RvcmUuc3RhdGUuZGhpcy51c2VyLm9yZ0lkLCB7CiAgICAgICAgICAgIGF1dGg6IGF1dGgKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKG9yZ1VuaXRzKSB7CiAgICAgICAgICAgIF90aGlzLiRzdG9yZS5zdGF0ZS5kaGlzLnVzZXIub3JnTmFtZSA9IG9yZ1VuaXRzLmRhdGEuZGlzcGxheU5hbWU7CiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayh1c2VyRGF0YSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBfdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nRXJyb3IgPSB0cnVlOwogICAgICAgIF90aGlzLiRzdG9yZS5zdGF0ZS5lcnJvclRpdGxlID0gJ0Vycm9yJzsKCiAgICAgICAgaWYgKGVyci5yZXNwb25zZSAmJiBlcnIucmVzcG9uc2UuZGF0YSAmJiBlcnIucmVzcG9uc2UuZGF0YS5odHRwU3RhdHVzQ29kZSA9PT0gNDAxKSB7CiAgICAgICAgICBfdGhpcy4kc3RvcmUuc3RhdGUuZXJyb3JEZXNjcmlwdGlvbiA9ICdVbmF1dGhvcml6ZWQsIGVuc3VyZSB0aGF0IHlvdXIgREhJUzIgbG9naW4gaXMgYWN0aXZlJzsKCiAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICBuYW1lOiAnTG9nb3V0JwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLiRzdG9yZS5zdGF0ZS5lcnJvckRlc2NyaXB0aW9uID0gJ1VuYXV0aG9yaXplZCwgcGxlYXNlIHJlbG9hZCB0aGUgYXBwJzsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHRoaXMuc2V0REhJUzJDcmVkZW50aWFscygpOwogICAgdGhpcy5nZXRSb2xlcygpOwogICAgdGhpcy5nZXRESElTMlVzZXJEYXRhKGZ1bmN0aW9uIChkaGlzMlVzZXIpIHsKICAgICAgdmFyIGlzQWRtaW4gPSBkaGlzMlVzZXIuZGF0YS51c2VyQ3JlZGVudGlhbHMudXNlclJvbGVzLmZpbmQoZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgICByZXR1cm4gcm9sZS5pZCA9PT0gX3RoaXMyLiRzdG9yZS5zdGF0ZS5jb25maWcuZ2VuZXJhbENvbmZpZy5leHRlcm5hbEF1dGguYWRtaW5Sb2xlOwogICAgICB9KTsKICAgICAgdmFyIHJvbGVJRCwgcm9sZVRleHQ7CgogICAgICBpZiAoaXNBZG1pbikgewogICAgICAgIHZhciByb2xlID0gX3RoaXMyLnJvbGVzLmZpbmQoZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgICAgIHJldHVybiByb2xlLnRleHQgPT09ICdBZG1pbic7CiAgICAgICAgfSk7CgogICAgICAgIHJvbGVJRCA9IHJvbGUudmFsdWU7CiAgICAgICAgcm9sZVRleHQgPSByb2xlLnRleHQ7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIF9yb2xlID0gX3RoaXMyLnJvbGVzLmZpbmQoZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgICAgIHJldHVybiByb2xlLnRleHQgPT09ICdEYXRhIE1hbmFnZXInOwogICAgICAgIH0pOwoKICAgICAgICByb2xlSUQgPSBfcm9sZS52YWx1ZTsKICAgICAgICByb2xlVGV4dCA9IF9yb2xlLnRleHQ7CiAgICAgIH0KCiAgICAgIGF4aW9zLmdldCgnL2dldFVzZXIvJyArIGRoaXMyVXNlci5kYXRhLnVzZXJDcmVkZW50aWFscy51c2VybmFtZSkudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgICAgIGlmICh1c2VyLmRhdGEudXNlcklEKSB7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLnN0YXRlLmF1dGgudXNlcm5hbWUgPSBkaGlzMlVzZXIuZGF0YS51c2VyQ3JlZGVudGlhbHMudXNlcm5hbWU7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLnN0YXRlLmF1dGgudXNlcklEID0gdXNlci5kYXRhLnVzZXJJRDsKICAgICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUuYXV0aC5yb2xlID0gcm9sZVRleHQ7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLnN0YXRlLmluaXRpYWxpemluZ0FwcCA9IHRydWU7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLnN0YXRlLmRlbnlBY2Nlc3MgPSBmYWxzZTsKICAgICAgICAgIGV2ZW50QnVzLiRlbWl0KCdnZXRDb25maWcnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpcnN0TmFtZScsIGRoaXMyVXNlci5kYXRhLmZpcnN0TmFtZSk7CiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ290aGVyTmFtZScsICcnKTsKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgncGFzc3dvcmQnLCBkaGlzMlVzZXIuZGF0YS5zdXJuYW1lKTsKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgndXNlck5hbWUnLCBkaGlzMlVzZXIuZGF0YS51c2VyQ3JlZGVudGlhbHMudXNlcm5hbWUpOwogICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdzdXJuYW1lJywgZGhpczJVc2VyLmRhdGEuc3VybmFtZSk7CiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3JvbGUnLCByb2xlSUQpOwogICAgICAgICAgYXhpb3MucG9zdCgnL2FkZFVzZXInLCBmb3JtRGF0YSwgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgICAgICB9CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgYXhpb3MuZ2V0KCcvZ2V0VXNlci8nICsgZGhpczJVc2VyLmRhdGEudXNlckNyZWRlbnRpYWxzLnVzZXJuYW1lKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgICAgaWYgKHVzZXIuZGF0YS51c2VySUQpIHsKICAgICAgICAgICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUuYXV0aC51c2VybmFtZSA9IGRoaXMyVXNlci5kYXRhLnVzZXJDcmVkZW50aWFscy51c2VybmFtZTsKICAgICAgICAgICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUuYXV0aC51c2VySUQgPSB1c2VyLmRhdGEudXNlcklEOwogICAgICAgICAgICAgICAgX3RoaXMyLiRzdG9yZS5zdGF0ZS5hdXRoLnJvbGUgPSB1c2VyLmRhdGEucm9sZTsKICAgICAgICAgICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUuaW5pdGlhbGl6aW5nQXBwID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzMi4kc3RvcmUuc3RhdGUuZGVueUFjY2VzcyA9IGZhbHNlOwogICAgICAgICAgICAgICAgZXZlbnRCdXMuJGVtaXQoJ2dldENvbmZpZycpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["DHIS2Auth.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container grid-list-xs>\n\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { eventBus } from '@/main'\nimport { generalMixin } from '@/mixins/generalMixin'\nexport default {\n  mixins: [generalMixin],\n  methods: {\n    getDHIS2UserData (callback) {\n      let auth = this.$store.state.dhis.dev.auth\n      if (auth.username === '') {\n        auth = ''\n      }\n      axios.get(this.$store.state.dhis.host + 'api/me', { auth }).then((userData) => {\n        var orgUnitsIDs = userData.data.organisationUnits\n        if (orgUnitsIDs.length > 0) {\n          this.$store.state.dhis.user.orgId = orgUnitsIDs.shift().id\n          axios.get(this.$store.state.dhis.host + 'api/organisationUnits/' + this.$store.state.dhis.user.orgId, { auth }).then((orgUnits) => {\n            this.$store.state.dhis.user.orgName = orgUnits.data.displayName\n            return callback(userData)\n          })\n        }\n      }).catch((err) => {\n        this.$store.state.dialogError = true\n        this.$store.state.errorTitle = 'Error'\n        if (err.response && err.response.data && err.response.data.httpStatusCode === 401) {\n          this.$store.state.errorDescription = 'Unauthorized, ensure that your DHIS2 login is active'\n          this.$router.push({ name: 'Logout' })\n        } else {\n          this.$store.state.errorDescription = 'Unauthorized, please reload the app'\n        }\n      })\n    }\n  },\n  created () {\n    this.setDHIS2Credentials()\n    this.getRoles()\n    this.getDHIS2UserData((dhis2User) => {\n      let isAdmin = dhis2User.data.userCredentials.userRoles.find((role) => {\n        return role.id === this.$store.state.config.generalConfig.externalAuth.adminRole\n      })\n      let roleID, roleText\n      if (isAdmin) {\n        let role = this.roles.find((role) => {\n          return role.text === 'Admin'\n        })\n        roleID = role.value\n        roleText = role.text\n      } else {\n        let role = this.roles.find((role) => {\n          return role.text === 'Data Manager'\n        })\n        roleID = role.value\n        roleText = role.text\n      }\n      axios.get('/getUser/' + dhis2User.data.userCredentials.username).then((user) => {\n        if (user.data.userID) {\n          this.$store.state.auth.username = dhis2User.data.userCredentials.username\n          this.$store.state.auth.userID = user.data.userID\n          this.$store.state.auth.role = roleText\n          this.$store.state.initializingApp = true\n          this.$store.state.denyAccess = false\n          eventBus.$emit('getConfig')\n        } else {\n          let formData = new FormData()\n          formData.append('firstName', dhis2User.data.firstName)\n          formData.append('otherName', '')\n          formData.append('password', dhis2User.data.surname)\n          formData.append('userName', dhis2User.data.userCredentials.username)\n          formData.append('surname', dhis2User.data.surname)\n          formData.append('role', roleID)\n          axios.post('/addUser', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          }).then(() => {\n            axios.get('/getUser/' + dhis2User.data.userCredentials.username).then((user) => {\n              if (user.data.userID) {\n                this.$store.state.auth.username = dhis2User.data.userCredentials.username\n                this.$store.state.auth.userID = user.data.userID\n                this.$store.state.auth.role = user.data.role\n                this.$store.state.initializingApp = true\n                this.$store.state.denyAccess = false\n                eventBus.$emit('getConfig')\n              }\n            })\n          })\n        }\n      })\n    })\n  }\n}\n</script>\n"],"sourceRoot":"src/components/disabledAuth"}]}