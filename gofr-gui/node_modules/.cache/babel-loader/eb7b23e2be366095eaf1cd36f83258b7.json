{"remainingRequest":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-questionnaire.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/facility-recon-gui/src/components/ihris/ihris-questionnaire.vue","mtime":1619602234419},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/facility-recon-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ihris-questionnaire.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container class=\"my-3\">\n\n    <v-form\n      ref=\"form\"\n      v-model=\"valid\"\n    >\n\n      <slot></slot>\n      <v-overlay :value=\"overlay\">\n        <v-progress-circular\n          size=\"50\"\n          color=\"primary\"\n          indeterminate\n          ></v-progress-circular>\n        <v-btn icon @click=\"overlay = false\"><v-icon>mdi-close</v-icon></v-btn>\n      </v-overlay>\n\n      <v-navigation-drawer\n        app\n        left\n        permanent\n        clipped\n        class=\"primary darken-1 white--text\"\n        style=\"z-index: 3;\"\n        >\n        <v-list class=\"white--text\">\n          <v-list-item>\n            <v-btn dark class=\"secondary\" @click=\"$router.go(-1)\">\n              <v-icon light>mdi-pencil-off</v-icon>\n              <span>Cancel</span>\n            </v-btn>\n            <v-spacer></v-spacer>\n            <v-btn v-if=\"valid\" dark class=\"success darken-1\" @click=\"processFHIR()\" :disabled=\"!valid\">\n              <v-icon light>mdi-content-save</v-icon>\n              <span>Save</span>\n            </v-btn>\n            <v-btn v-else dark class=\"warning\" @click=\"$refs.form.validate()\">\n              <v-icon light>mdi-content-save</v-icon>\n              <span>Save</span>\n            </v-btn>\n          </v-list-item>\n          <v-divider color=\"white\"></v-divider>\n          <v-subheader class=\"white--text\" v-if=\"sectionMenu\"><h2>Sections</h2></v-subheader>\n          <v-list-item v-for=\"section in sectionMenu\" :href=\"'#section-'+section.id\" :key=\"section.id\">\n            <v-list-item-content class=\"white--text\">\n              <v-list-item-title class=\"text-uppercase\"><h4>{{ section.title }}</h4></v-list-item-title>\n              <v-list-item-subtitle class=\"white--text\">{{ section.desc }}</v-list-item-subtitle>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n\n      </v-navigation-drawer>\n    </v-form>\n  </v-container>\n\n</template>\n\n<script>\nimport axios from 'axios'\nconst querystring = require('querystring')\nexport default {\n  name: \"ihris-questionnaire\",\n  props: [\"id\", \"url\", \"title\", \"description\", \"purpose\", \"section-menu\", \"view-page\", \"edit\", \"constraints\"],\n  data: function() {\n    return {\n      fhir: {},\n      loading: false,\n      overlay: false,\n      isEdit: false,\n      valid: true,\n      advancedValid: true\n    }\n  },\n  created: function() {\n    //console.log(\"QUERY\",this.$route.query)\n  },\n  methods: {\n    processFHIR: async function() {\n      this.$refs.form.validate()\n      if ( !this.valid ) return\n      this.advancedValid = true\n      this.overlay = true\n      this.loading = true\n\n      const processChildren = async ( obj, children, itemMap ) => {\n        //console.log(\"called on \"+parent)\n        if ( !itemMap ) itemMap = {}\n\n        for ( let child of children ) {\n\n          let next = obj\n          let myItemMap = {}\n\n          if ( child.isArray ) {\n            //console.log(\"ARRAY\", child.path)\n          } else if ( child.isQuestionnaireGroup ) {\n            //console.log(\"GROUP\", child.path)\n            let section = { linkId: child.path, text: child.label, item: [] }\n            next.push( section )\n            next = section.item\n          } else if ( child.qField ) {\n            //console.log(\"PROCESS\",path,child.qField,child.value)\n            let item\n            if ( itemMap.hasOwnProperty( child.path ) ) {\n              item = itemMap[ child.path ]\n            } else {\n              item = { linkId: child.path, answer: [] }\n              itemMap[child.path] = item\n              next.push( item )\n            }\n            let answer = {}\n            answer[child.qField] = child.value\n            item.answer.push( answer )\n            if ( child.constraints ) {\n              child.errors = []\n              try {\n                this.advancedValid = this.advancedValid && await this.$fhirutils.checkConstraints( child.constraints,\n                  this.constraints, child.value, child.errors )\n              } catch( err ) {\n                this.advancedValid = false\n                child.errors.push(\"An unknown error occurred.\")\n                console.log(err)\n              }\n            }\n          }\n\n          if ( child.$children ) {\n            //console.log(\"PROCESSING CHILDREN OF\",child.path)\n            try {\n              await processChildren( next, child.$children, myItemMap )\n            } catch( err ) {\n              this.advancedValid = false\n              console.log(err)\n            }\n\n          }\n          if ( child.isQuestionnaireGroup && child.constraints ) {\n            child.errors = []\n            try {\n              this.advancedValid = this.advancedValid && await this.$fhirutils.checkConstraints( child.constraints,\n                this.constraints, next, child.errors )\n            } catch( err ) {\n              this.advancedValid = false\n              child.errors.push(\"An unknown error occurred.\")\n              console.log(err)\n            }\n          }\n\n\n        }\n\n      }\n\n\n      //console.log(this.field)\n      this.fhir = {\n        resourceType: \"QuestionnaireResponse\",\n        questionnaire: this.url,\n        status: \"completed\",\n        item: []\n      }\n      //console.log(this)\n      try {\n        await processChildren( this.fhir.item, this.$children )\n      } catch( err ) {\n        this.advancedValid = false\n        console.log(err)\n      }\n      if ( !this.advancedValid ) {\n        this.overlay = false\n        this.loading = false\n        this.$store.commit('setMessage', { type: 'error', text: 'There were errors on the form.' })\n        return\n      }\n      console.log(\"SAVE\",this.fhir)\n      axios({\n        url: \"/fhir/QuestionnaireResponse?\"+querystring.stringify(this.$route.query),\n        method: \"POST\",\n        data: this.fhir\n      } ).then(() => {\n        this.overlay = false\n        this.loading = false\n        this.$store.state.alert.show = true\n        this.$store.state.alert.width = '600px'\n        this.$store.state.alert.msg = 'Saved successfully!'\n        this.$store.state.alert.type = 'success'\n      } ).catch(err => {\n        this.overlay = false\n        this.loading = false\n        console.log(err)\n        this.$store.state.alert.show = true\n        this.$store.state.alert.width = '600px'\n        this.$store.state.alert.msg = 'Failed to save!'\n        this.$store.state.alert.type = 'error'\n      } )\n    }\n  }\n}\n\n\n</script>\n"],"sourceRoot":"src/components/ihris"}]}