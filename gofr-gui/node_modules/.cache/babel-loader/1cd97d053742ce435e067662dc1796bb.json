{"remainingRequest":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js!/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ally/gofr/gofr-gui/src/components/ihris/ihris-array.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ally/gofr/gofr-gui/src/components/ihris/ihris-array.vue","mtime":1619258072495},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/babel-loader/lib/index.js","mtime":1619257191453},{"path":"/home/ally/gofr/gofr-gui/node_modules/cache-loader/dist/cjs.js","mtime":1619257191457},{"path":"/home/ally/gofr/gofr-gui/node_modules/vue-loader/lib/index.js","mtime":1619257191305}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiaWhyaXMtYXJyYXkiLAogIHByb3BzOiBbImxhYmVsIiwgIm1pbiIsICJtYXgiLCAiaWQiLCAicGF0aCIsICJzbG90UHJvcHMiLCAiZmllbGQiLCAiZmllbGRUeXBlIiwgInByb2ZpbGUiLCAidGFyZ2V0UHJvZmlsZSIsICJzbGljZU5hbWUiLCAiZWRpdCJdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbnB1dHM6IFtdLAogICAgICBzb3VyY2U6IHsKICAgICAgICBwYXRoOiAiIiwKICAgICAgICBkYXRhOiBbXQogICAgICB9LAogICAgICBpc0FycmF5OiB0cnVlLAogICAgICBsb2NrV2F0Y2g6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2V0dXBJbnB1dHMoKTsKICB9LAogIHdhdGNoOiB7CiAgICBzbG90UHJvcHM6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICBpZiAoIXRoaXMubG9ja1dhdGNoKSB7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCJXQVRDSEFSUiIsdGhpcy5wYXRoLHRoaXMuc2xvdFByb3BzLnNvdXJjZSkKICAgICAgICAgIHRoaXMuc2V0dXBJbnB1dHMoKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldHVwSW5wdXRzOiBmdW5jdGlvbiBzZXR1cElucHV0cygpIHsKICAgICAgdGhpcy5pbnB1dHMgPSBbXTsKICAgICAgdGhpcy5zb3VyY2UgPSB7CiAgICAgICAgcGF0aDogdGhpcy5wYXRoLAogICAgICAgIGRhdGE6IHt9CiAgICAgIH07CiAgICAgIHZhciBwYXRoID0gdGhpcy5wYXRoOwoKICAgICAgaWYgKHRoaXMuc2xvdFByb3BzICYmIHRoaXMuc2xvdFByb3BzLnNvdXJjZSkgewogICAgICAgIHZhciBleHByZXNzaW9uID0gdGhpcy5maWVsZDsKCiAgICAgICAgaWYgKHRoaXMuc2xpY2VOYW1lKSB7CiAgICAgICAgICBleHByZXNzaW9uID0gdGhpcy5maWVsZC5yZXBsYWNlKC8oW146XSspOiguKykvLCAiJDEud2hlcmUodXJsPSciICsgdGhpcy5wcm9maWxlICsgIicpIik7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnNvdXJjZS5kYXRhID0gdGhpcy4kZmhpcnBhdGguZXZhbHVhdGUodGhpcy5zbG90UHJvcHMuc291cmNlLmRhdGEsIGV4cHJlc3Npb24pOwoKICAgICAgICBpZiAodGhpcy5zb3VyY2UuZGF0YS5sZW5ndGggPiAwKSB7CiAgICAgICAgICB0aGlzLmxvY2tXYXRjaCA9IHRydWU7CiAgICAgICAgfQogICAgICB9CgogICAgICBmb3IgKHZhciBpZHggPSAwOyBpZHggPCB0aGlzLmFjdHVhbE1pbjsgaWR4KyspIHsKICAgICAgICB2YXIgbGFiZWwgPSB0aGlzLmxhYmVsOwoKICAgICAgICBpZiAodGhpcy5kaXNwbGF5SW5kZXgpIHsKICAgICAgICAgIGxhYmVsICs9ICIgKCIgKyAoaWR4ICsgMSkgKyAiKSI7CiAgICAgICAgfQoKICAgICAgICB2YXIgaW5wdXQgPSB7CiAgICAgICAgICBsYWJlbDogbGFiZWwsCiAgICAgICAgICBpbmRleDogaWR4LAogICAgICAgICAgZGF0YTogdW5kZWZpbmVkCiAgICAgICAgfTsKCiAgICAgICAgaWYgKHRoaXMuc291cmNlLmRhdGFbaWR4XSkgewogICAgICAgICAgaW5wdXQuc291cmNlID0gewogICAgICAgICAgICBkYXRhOiB0aGlzLnNvdXJjZS5kYXRhW2lkeF0sCiAgICAgICAgICAgIHBhdGg6IHBhdGggKyAiWyIgKyBpZHggKyAiXSIsCiAgICAgICAgICAgIGZyb21BcnJheTogdHJ1ZQogICAgICAgICAgfTsKICAgICAgICB9CgogICAgICAgIHRoaXMuaW5wdXRzLnB1c2goaW5wdXQpOwogICAgICB9CiAgICB9LAogICAgYWRkUm93OiBmdW5jdGlvbiBhZGRSb3coKSB7CiAgICAgIHRoaXMubG9ja1dhdGNoID0gdHJ1ZTsKCiAgICAgIGlmICh0aGlzLmFkZEF2YWlsYWJsZSkgewogICAgICAgIHZhciBsYWJlbCA9IHRoaXMubGFiZWw7CgogICAgICAgIGlmICh0aGlzLmRpc3BsYXlJbmRleCkgewogICAgICAgICAgbGFiZWwgKz0gIiAoIiArICh0aGlzLmlucHV0cy5sZW5ndGggKyAxKSArICIpIjsKICAgICAgICB9CgogICAgICAgIHRoaXMuaW5wdXRzLnB1c2goewogICAgICAgICAgbGFiZWw6IGxhYmVsLAogICAgICAgICAgaW5kZXg6IHRoaXMuaW5wdXRzLmxlbmd0aAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgcmVtb3ZlUm93OiBmdW5jdGlvbiByZW1vdmVSb3coKSB7CiAgICAgIGlmICh0aGlzLnN1YkF2YWlsYWJsZSkgewogICAgICAgIHRoaXMuaW5wdXRzLnNwbGljZSgtMSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRGaWVsZDogZnVuY3Rpb24gZ2V0RmllbGQoKSB7CiAgICAgIHJldHVybiB0aGlzLmZpZWxkOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGFjdHVhbE1pbjogZnVuY3Rpb24gYWN0dWFsTWluKCkgewogICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy5taW4sIHRoaXMuc291cmNlLmRhdGEubGVuZ3RoID4gMCA/IHRoaXMuc291cmNlLmRhdGEubGVuZ3RoIDogMCk7IC8vcmV0dXJuIHRoaXMubWluIDwgMSA/IDEgOiB0aGlzLm1pbgogICAgfSwKICAgIGFkZEF2YWlsYWJsZTogZnVuY3Rpb24gYWRkQXZhaWxhYmxlKCkgewogICAgICByZXR1cm4gdGhpcy5tYXggPT09ICIqIiB8fCB0aGlzLmlucHV0cy5sZW5ndGggPCB0aGlzLm1heDsKICAgIH0sCiAgICBkaXNwbGF5SW5kZXg6IGZ1bmN0aW9uIGRpc3BsYXlJbmRleCgpIHsKICAgICAgcmV0dXJuIHRoaXMubWF4ID09PSAiKiIgfHwgdGhpcy5tYXggPiAxOwogICAgfSwKICAgIHN1YkF2YWlsYWJsZTogZnVuY3Rpb24gc3ViQXZhaWxhYmxlKCkgewogICAgICByZXR1cm4gdGhpcy5hY3R1YWxNaW4gPCB0aGlzLmlucHV0cy5sZW5ndGg7CiAgICB9LAogICAgc2ltcGxlRGlzcGxheTogZnVuY3Rpb24gc2ltcGxlRGlzcGxheSgpIHsKICAgICAgcmV0dXJuICF0aGlzLmVkaXQgJiYgWyJzdHJpbmciXS5pbmNsdWRlcyh0aGlzLmZpZWxkVHlwZSk7CiAgICB9LAogICAgc2ltcGxlVmFsdWU6IGZ1bmN0aW9uIHNpbXBsZVZhbHVlKCkgewogICAgICByZXR1cm4gdGhpcy5zb3VyY2UuZGF0YS5qb2luKCIgIik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ihris-array.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,OAAA,EAAA,WAAA,EAAA,SAAA,EAAA,eAAA,EAAA,WAAA,EAAA,MAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAAA,QAAA,IAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,SAAA,EAAA;AAJA,KAAA;AAMA,GAVA;AAWA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,WAAA;AACA,GAbA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,OADA,qBACA;AACA,YAAA,CAAA,KAAA,SAAA,EAAA;AACA;AACA,eAAA,WAAA;AACA;AACA,OANA;AAOA,MAAA,IAAA,EAAA;AAPA;AADA,GAdA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,MAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA;AAAA,QAAA,IAAA,EAAA,KAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;;AACA,UAAA,KAAA,SAAA,IAAA,KAAA,SAAA,CAAA,MAAA,EAAA;AACA,YAAA,UAAA,GAAA,KAAA,KAAA;;AACA,YAAA,KAAA,SAAA,EAAA;AACA,UAAA,UAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,cAAA,EAAA,mBAAA,KAAA,OAAA,GAAA,IAAA,CAAA;AACA;;AACA,aAAA,MAAA,CAAA,IAAA,GAAA,KAAA,SAAA,CAAA,QAAA,CAAA,KAAA,SAAA,CAAA,MAAA,CAAA,IAAA,EAAA,UAAA,CAAA;;AACA,YAAA,KAAA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,SAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,KAAA,SAAA,EAAA,GAAA,EAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,KAAA;;AACA,YAAA,KAAA,YAAA,EAAA;AACA,UAAA,KAAA,IAAA,QAAA,GAAA,GAAA,CAAA,IAAA,GAAA;AACA;;AACA,YAAA,KAAA,GAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;;AACA,YAAA,KAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,GAAA;AAAA,YAAA,IAAA,EAAA,KAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAAA,YAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA;AAAA,YAAA,SAAA,EAAA;AAAA,WAAA;AACA;;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,KA1BA;AA2BA,IAAA,MAAA,EAAA,kBAAA;AACA,WAAA,SAAA,GAAA,IAAA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,KAAA;;AACA,YAAA,KAAA,YAAA,EAAA;AACA,UAAA,KAAA,IAAA,QAAA,KAAA,MAAA,CAAA,MAAA,GAAA,CAAA,IAAA,GAAA;AACA;;AACA,aAAA,MAAA,CAAA,IAAA,CAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,KAAA,EAAA,KAAA,MAAA,CAAA;AAAA,SAAA;AACA;AACA,KApCA;AAqCA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,YAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA;AACA,KAzCA;AA0CA,IAAA,QAAA,EAAA,oBAAA;AACA,aAAA,KAAA,KAAA;AACA;AA5CA,GAzBA;AAuEA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,GAAA,EAAA,KAAA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CADA,CAEA;AACA,KAJA;AAKA,IAAA,YAAA,EAAA,wBAAA;AACA,aAAA,KAAA,GAAA,KAAA,GAAA,IAAA,KAAA,MAAA,CAAA,MAAA,GAAA,KAAA,GAAA;AACA,KAPA;AAQA,IAAA,YAAA,EAAA,wBAAA;AACA,aAAA,KAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,GAAA,CAAA;AACA,KAVA;AAWA,IAAA,YAAA,EAAA,wBAAA;AACA,aAAA,KAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA;AACA,KAbA;AAcA,IAAA,aAAA,EAAA,yBAAA;AACA,aAAA,CAAA,KAAA,IAAA,IAAA,CAAA,QAAA,EAAA,QAAA,CAAA,KAAA,SAAA,CAAA;AACA,KAhBA;AAiBA,IAAA,WAAA,EAAA,uBAAA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA;AAnBA;AAvEA,CAAA","sourcesContent":["<template>\n  <div>\n    <div v-if=\"simpleDisplay\">\n      <v-row dense>\n        <v-col :cols=\"$store.state.cols.header\" class=\"font-weight-bold\">{{label}}</v-col><v-col :cols=\"$store.state.cols.header\">{{simpleValue}}</v-col>\n      </v-row>\n      <v-divider></v-divider>\n    </div>\n    <v-container v-else>\n      <v-card>\n        <v-system-bar\n          color=\"secondary\"\n          dark\n          v-if=\"edit\"\n          >\n          {{ label }}\n          <v-spacer></v-spacer>\n          <v-btn v-if=\"subAvailable\" icon @click=\"removeRow()\"><v-icon class=\"font-weight-bold\">mdi-minus</v-icon></v-btn>\n          <v-btn v-if=\"addAvailable\" icon @click=\"addRow()\"><v-icon>mdi-plus</v-icon></v-btn>\n        </v-system-bar>\n        <slot v-for=\"input in inputs\" :input=\"input\" :source=\"input.source\"></slot>\n      </v-card>\n    </v-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ihris-array\",\n  props: [\"label\", \"min\", \"max\", \"id\", \"path\", \"slotProps\", \"field\", \"fieldType\", \"profile\", \"targetProfile\", \"sliceName\", \"edit\" ],\n  data: function() {\n    return {\n      inputs: [],\n      source: { path: \"\", data: [] },\n      isArray: true,\n      lockWatch: false\n    }\n  },\n  created: function() {\n    this.setupInputs()\n  },\n  watch: {\n    slotProps: {\n      handler() {\n        if ( !this.lockWatch ) {\n          //console.log(\"WATCHARR\",this.path,this.slotProps.source)\n          this.setupInputs()\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    setupInputs: function() {\n      this.inputs = []\n      this.source = { path: this.path, data: {} }\n      let path = this.path\n      if ( this.slotProps && this.slotProps.source ) {\n        let expression = this.field\n        if ( this.sliceName ) {\n          expression = this.field.replace(/([^:]+):(.+)/, \"$1.where(url='\"+this.profile+\"')\")\n        }\n        this.source.data = this.$fhirpath.evaluate( this.slotProps.source.data, expression)\n        if ( this.source.data.length > 0 ) {\n          this.lockWatch = true\n        }\n      }\n      for( let idx = 0; idx < this.actualMin; idx++ ) {\n        let label = this.label\n        if ( this.displayIndex ) {\n          label += \" (\"+(idx+1)+\")\"\n        }\n        let input = { label: label, index: idx, data: undefined } \n        if ( this.source.data[idx] ) {\n          input.source = { data: this.source.data[idx], path: path+\"[\"+idx+\"]\", fromArray: true }\n        }\n        this.inputs.push( input )\n      }\n    },\n    addRow: function() {\n      this.lockWatch = true\n      if ( this.addAvailable ) {\n        let label = this.label\n        if ( this.displayIndex ) {\n          label += \" (\"+(this.inputs.length+1)+\")\"\n        }\n        this.inputs.push( { label: label, index: this.inputs.length } )\n      }\n    },\n    removeRow: function() {\n      if ( this.subAvailable ) {\n        this.inputs.splice(-1)\n      }\n    },\n    getField: function() {\n      return this.field\n    }\n  },\n  computed: {\n    actualMin: function() {\n      return Math.max( this.min, ( this.source.data.length > 0 ? this.source.data.length : 0 ) )\n      //return this.min < 1 ? 1 : this.min\n    },\n    addAvailable: function() {\n      return this.max === \"*\" || this.inputs.length < this.max\n    },\n    displayIndex: function() {\n      return this.max === \"*\" || this.max > 1\n    },\n    subAvailable: function() {\n      return this.actualMin < this.inputs.length\n    },\n    simpleDisplay: function() {\n      return !this.edit && [ \"string\" ].includes(this.fieldType)\n    },\n    simpleValue: function() {\n      return this.source.data.join(\" \")\n    }\n\n  }\n}\n</script>\n"],"sourceRoot":"src/components/ihris"}]}