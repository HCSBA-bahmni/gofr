---
- name: HAPI FHIR Server
  hosts: all
  remote_user: "{{ user }}"
  become: true
  tags: prep

  
  vars_prompt:

    - name: "user"
      prompt: "Please enter the username (with sudo)"
      private: no

    - name: "pgpass"
      prompt: "Please provide the password for the hapi postgres user in plain text (it will be md5-hashed)"
      private: no



  tasks:

  - name: Create a new database with name hapi
    postgresql_db:
      name: hapi
    become_user: postgres


  - name: Connect to hapi database, create hapi user, and grant access
    postgresql_user:
      db: hapi
      name: hapi
      password: "{{ pgpass }}"
      encrypted: yes
      priv: ALL
    become_user: postgres


  - name: Confirm actions worked for hapi database/user
    become: yes
    become_user: postgres
    postgresql_info:
      db: hapi
      filter: "!settings"
    register: pginfo


  - debug:
      msg: "{{ pginfo }}"


  - name: Does hapi folder exist
    stat:
      path: $HOME/hapi-fhir-jpaserver-starter
    register: stat_result2


  - name: git clone repo (hapi jpa-server-starter tag:image/v5.5.2)
    git:
      repo: 'https://github.com/hapifhir/hapi-fhir-jpaserver-starter.git'
      dest: /home/{{ user }}/hapi-fhir-jpaserver-starter
      clone: yes
      # note that this blows away any existing changes to files
      force: yes
      version: image/v5.5.2
    when: stat_result2.stat.exists == False


  - name: git pull if updated
    git:
      repo: 'https://github.com/hapifhir/hapi-fhir-jpaserver-starter.git'
      dest: /home/{{ user }}/hapi-fhir-jpaserver-starter
      update: yes


  - name: maven --no-transfer-progress --batch-mode package
    shell: mvn package -DskipTests
    args:
      chdir: /home/{{ user }}/hapi-fhir-jpaserver-starter
    environment:
      MAVEN_OPTS: -Xmx2048m


# move package into /var/lib/tomcat9/webapps/
  - name: move war file to /var/lib/tomcat9/webapps/
    shell: cp ROOT.war /var/lib/tomcat9/webapps/
    args:
      chdir: /home/{{ user }}/hapi-fhir-jpaserver-starter/target/


  - name: Create a tomcast9 override directory if it does not exist
    ansible.builtin.file:
      path: /etc/systemd/system/tomcat9.service.d
      state: directory
      owner: root
      group: root
      mode: '0755'


# todo move over tomcat9 override file for env vars
  - name: Copy tomcat9 override file
    ansible.builtin.copy:
      src: /home/{{ user }}/gofr/packaging/ansible/tomcat9_override.conf
      dest: /etc/systemd/system/tomcat9.service.d/tomcat9_override.conf
      owner: root
      group: root
      mode: '0755'



# kick tomcat
  - name: kick tomcat9
    service: 
      name: tomcat9.service
      state: restarted
      enabled: yes


# pause to let tomcat start and then check status
  - pause:
      seconds: 5

# status
  - name: status
    command: systemctl status tomcat9.service
    register: status


  - debug:
      msg: "{{ status.stdout_lines }}"


  - name: Gather facts on listening ports
    listen_ports_facts:


  - name: List TCP ports
    debug:
      msg: "{{ ansible_facts.tcp_listen  | map(attribute='port') | sort | list }}"
