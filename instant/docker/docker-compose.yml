version: '3.3'

services:
#   keycloak:
#     container_name: keycloak
#     image: jboss/keycloak:15.0.2
#     volumes:
#       - ../../../resources/keycloak/themes/gofr:/opt/jboss/keycloak/themes/gofr
#     command: ["-Djboss.http.port=8084"]
#     ports:
#       - "8084:8084"
#     environment:
#       - KEYCLOAK_USER=admin
#       - KEYCLOAK_PASSWORD=admin

  postgres:
    image: postgres:15
    container_name: gofr-postgres
    restart: always
    environment:
      - POSTGRES_DB=gofr
      - POSTGRES_USER=gofr_user
      - POSTGRES_PASSWORD=gofr_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis
    restart: always
    volumes:
      - redis-data:/data

  fhir:
    image: hapiproject/hapi:v5.5.2-distroless
    container_name: hapi-fhir
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hapi
      SPRING_DATASOURCE_USERNAME: hapi
      SPRING_DATASOURCE_PASSWORD: hapi
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

      # HAPI FHIR props
      HAPI_FHIR_IMPLEMENTATIONGUIDES_MCSD_NAME: ihe.iti.mcsd
      HAPI_FHIR_IMPLEMENTATIONGUIDES_MCSD_VERSION: "3.5.0"
      HAPI_FHIR_BULK_EXPORT_ENABLED: "true"
      HAPI_FHIR_SUBSCRIPTION_RESTHOOK_ENABLED: "true"
      HAPI_FHIR_SUBSCRIPTION_WEBSOCKET_ENABLED: "true"
      HAPI_FHIR_PARTITIONING_ENABLED: "true"
      HAPI_FHIR_PARTITIONING_ALLOW_REFERENCES_ACROSS_PARTITIONS: "true"
      HAPI_FHIR_PARTITIONING_PARTITIONING_INCLUDE_IN_SEARCH_HASHES: "false"
      HAPI_FHIR_ENABLE_INDEX_MISSING_FIELDS: "true"
      HAPI_FHIR_AUTO_CREATE_PLACEHOLDER_REFERENCE_TARGETS: "true"
      HAPI_FHIR_CLIENT_ID_STRATEGY: ANY

      # Hibernate Search (Lucene)
      SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_ENABLED: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_BACKEND_TYPE: lucene
      SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_BACKEND_ANALYSIS_CONFIGURER: ca.uhn.fhir.jpa.search.HapiLuceneAnalysisConfigurer
      SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_BACKEND_DIRECTORY_TYPE: local-filesystem
      SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_BACKEND_DIRECTORY_ROOT: /lucene
      SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_BACKEND_LUCENE_VERSION: lucene_current
    volumes:
      - hapi-data:/lucene
  gofr:
    container_name: gofr
    image: intrahealth/gofr:latest
    depends_on:
      - fhir
      - postgres
    environment:
      # use gofr for authn/authz which is default
      # - app__idp=keycloak
      - DATABASE_URL=postgres://gofr_user:gofr_pass@postgres:5432/gofr
      - mCSD__server__protocal=http
      - mCSD__server__host=fhir
      - mCSD__server__port=8080
      - mCSD__server__basePath=fhir
      - app__site__path=/src/gofr-backend/docker-site
      - app__core__path=/src/gofr-backend/lib
      - app__installed=${false}
      - app__idp=gofr
      #- keycloak__baseURL=http://keycloak:8084/auth
      - REDIS_HOST=redis
      - JWT_SECRET=supersecreto
      - DEFAULT_ADMIN_USERNAME=admin
      - DEFAULT_ADMIN_PASSWORD=changeme
    ports:
      - "4000:4000"
    restart: always


networks:
# set app-wide default network
  default:
    name: demo


volumes:
  postgres_data:
  redis-data:
  hapi-data:
